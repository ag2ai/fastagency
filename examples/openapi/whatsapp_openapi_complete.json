{
    "openapi": "3.0.1",
    "servers": [
        {
            "url": "https://api.infobip.com"
        }
    ],
    "info": {
        "title": "Infobip WHATSAPP OpenApi Specification",
        "description": "OpenApi Spec containing WHATSAPP public endpoints for Postman collection purposes.",
        "contact": {
            "name": "Infobip support",
            "email": "support@infobip.com"
        },
        "version": "1.0.195",
        "x-additionalInfo": {
            "title": "Integration essentials and developer toolbox",
            "markdown": "# Essentials\n​\n- [Get Infobip account](https://www.infobip.com/contact)\n- [Get API key](https://portal.infobip.com/settings/accounts/api-keys)\n- [Authentication and authorization details](https://www.infobip.com/docs/essentials/api-authentication)\n- [My base URL](https://www.infobip.com/docs/essentials/base-url)\n- [Response Status and Error Codes](https://www.infobip.com/docs/essentials/response-status-and-error-codes)\n- [Supported content types](https://www.infobip.com/docs/essentials/content-types)\n- [Libraries](https://www.infobip.com/docs/sdk)\n- [Demo applications](https://www.infobip.com/docs/essentials/demo-applications)\n- [API service status](https://www.infobip.com/docs/essentials/api-service-status)\n- [Integration best practices](https://www.infobip.com/docs/essentials/integration-best-practices)\n​\n"
        },
        "x-homepage": {
            "markdown": "### Customer engagement\n> Complete API solutions that will help you drive better outcomes for your customers and business, throughout the customer journey with rich set of APIs for managing People, Flow, Conversations and more.\n>\n> [SEE ALL SOLUTIONS](#customer-engagement)\n​\n### Channels\n> If you require a straight forward connectivity for your existing solutions this is what you are looking for. Implement one-way or two-way communication over any major mobile messaging channel like SMS, Voice, RCS, WhatsApp, Viber and more.\n>\n> [SEE ALL CHANNELS](#channels)\n​\n### Platform and connectivity\n>A powerful set of APIs for managing phone numbers, IoT and more.\n>\n>[SEE ALL](#platform-&-connectivity)\n​\n---\n### What are you working on?\nTake your integration to the next level - explore our [partnership program](https://www.infobip.com/partnership)!\n"
        }
    },
    "paths": {
        "/whatsapp/1/message/template": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp template message",
                "description": "Send a single or multiple template messages to a one or more recipients. Template messages can be sent and delivered at anytime. Each template sent needs to be registered and pre-approved by WhatsApp.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-template-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.BulkMessage"
                            },
                            "examples": {
                                "Body template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": [
                                                                "Placeholder Value 1",
                                                                "Placeholder Value 2"
                                                            ]
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Text header template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "header": {
                                                            "type": "TEXT",
                                                            "placeholder": "placeholder value"
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Document header template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "header": {
                                                            "type": "DOCUMENT",
                                                            "mediaUrl": "http://example.com/document",
                                                            "filename": "document.pdf"
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Image header template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "header": {
                                                            "type": "IMAGE",
                                                            "mediaUrl": "http://example.com/image"
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Video header template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "header": {
                                                            "type": "VIDEO",
                                                            "mediaUrl": "http://example.com/video"
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Location header template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "header": {
                                                            "type": "LOCATION",
                                                            "latitude": 45.79359,
                                                            "longitude": 15.94613
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Quick reply button template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "buttons": [
                                                            {
                                                                "type": "QUICK_REPLY",
                                                                "parameter": "Yes"
                                                            },
                                                            {
                                                                "type": "QUICK_REPLY",
                                                                "parameter": "No"
                                                            }
                                                        ]
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Url button template message": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": []
                                                        },
                                                        "buttons": [
                                                            {
                                                                "type": "URL",
                                                                "parameter": "docs"
                                                            }
                                                        ]
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data"
                                            }
                                        ]
                                    }
                                },
                                "Template message with SMS failover": {
                                    "value": {
                                        "messages": [
                                            {
                                                "from": "441134960000",
                                                "to": "441134960001",
                                                "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                "content": {
                                                    "templateName": "template_name",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": [
                                                                "Placeholder Value 1"
                                                            ]
                                                        }
                                                    },
                                                    "language": "en_GB"
                                                },
                                                "callbackData": "Callback data",
                                                "smsFailover": {
                                                    "from": "InfoSMS",
                                                    "text": "SMS message to be sent if WhatsApp template message could not be delivered."
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.BulkMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "messages": [
                                                {
                                                    "to": "441134960001",
                                                    "messageCount": 1,
                                                    "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                                    "status": {
                                                        "groupId": 1,
                                                        "groupName": "PENDING",
                                                        "id": 7,
                                                        "name": "PENDING_ENROUTE",
                                                        "description": "Message sent to next instance"
                                                    }
                                                }
                                            ],
                                            "bulkId": "2034072219640523073"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Extra whitespaces error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.templateData.header.placeholder": [
                                                            "cannot have new-line/tab characters or more than 4 consecutive spaces"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.templateData.header.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Filename validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.templateData.header.filename": [
                                                            "size must be between 1 and 240"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/text": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp text message",
                "description": "Send a text message to a single recipient. Text messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-text-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TextMessage"
                            },
                            "examples": {
                                "Text message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "text": "Some text"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Text message with previewable url": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "text": "Some text with url: http://example.com",
                                            "previewUrl": true
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Text validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.text": [
                                                            "size must be between 1 and 4096",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/document": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp document message",
                "description": "Send a document to a single recipient. Document messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-document-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.DocumentMessage"
                            },
                            "examples": {
                                "Document message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/document"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Document message with all fields": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/document",
                                            "caption": "Some document caption",
                                            "filename": "filename.pdf"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Caption validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.caption": [
                                                            "size must be between 0 and 3000"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/image": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp image message",
                "description": "Send an image to a single recipient. Image messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-image-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ImageMessage"
                            },
                            "examples": {
                                "Image message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/image"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Image message with caption": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/image",
                                            "caption": "Some image caption"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Caption validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.caption": [
                                                            "size must be between 0 and 3000"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/audio": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp audio message",
                "description": "Send an audio to a single recipient. Audio messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-audio-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.AudioMessage"
                            },
                            "examples": {
                                "Audio message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/audio"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/video": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp video message",
                "description": "Send a video to a single recipient. Video messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-video-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.VideoMessage"
                            },
                            "examples": {
                                "Video message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/video"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Video message with caption": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/video",
                                            "caption": "Some video caption"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Caption validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.caption": [
                                                            "size must be between 0 and 3000"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/sticker": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp sticker message",
                "description": "Send a sticker to a single recipient. Sticker messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-sticker-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.StickerMessage"
                            },
                            "examples": {
                                "Sticker message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "mediaUrl": "http://example.com/sticker"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/location": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp location message",
                "description": "Send a location to a single recipient. Location messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-location-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.LocationMessage"
                            },
                            "examples": {
                                "Location message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "latitude": 44.9526862,
                                            "longitude": 13.8545217
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Location message with all fields": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "latitude": 44.9526862,
                                            "longitude": 13.8545217,
                                            "name": "Infobip",
                                            "address": "Vodnjan, Croatia"
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Location validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.latitude": [
                                                            "must be greater than or equal to -90"
                                                        ],
                                                        "content.longitude": [
                                                            "must be less than or equal to 180"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/contact": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp contact message",
                "description": "Send a contact to a single recipient. Contact messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-contact-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ContactsMessage"
                            },
                            "examples": {
                                "Single contact message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "contacts": [
                                                {
                                                    "addresses": [
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "birthday": "2010-01-01T00:00:00.0000000+01:00",
                                                    "emails": [
                                                        {
                                                            "email": "John.Smith@example.com",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "email": "John.Smith.priv@example.com",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "name": {
                                                        "firstName": "John",
                                                        "lastName": "Smith",
                                                        "middleName": "B",
                                                        "namePrefix": "Mr.",
                                                        "formattedName": "Mr. John Smith"
                                                    },
                                                    "org": {
                                                        "company": "Company Name",
                                                        "department": "Department",
                                                        "title": "Director"
                                                    },
                                                    "phones": [
                                                        {
                                                            "phone": "+441134960019",
                                                            "type": "HOME",
                                                            "waId": "441134960019"
                                                        },
                                                        {
                                                            "phone": "+441134960000",
                                                            "type": "WORK",
                                                            "waId": "441134960000"
                                                        }
                                                    ],
                                                    "urls": [
                                                        {
                                                            "url": "http://example.com/John.Smith",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "url": "http://example.com/home/John.Smith",
                                                            "type": "HOME"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Multiple contacts message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "contacts": [
                                                {
                                                    "addresses": [
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "birthday": "2010-01-01T00:00:00.0000000+01:00",
                                                    "emails": [
                                                        {
                                                            "email": "John.Smith@example.com",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "email": "John.Smith.priv@example.com",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "name": {
                                                        "firstName": "John",
                                                        "lastName": "Smith",
                                                        "middleName": "B",
                                                        "namePrefix": "Mr.",
                                                        "formattedName": "Mr. John Smith"
                                                    },
                                                    "org": {
                                                        "company": "Company Name",
                                                        "department": "Department",
                                                        "title": "Director"
                                                    },
                                                    "phones": [
                                                        {
                                                            "phone": "+441134960019",
                                                            "type": "HOME",
                                                            "waId": "441134960019"
                                                        },
                                                        {
                                                            "phone": "+441134960000",
                                                            "type": "WORK",
                                                            "waId": "441134960000"
                                                        }
                                                    ],
                                                    "urls": [
                                                        {
                                                            "url": "http://example.com/John.Smith",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "url": "http://example.com/home/John.Smith",
                                                            "type": "HOME"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "addresses": [
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "street": "Istarska",
                                                            "city": "Vodnjan",
                                                            "zip": "52215",
                                                            "country": "Croatia",
                                                            "countryCode": "HR",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "birthday": "2010-01-01T00:00:00.0000000+01:00",
                                                    "emails": [
                                                        {
                                                            "email": "Alexander.Abraham@example.com",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "email": "Alexander.Abraham.priv@example.com",
                                                            "type": "HOME"
                                                        }
                                                    ],
                                                    "name": {
                                                        "firstName": "Alexander",
                                                        "lastName": "Abraham",
                                                        "middleName": "B",
                                                        "namePrefix": "Mr.",
                                                        "formattedName": "Mr. Alexander Abraham"
                                                    },
                                                    "org": {
                                                        "company": "Company Name",
                                                        "department": "Department",
                                                        "title": "Director"
                                                    },
                                                    "phones": [
                                                        {
                                                            "phone": "+441134960010",
                                                            "type": "HOME",
                                                            "waId": "441134960010"
                                                        },
                                                        {
                                                            "phone": "+441134960011",
                                                            "type": "WORK",
                                                            "waId": "441134960011"
                                                        }
                                                    ],
                                                    "urls": [
                                                        {
                                                            "url": "http://example.com/Alexander.Abraham",
                                                            "type": "WORK"
                                                        },
                                                        {
                                                            "url": "http://example.com/home/Alexander.Abraham",
                                                            "type": "HOME"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Incorrect date format error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.contacts[0].birthday": [
                                                            "must be in the YYYY-MM-DD format"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Incorrect email error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.contacts[0].emails[0].email": [
                                                            "must be a well-formed email address"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/interactive/buttons": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp interactive buttons message",
                "description": "Send an interactive buttons message to a single recipient. Interactive buttons messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-interactive-buttons-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsMessage"
                            },
                            "examples": {
                                "Interactive reply buttons message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "buttons": [
                                                    {
                                                        "type": "REPLY",
                                                        "id": "1",
                                                        "title": "Yes"
                                                    },
                                                    {
                                                        "type": "REPLY",
                                                        "id": "2",
                                                        "title": "No"
                                                    }
                                                ]
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Text header interactive reply buttons message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "buttons": [
                                                    {
                                                        "type": "REPLY",
                                                        "id": "1",
                                                        "title": "Yes"
                                                    },
                                                    {
                                                        "type": "REPLY",
                                                        "id": "2",
                                                        "title": "No"
                                                    }
                                                ]
                                            },
                                            "header": {
                                                "type": "TEXT",
                                                "text": "Header"
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Video header interactive reply buttons message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "buttons": [
                                                    {
                                                        "type": "REPLY",
                                                        "id": "1",
                                                        "title": "Yes"
                                                    },
                                                    {
                                                        "type": "REPLY",
                                                        "id": "2",
                                                        "title": "No"
                                                    }
                                                ]
                                            },
                                            "header": {
                                                "type": "VIDEO",
                                                "mediaUrl": "https://example.com/video"
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Image header interactive reply buttons message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "buttons": [
                                                    {
                                                        "type": "REPLY",
                                                        "id": "1",
                                                        "title": "Yes"
                                                    },
                                                    {
                                                        "type": "REPLY",
                                                        "id": "2",
                                                        "title": "No"
                                                    }
                                                ]
                                            },
                                            "header": {
                                                "type": "IMAGE",
                                                "mediaUrl": "https://example.com/image"
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Document header interactive reply buttons message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "buttons": [
                                                    {
                                                        "type": "REPLY",
                                                        "id": "1",
                                                        "title": "Yes"
                                                    },
                                                    {
                                                        "type": "REPLY",
                                                        "id": "2",
                                                        "title": "No"
                                                    }
                                                ]
                                            },
                                            "header": {
                                                "type": "DOCUMENT",
                                                "mediaUrl": "https://example.com/document",
                                                "filename": "document.pdf"
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Url validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.header.mediaUrl": [
                                                            "size must be between 1 and 2048",
                                                            "is not a valid url",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Body text validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.body.text": [
                                                            "size must be between 1 and 1024",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Buttons validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.action.buttons": [
                                                            "ids and titles must be unique",
                                                            "size must be between 1 and 3"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/message/interactive/list": {
            "post": {
                "tags": [
                    "Send WhatsApp Message"
                ],
                "summary": "Send WhatsApp interactive list message",
                "description": "Send an interactive list message to a single recipient. Interactive list messages can only be successfully delivered, if the recipient has contacted the business within the last 24 hours, otherwise template message should be used.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/send-whatsapp-interactive-list-message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListMessage"
                            },
                            "examples": {
                                "Interactive list message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "title": "Choose one",
                                                "sections": [
                                                    {
                                                        "rows": [
                                                            {
                                                                "id": "1",
                                                                "title": "row title"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                },
                                "Header interactive list message": {
                                    "value": {
                                        "from": "441134960000",
                                        "to": "441134960001",
                                        "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                        "content": {
                                            "body": {
                                                "text": "Some text"
                                            },
                                            "action": {
                                                "title": "Choose one",
                                                "sections": [
                                                    {
                                                        "title": "First section title",
                                                        "rows": [
                                                            {
                                                                "id": "1",
                                                                "title": "first row title",
                                                                "description": "first row description"
                                                            },
                                                            {
                                                                "id": "2",
                                                                "title": "second row title",
                                                                "description": "second row description"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "title": "Second section title",
                                                        "rows": [
                                                            {
                                                                "id": "3",
                                                                "title": "third row title"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "header": {
                                                "type": "TEXT",
                                                "text": "Header"
                                            },
                                            "footer": {
                                                "text": "Footer"
                                            }
                                        },
                                        "callbackData": "Callback data"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Message accepted for delivery.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                                },
                                "examples": {
                                    "Success Response": {
                                        "value": {
                                            "to": "441134960001",
                                            "messageCount": 1,
                                            "messageId": "a28dd97c-1ffb-4fcf-99f1-0b557ed381da",
                                            "status": {
                                                "groupId": 1,
                                                "groupName": "PENDING",
                                                "id": 7,
                                                "name": "PENDING_ENROUTE",
                                                "description": "Message sent to next instance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Header text validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.header.text": [
                                                            "size must be between 1 and 60",
                                                            "must not be blank"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Sections validation error response": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "BAD_REQUEST",
                                                    "text": "Bad request",
                                                    "validationErrors": {
                                                        "content.action.sections": [
                                                            "number of rows must be between 1 and 10",
                                                            "row's ids must be unique across sections",
                                                            "titles must not be blank when more than one section provided"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "UNAUTHORIZED",
                                                    "text": "Invalid login details"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiException"
                                },
                                "examples": {
                                    "Too many requests": {
                                        "value": {
                                            "requestError": {
                                                "serviceException": {
                                                    "messageId": "TOO_MANY_REQUESTS",
                                                    "text": "Too many requests"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "200/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/senders/{sender}/templates": {
            "get": {
                "tags": [
                    "Manage WhatsApp"
                ],
                "summary": "Get WhatsApp Templates",
                "description": "Get all the templates and their statuses for a given sender.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/get-whatsapp-templates",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all templates and their statuses for a given sender.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplatesApiResponse"
                                },
                                "examples": {
                                    "Media Template": {
                                        "value": {
                                            "templates": [
                                                {
                                                    "id": "111",
                                                    "businessAccountId": 222,
                                                    "name": "exampleName",
                                                    "language": "en",
                                                    "status": "APPROVED",
                                                    "category": "ACCOUNT_UPDATE",
                                                    "structure": {
                                                        "header": {
                                                            "format": "IMAGE"
                                                        },
                                                        "body": "example {{1}} body",
                                                        "footer": "exampleFooter",
                                                        "type": "MEDIA"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "Media Template with Text header ": {
                                        "value": {
                                            "templates": [
                                                {
                                                    "id": "111",
                                                    "businessAccountId": 222,
                                                    "name": "exampleName",
                                                    "language": "en",
                                                    "status": "APPROVED",
                                                    "category": "ACCOUNT_UPDATE",
                                                    "structure": {
                                                        "header": {
                                                            "text": "exampleContent",
                                                            "format": "TEXT"
                                                        },
                                                        "body": "example {{1}} body",
                                                        "footer": "exampleFooter",
                                                        "type": "MEDIA"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "Media Template with Buttons ": {
                                        "value": {
                                            "templates": [
                                                {
                                                    "id": "111",
                                                    "businessAccountId": 222,
                                                    "name": "exampleName",
                                                    "language": "en",
                                                    "status": "APPROVED",
                                                    "category": "ACCOUNT_UPDATE",
                                                    "structure": {
                                                        "header": {
                                                            "format": "IMAGE"
                                                        },
                                                        "body": "example {{1}} body",
                                                        "footer": "exampleFooter",
                                                        "buttons": [
                                                            {
                                                                "text": "Dial 911",
                                                                "phoneNumber": "911",
                                                                "type": "PHONE_NUMBER"
                                                            },
                                                            {
                                                                "text": "Visit our website",
                                                                "url": "https://www.infobip.com",
                                                                "type": "URL"
                                                            }
                                                        ],
                                                        "type": "MEDIA"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "Text template": {
                                        "value": {
                                            "templates": [
                                                {
                                                    "id": "111",
                                                    "businessAccountId": 222,
                                                    "name": "exampleName",
                                                    "language": "en",
                                                    "status": "APPROVED",
                                                    "category": "ACCOUNT_UPDATE",
                                                    "structure": {
                                                        "body": "example {{1}} body",
                                                        "type": "TEXT"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "15/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            },
            "post": {
                "tags": [
                    "Manage WhatsApp"
                ],
                "summary": "Create WhatsApp Template",
                "description": "Create WhatsApp template. Created template will be submitted for WhatsApp's review and approval. Once approved, template can be sent to end-users. Refer to [template guidelines](https://www.infobip.com/docs/whatsapp/message-types#guidelines-amp-best-practices) for additional info.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/create-whatsapp-template",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplatePublicApiRequest"
                            },
                            "examples": {
                                "Template with body": {
                                    "value": {
                                        "name": "template_name",
                                        "language": "en",
                                        "category": "ACCOUNT_UPDATE",
                                        "structure": {
                                            "body": "body {{1}} content",
                                            "type": "TEXT"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Template created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplateApiResponse"
                                },
                                "examples": {
                                    "Media Template": {
                                        "value": {
                                            "id": "111",
                                            "businessAccountId": 222,
                                            "name": "exampleName",
                                            "language": "en",
                                            "status": "APPROVED",
                                            "category": "ACCOUNT_UPDATE",
                                            "structure": {
                                                "header": {
                                                    "format": "IMAGE"
                                                },
                                                "body": "example {{1}} body",
                                                "footer": "exampleFooter",
                                                "type": "MEDIA"
                                            }
                                        }
                                    },
                                    "Media Template with Text header ": {
                                        "value": {
                                            "id": "111",
                                            "businessAccountId": 222,
                                            "name": "exampleName",
                                            "language": "en",
                                            "status": "APPROVED",
                                            "category": "ACCOUNT_UPDATE",
                                            "structure": {
                                                "header": {
                                                    "text": "exampleContent",
                                                    "format": "TEXT"
                                                },
                                                "body": "example {{1}} body",
                                                "footer": "exampleFooter",
                                                "type": "MEDIA"
                                            }
                                        }
                                    },
                                    "Media Template with Buttons ": {
                                        "value": {
                                            "id": "111",
                                            "businessAccountId": 222,
                                            "name": "exampleName",
                                            "language": "en",
                                            "status": "APPROVED",
                                            "category": "ACCOUNT_UPDATE",
                                            "structure": {
                                                "header": {
                                                    "format": "IMAGE"
                                                },
                                                "body": "example {{1}} body",
                                                "footer": "exampleFooter",
                                                "buttons": [
                                                    {
                                                        "text": "Dial 911",
                                                        "phoneNumber": "911",
                                                        "type": "PHONE_NUMBER"
                                                    },
                                                    {
                                                        "text": "Visit our website",
                                                        "url": "https://www.infobip.com",
                                                        "type": "URL"
                                                    }
                                                ],
                                                "type": "MEDIA"
                                            }
                                        }
                                    },
                                    "Text template": {
                                        "value": {
                                            "id": "111",
                                            "businessAccountId": 222,
                                            "name": "exampleName",
                                            "language": "en",
                                            "status": "APPROVED",
                                            "category": "ACCOUNT_UPDATE",
                                            "structure": {
                                                "body": "example {{1}} body",
                                                "type": "TEXT"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Template has invalid category, too long text or a template with a given name already exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiException"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "200/h"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/senders/{sender}/media/{mediaId}": {
            "get": {
                "tags": [
                    "Receive WhatsApp Message"
                ],
                "summary": "Download inbound media",
                "description": "Download WhatsApp media sent by end-users.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/download-whatsapp-inbound-media",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    },
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "ID of the media.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media successfully downloaded",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "description": "Media binary stream response",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Media not found"
                    },
                    "403": {
                        "description": "Sender not found"
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "10/s"
                    },
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "50/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            },
            "head": {
                "tags": [
                    "Receive WhatsApp Message"
                ],
                "summary": "Get media metadata",
                "description": "Get metadata of WhatsApp media sent by end-users.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/get-whatsapp-media-metadata",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    },
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "ID of the media.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media metadata successfully downloaded",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "enum": [
                                        "CONTINUE",
                                        "SWITCHING_PROTOCOLS",
                                        "PROCESSING",
                                        "CHECKPOINT",
                                        "OK",
                                        "CREATED",
                                        "ACCEPTED",
                                        "NON_AUTHORITATIVE_INFORMATION",
                                        "NO_CONTENT",
                                        "RESET_CONTENT",
                                        "PARTIAL_CONTENT",
                                        "MULTI_STATUS",
                                        "ALREADY_REPORTED",
                                        "IM_USED",
                                        "MULTIPLE_CHOICES",
                                        "MOVED_PERMANENTLY",
                                        "FOUND",
                                        "MOVED_TEMPORARILY",
                                        "SEE_OTHER",
                                        "NOT_MODIFIED",
                                        "USE_PROXY",
                                        "TEMPORARY_REDIRECT",
                                        "PERMANENT_REDIRECT",
                                        "BAD_REQUEST",
                                        "UNAUTHORIZED",
                                        "PAYMENT_REQUIRED",
                                        "FORBIDDEN",
                                        "NOT_FOUND",
                                        "METHOD_NOT_ALLOWED",
                                        "NOT_ACCEPTABLE",
                                        "PROXY_AUTHENTICATION_REQUIRED",
                                        "REQUEST_TIMEOUT",
                                        "CONFLICT",
                                        "GONE",
                                        "LENGTH_REQUIRED",
                                        "PRECONDITION_FAILED",
                                        "PAYLOAD_TOO_LARGE",
                                        "REQUEST_ENTITY_TOO_LARGE",
                                        "URI_TOO_LONG",
                                        "REQUEST_URI_TOO_LONG",
                                        "UNSUPPORTED_MEDIA_TYPE",
                                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "EXPECTATION_FAILED",
                                        "I_AM_A_TEAPOT",
                                        "INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "METHOD_FAILURE",
                                        "DESTINATION_LOCKED",
                                        "UNPROCESSABLE_ENTITY",
                                        "LOCKED",
                                        "FAILED_DEPENDENCY",
                                        "TOO_EARLY",
                                        "UPGRADE_REQUIRED",
                                        "PRECONDITION_REQUIRED",
                                        "TOO_MANY_REQUESTS",
                                        "REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "INTERNAL_SERVER_ERROR",
                                        "NOT_IMPLEMENTED",
                                        "BAD_GATEWAY",
                                        "SERVICE_UNAVAILABLE",
                                        "GATEWAY_TIMEOUT",
                                        "HTTP_VERSION_NOT_SUPPORTED",
                                        "VARIANT_ALSO_NEGOTIATES",
                                        "INSUFFICIENT_STORAGE",
                                        "LOOP_DETECTED",
                                        "BANDWIDTH_LIMIT_EXCEEDED",
                                        "NOT_EXTENDED",
                                        "NETWORK_AUTHENTICATION_REQUIRED"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Media not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "enum": [
                                        "CONTINUE",
                                        "SWITCHING_PROTOCOLS",
                                        "PROCESSING",
                                        "CHECKPOINT",
                                        "OK",
                                        "CREATED",
                                        "ACCEPTED",
                                        "NON_AUTHORITATIVE_INFORMATION",
                                        "NO_CONTENT",
                                        "RESET_CONTENT",
                                        "PARTIAL_CONTENT",
                                        "MULTI_STATUS",
                                        "ALREADY_REPORTED",
                                        "IM_USED",
                                        "MULTIPLE_CHOICES",
                                        "MOVED_PERMANENTLY",
                                        "FOUND",
                                        "MOVED_TEMPORARILY",
                                        "SEE_OTHER",
                                        "NOT_MODIFIED",
                                        "USE_PROXY",
                                        "TEMPORARY_REDIRECT",
                                        "PERMANENT_REDIRECT",
                                        "BAD_REQUEST",
                                        "UNAUTHORIZED",
                                        "PAYMENT_REQUIRED",
                                        "FORBIDDEN",
                                        "NOT_FOUND",
                                        "METHOD_NOT_ALLOWED",
                                        "NOT_ACCEPTABLE",
                                        "PROXY_AUTHENTICATION_REQUIRED",
                                        "REQUEST_TIMEOUT",
                                        "CONFLICT",
                                        "GONE",
                                        "LENGTH_REQUIRED",
                                        "PRECONDITION_FAILED",
                                        "PAYLOAD_TOO_LARGE",
                                        "REQUEST_ENTITY_TOO_LARGE",
                                        "URI_TOO_LONG",
                                        "REQUEST_URI_TOO_LONG",
                                        "UNSUPPORTED_MEDIA_TYPE",
                                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "EXPECTATION_FAILED",
                                        "I_AM_A_TEAPOT",
                                        "INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "METHOD_FAILURE",
                                        "DESTINATION_LOCKED",
                                        "UNPROCESSABLE_ENTITY",
                                        "LOCKED",
                                        "FAILED_DEPENDENCY",
                                        "TOO_EARLY",
                                        "UPGRADE_REQUIRED",
                                        "PRECONDITION_REQUIRED",
                                        "TOO_MANY_REQUESTS",
                                        "REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "INTERNAL_SERVER_ERROR",
                                        "NOT_IMPLEMENTED",
                                        "BAD_GATEWAY",
                                        "SERVICE_UNAVAILABLE",
                                        "GATEWAY_TIMEOUT",
                                        "HTTP_VERSION_NOT_SUPPORTED",
                                        "VARIANT_ALSO_NEGOTIATES",
                                        "INSUFFICIENT_STORAGE",
                                        "LOOP_DETECTED",
                                        "BANDWIDTH_LIMIT_EXCEEDED",
                                        "NOT_EXTENDED",
                                        "NETWORK_AUTHENTICATION_REQUIRED"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Sender not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "enum": [
                                        "CONTINUE",
                                        "SWITCHING_PROTOCOLS",
                                        "PROCESSING",
                                        "CHECKPOINT",
                                        "OK",
                                        "CREATED",
                                        "ACCEPTED",
                                        "NON_AUTHORITATIVE_INFORMATION",
                                        "NO_CONTENT",
                                        "RESET_CONTENT",
                                        "PARTIAL_CONTENT",
                                        "MULTI_STATUS",
                                        "ALREADY_REPORTED",
                                        "IM_USED",
                                        "MULTIPLE_CHOICES",
                                        "MOVED_PERMANENTLY",
                                        "FOUND",
                                        "MOVED_TEMPORARILY",
                                        "SEE_OTHER",
                                        "NOT_MODIFIED",
                                        "USE_PROXY",
                                        "TEMPORARY_REDIRECT",
                                        "PERMANENT_REDIRECT",
                                        "BAD_REQUEST",
                                        "UNAUTHORIZED",
                                        "PAYMENT_REQUIRED",
                                        "FORBIDDEN",
                                        "NOT_FOUND",
                                        "METHOD_NOT_ALLOWED",
                                        "NOT_ACCEPTABLE",
                                        "PROXY_AUTHENTICATION_REQUIRED",
                                        "REQUEST_TIMEOUT",
                                        "CONFLICT",
                                        "GONE",
                                        "LENGTH_REQUIRED",
                                        "PRECONDITION_FAILED",
                                        "PAYLOAD_TOO_LARGE",
                                        "REQUEST_ENTITY_TOO_LARGE",
                                        "URI_TOO_LONG",
                                        "REQUEST_URI_TOO_LONG",
                                        "UNSUPPORTED_MEDIA_TYPE",
                                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "EXPECTATION_FAILED",
                                        "I_AM_A_TEAPOT",
                                        "INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "METHOD_FAILURE",
                                        "DESTINATION_LOCKED",
                                        "UNPROCESSABLE_ENTITY",
                                        "LOCKED",
                                        "FAILED_DEPENDENCY",
                                        "TOO_EARLY",
                                        "UPGRADE_REQUIRED",
                                        "PRECONDITION_REQUIRED",
                                        "TOO_MANY_REQUESTS",
                                        "REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "INTERNAL_SERVER_ERROR",
                                        "NOT_IMPLEMENTED",
                                        "BAD_GATEWAY",
                                        "SERVICE_UNAVAILABLE",
                                        "GATEWAY_TIMEOUT",
                                        "HTTP_VERSION_NOT_SUPPORTED",
                                        "VARIANT_ALSO_NEGOTIATES",
                                        "INSUFFICIENT_STORAGE",
                                        "LOOP_DETECTED",
                                        "BANDWIDTH_LIMIT_EXCEEDED",
                                        "NOT_EXTENDED",
                                        "NETWORK_AUTHENTICATION_REQUIRED"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "10/s"
                    },
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "50/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/senders/{sender}/message/{messageId}/read": {
            "post": {
                "tags": [
                    "Receive WhatsApp Message"
                ],
                "summary": "Mark as read",
                "description": "Mark WhatsApp messages sent by end-users as read.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/mark-whatsapp-message-as-read",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "ID of the message to be marked as read.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "abcdef_ghij124567890klmnopr"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Message successfully marked as read"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/infobipwhatsappgatewayservice.openapi.MarkAsReadErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Sender not found"
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "10/s"
                    },
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "50/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        },
        "/whatsapp/1/senders/{sender}/media": {
            "delete": {
                "tags": [
                    "Manage WhatsApp"
                ],
                "summary": "Delete media",
                "description": "Delete WhatsApp media. May be outbound or inbound media.",
                "externalDocs": {
                    "description": "Learn more about WhatsApp channel and use cases",
                    "url": "https://www.infobip.com/docs/whatsapp"
                },
                "operationId": "channels/whatsapp/delete-whatsapp-media",
                "parameters": [
                    {
                        "name": "sender",
                        "in": "path",
                        "description": "Registered WhatsApp sender number. Must be in international format.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        },
                        "example": "447796344125"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/infobipwhatsappgatewayservice.openapi.UrlDeletionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Media successfully deleted",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "enum": [
                                        "CONTINUE",
                                        "SWITCHING_PROTOCOLS",
                                        "PROCESSING",
                                        "CHECKPOINT",
                                        "OK",
                                        "CREATED",
                                        "ACCEPTED",
                                        "NON_AUTHORITATIVE_INFORMATION",
                                        "NO_CONTENT",
                                        "RESET_CONTENT",
                                        "PARTIAL_CONTENT",
                                        "MULTI_STATUS",
                                        "ALREADY_REPORTED",
                                        "IM_USED",
                                        "MULTIPLE_CHOICES",
                                        "MOVED_PERMANENTLY",
                                        "FOUND",
                                        "MOVED_TEMPORARILY",
                                        "SEE_OTHER",
                                        "NOT_MODIFIED",
                                        "USE_PROXY",
                                        "TEMPORARY_REDIRECT",
                                        "PERMANENT_REDIRECT",
                                        "BAD_REQUEST",
                                        "UNAUTHORIZED",
                                        "PAYMENT_REQUIRED",
                                        "FORBIDDEN",
                                        "NOT_FOUND",
                                        "METHOD_NOT_ALLOWED",
                                        "NOT_ACCEPTABLE",
                                        "PROXY_AUTHENTICATION_REQUIRED",
                                        "REQUEST_TIMEOUT",
                                        "CONFLICT",
                                        "GONE",
                                        "LENGTH_REQUIRED",
                                        "PRECONDITION_FAILED",
                                        "PAYLOAD_TOO_LARGE",
                                        "REQUEST_ENTITY_TOO_LARGE",
                                        "URI_TOO_LONG",
                                        "REQUEST_URI_TOO_LONG",
                                        "UNSUPPORTED_MEDIA_TYPE",
                                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "EXPECTATION_FAILED",
                                        "I_AM_A_TEAPOT",
                                        "INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "METHOD_FAILURE",
                                        "DESTINATION_LOCKED",
                                        "UNPROCESSABLE_ENTITY",
                                        "LOCKED",
                                        "FAILED_DEPENDENCY",
                                        "TOO_EARLY",
                                        "UPGRADE_REQUIRED",
                                        "PRECONDITION_REQUIRED",
                                        "TOO_MANY_REQUESTS",
                                        "REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "INTERNAL_SERVER_ERROR",
                                        "NOT_IMPLEMENTED",
                                        "BAD_GATEWAY",
                                        "SERVICE_UNAVAILABLE",
                                        "GATEWAY_TIMEOUT",
                                        "HTTP_VERSION_NOT_SUPPORTED",
                                        "VARIANT_ALSO_NEGOTIATES",
                                        "INSUFFICIENT_STORAGE",
                                        "LOOP_DETECTED",
                                        "BANDWIDTH_LIMIT_EXCEEDED",
                                        "NOT_EXTENDED",
                                        "NETWORK_AUTHENTICATION_REQUIRED"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Media not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "enum": [
                                        "CONTINUE",
                                        "SWITCHING_PROTOCOLS",
                                        "PROCESSING",
                                        "CHECKPOINT",
                                        "OK",
                                        "CREATED",
                                        "ACCEPTED",
                                        "NON_AUTHORITATIVE_INFORMATION",
                                        "NO_CONTENT",
                                        "RESET_CONTENT",
                                        "PARTIAL_CONTENT",
                                        "MULTI_STATUS",
                                        "ALREADY_REPORTED",
                                        "IM_USED",
                                        "MULTIPLE_CHOICES",
                                        "MOVED_PERMANENTLY",
                                        "FOUND",
                                        "MOVED_TEMPORARILY",
                                        "SEE_OTHER",
                                        "NOT_MODIFIED",
                                        "USE_PROXY",
                                        "TEMPORARY_REDIRECT",
                                        "PERMANENT_REDIRECT",
                                        "BAD_REQUEST",
                                        "UNAUTHORIZED",
                                        "PAYMENT_REQUIRED",
                                        "FORBIDDEN",
                                        "NOT_FOUND",
                                        "METHOD_NOT_ALLOWED",
                                        "NOT_ACCEPTABLE",
                                        "PROXY_AUTHENTICATION_REQUIRED",
                                        "REQUEST_TIMEOUT",
                                        "CONFLICT",
                                        "GONE",
                                        "LENGTH_REQUIRED",
                                        "PRECONDITION_FAILED",
                                        "PAYLOAD_TOO_LARGE",
                                        "REQUEST_ENTITY_TOO_LARGE",
                                        "URI_TOO_LONG",
                                        "REQUEST_URI_TOO_LONG",
                                        "UNSUPPORTED_MEDIA_TYPE",
                                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                                        "EXPECTATION_FAILED",
                                        "I_AM_A_TEAPOT",
                                        "INSUFFICIENT_SPACE_ON_RESOURCE",
                                        "METHOD_FAILURE",
                                        "DESTINATION_LOCKED",
                                        "UNPROCESSABLE_ENTITY",
                                        "LOCKED",
                                        "FAILED_DEPENDENCY",
                                        "TOO_EARLY",
                                        "UPGRADE_REQUIRED",
                                        "PRECONDITION_REQUIRED",
                                        "TOO_MANY_REQUESTS",
                                        "REQUEST_HEADER_FIELDS_TOO_LARGE",
                                        "UNAVAILABLE_FOR_LEGAL_REASONS",
                                        "INTERNAL_SERVER_ERROR",
                                        "NOT_IMPLEMENTED",
                                        "BAD_GATEWAY",
                                        "SERVICE_UNAVAILABLE",
                                        "GATEWAY_TIMEOUT",
                                        "HTTP_VERSION_NOT_SUPPORTED",
                                        "VARIANT_ALSO_NEGOTIATES",
                                        "INSUFFICIENT_STORAGE",
                                        "LOOP_DETECTED",
                                        "BANDWIDTH_LIMIT_EXCEEDED",
                                        "NOT_EXTENDED",
                                        "NETWORK_AUTHENTICATION_REQUIRED"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Sender not found"
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "x-rate-limits": [
                    {
                        "type": "principal",
                        "implementation": "iam",
                        "limit": "30/m"
                    },
                    {
                        "type": "route",
                        "implementation": "iam",
                        "limit": "50/s"
                    }
                ],
                "x-additionalInfo": {
                    "markdown": ""
                }
            }
        }
    },
    "components": {
        "schemas": {
            "infobipzalozmsgatewayservice.openapi.LegacyApiContent": {
                "required": [
                    "templateCode",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "templateCode": {
                        "type": "string",
                        "description": "Template Code",
                        "example": "my_template"
                    },
                    "templateData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "Template Data. Object defining values for all placeholders of the template used",
                            "example": "{\"name\":\"John Smith\",\"city\":\"New York\"}"
                        },
                        "description": "Template Data. Object defining values for all placeholders of the template used",
                        "example": {
                            "name": "John Smith",
                            "city": "New York"
                        }
                    },
                    "type": {
                        "enum": [
                            "TEMPLATE"
                        ],
                        "type": "string",
                        "description": "Defines type of message to be send",
                        "example": "TEMPLATE"
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.PlaceContext": {
                "required": [
                    "entryPoint",
                    "placeId",
                    "sendTime",
                    "type",
                    "userDeviceLocale",
                    "userDisplayName"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Context"
                    }
                ]
            },
            "infobipwhatsapptemplatemanagement.openapi.DocumentHeaderApiData": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    }
                ]
            },
            "infobippushko.openapi.infobip.api.models.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error..",
                        "writeOnly": true
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Indicates whether the error is permanent.",
                        "writeOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name.",
                        "writeOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name.",
                        "writeOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.response.VoiceResponseDetails": {
                "title": "VoiceResponseDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.response.SingleMessageStatus"
                            }
                        ],
                        "description": "Indicates whether the message has been successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateUrlButtonContent": {
                "required": [
                    "parameter"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateButtonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameter": {
                                "type": "string",
                                "description": "URL extension of a `dynamic URL` defined in the registered template."
                            }
                        }
                    }
                ]
            },
            "infobip-webrtc-amg.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationContent": {
                "required": [
                    "address",
                    "latitude",
                    "longitude",
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            },
                            "address": {
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            },
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "format": "double"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextTwitterDmQuickReply": {
                "required": [
                    "payload",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmQuickReply"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "payload": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageTwitterDmMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.ApiFormListDto": {
                "required": [
                    "forms"
                ],
                "type": "object",
                "properties": {
                    "forms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-forms.openapi.ApiFormDto"
                        },
                        "description": "Forms list"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Offset from beginning of list of available forms",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Number of returned forms",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total number of available forms",
                        "format": "int64"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.RegionalOptions": {
                "title": "RegionalOptions",
                "type": "object",
                "properties": {
                    "indiaDlt": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.IndiaDltOptions"
                            }
                        ],
                        "description": "Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContent": {
                "required": [
                    "interactive"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interactive": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContentBody"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.mms.mt.reports.MMSReport": {
                "title": "MMSReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID.",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination address",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the MMS was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the MMS was finished processing by Infobip (i.e., delivered to the destination, delivered to the destination network, etc.)",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of parts the sent MMS was split into.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through `callbackData` field in fully featured MMS message.",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Sent MMS price.",
                        "writeOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "writeOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsVideoHeaderContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of a video sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported video types are `MP4`, `3GPP`. Maximum video size is 16MB."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LineQuickReplyItem": {
                "required": [
                    "action"
                ],
                "type": "object",
                "properties": {
                    "imageUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineQuickReplyAction"
                    },
                    "type": {
                        "enum": [
                            "ACTION"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateQuickReplyButtonContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateButtonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameters": {
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.rcs.api.models.RcsChannel": {
                "title": "RcsChannel",
                "enum": [
                    "RCS"
                ],
                "type": "string"
            },
            "infobiprcsapi.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "text": {
                        "type": "string",
                        "description": "Error description",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.CreateMessageRequest": {
                "title": "CreateMessageRequest",
                "required": [
                    "messageText",
                    "pinType"
                ],
                "type": "object",
                "properties": {
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.Language"
                            }
                        ],
                        "description": "Language code of language in which message text is written. It is used for reading the message when it is sent via voice. If no language is set, message will be read in `English`.",
                        "writeOnly": true
                    },
                    "messageText": {
                        "type": "string",
                        "description": "Text of a message that will be sent. It can contain placeholders that will be replaced upon sending. Placeholder format is `{{placeholderName}}`. Message text must contain `{{pin}}` placeholder.",
                        "writeOnly": true
                    },
                    "pinLength": {
                        "type": "integer",
                        "description": "PIN code length.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "pinType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.PinType"
                            }
                        ],
                        "description": "Type of PIN code that will be generated and sent as part of 2FA message.",
                        "writeOnly": true
                    },
                    "regional": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.RegionalOptions"
                            }
                        ],
                        "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
                    },
                    "repeatDTMF": {
                        "type": "string",
                        "description": "In case PIN message is sent by Voice, DTMF code will enable replaying the message.",
                        "writeOnly": true
                    },
                    "senderId": {
                        "type": "string",
                        "description": "The name that will appear as the sender of the 2FA message (Example: CompanyName).",
                        "writeOnly": true
                    },
                    "speechRate": {
                        "type": "number",
                        "description": "In case PIN message is sent by Voice, the speed of speech can be set for the message. Supported range is from `0.5` to `2`.",
                        "format": "double",
                        "writeOnly": true
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.TextMiMtApiContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message text.",
                        "example": "This is a sample message."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period. Required if 'validityPeriodTimeUnit' is set. Validity period must be between 30 seconds and 1 hour.",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit. Required if 'validityPeriod' is set. Allowed values: SECONDS, MINUTES, HOURS, DAYS.",
                        "example": "MINUTES"
                    }
                },
                "description": "Message content"
            },
            "infobip-ccaas-conversation-service.openapi.StickerLineMoContent": {
                "required": [
                    "packageId",
                    "replyToken",
                    "stickerId",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "packageId": {
                                "type": "string"
                            },
                            "stickerId": {
                                "type": "string"
                            },
                            "stickerResourceType": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamIntegrationsV2": {
                "title": "IamIntegrationsV2",
                "type": "object",
                "properties": {
                    "salesforce": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamSalesforceV2"
                            }
                        ],
                        "description": "Salesforce integration"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.UseConversation": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.UnknownTwitterTweetMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "raw": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Language": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.ott.SeenDeletedBase": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID of the sent message.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Number which sent the message.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Sender provided during the activation process.",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent.",
                        "format": "date-time",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TemplateViberContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VideoTelegramMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.PostbackFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "payload": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingTemplateContent": {
                "required": [
                    "payload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "payload": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingTemplatePayload"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "STICKER",
                                    "TEMPLATE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TelegramContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageWithCaptionContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentWithCaptionContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioWithCaptionContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoWithCaptionContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextMediaTemplateHeaderContent": {
                "required": [
                    "placeholder"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "placeholder": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.notify.NumberContextRequest": {
                "title": "NumberContextRequest",
                "type": "object",
                "properties": {
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred lookup report content type. Can be `application/json` or `application/xml`.",
                        "writeOnly": true
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your call back server on which the lookup report will be sent.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of phone numbers to look up. Numbers must be in international format (Example: `41793026727`).",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioLiveChatInboundContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatFormResponseContent": {
                "required": [
                    "formElements",
                    "formId",
                    "formValues"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "formId": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "formElements": {
                                "maxItems": 2147483647,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                                }
                            },
                            "formValues": {
                                "maxItems": 2147483647,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElementValue"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.DeauthorizeInstagramPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostMoContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.StickerWhatsAppContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramPostOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "replyToCommentId",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "replyToCommentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.IamOrigin": {
                "title": "IamOrigin",
                "enum": [
                    "API",
                    "PORTAL",
                    "WEB_SDK",
                    "INTEGRATION",
                    "PUSH",
                    "FACEBOOK",
                    "LINE",
                    "TELEGRAM",
                    "SALESFORCE",
                    "DYNAMICS",
                    "ZAPIER",
                    "FORMS"
                ],
                "type": "string"
            },
            "infobip-iot-siman-service.iot.openapi.AlertResponse": {
                "type": "object",
                "properties": {
                    "iccid": {
                        "type": "string",
                        "description": "Integrated Circuit Card Identifier",
                        "example": "8944501704188849000"
                    },
                    "type": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.AlertType"
                    },
                    "description": {
                        "type": "string",
                        "description": "Alert description",
                        "example": "Device with inserted IOT SIM card with identification number ICCID 882360003776012 is transmitting unexpected large number of bytes of data usage; usual hourly data consumption is 400, we are noticing the last hour deviation with the value of 5000."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date and time when alert is created.",
                        "example": "2020-01-13 15:30"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LineOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineUser"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                            },
                            "quickReply": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineQuickReply"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ReplyToTwitterDmMoContent": {
                "type": "object"
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContentBody": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BUTTON",
                            "LIST"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveButtonWhatsAppContent",
                        "LIST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveListWhatsAppContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ActionResult": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotContactMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            },
                            "contact": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContact"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.MoResponse": {
                "title": "MoResponse",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.MoResponse.Companion"
                            }
                        ]
                    },
                    "applicationCode": {
                        "type": "string",
                        "description": "Push application code."
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "String defined in the MO action that will be sent along with MO message."
                    },
                    "cleanText": {
                        "type": "string",
                        "description": "Text of MO message text without matched MO keyword."
                    },
                    "customPayload": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Additional JSON data that can be delivered with the PUSH message."
                    },
                    "from": {
                        "type": "string",
                        "description": "Push registration ID on device, where message was originated."
                    },
                    "initialMessageId": {
                        "type": "string",
                        "description": "Message ID generated on MO side"
                    },
                    "keyword": {
                        "type": "string",
                        "description": "Matched MO keyword."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "pairedMessageId": {
                        "type": "string",
                        "description": "External message id of MT message paired with this MO."
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when the message was received",
                        "format": "date-time"
                    },
                    "subscriberId": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of MO message text as received."
                    },
                    "to": {
                        "type": "string",
                        "description": "MO receiver address."
                    }
                }
            },
            "infobippushko.openapi.rcs.Type": {
                "title": "Type",
                "enum": [
                    "TEXT",
                    "FILE",
                    "LOCATION",
                    "SUGGESTION"
                ],
                "type": "string"
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.IosPushNotificationConfig": {
                "required": [
                    "apnsCertificateFileContent",
                    "apnsCertificateFileName"
                ],
                "type": "object",
                "properties": {
                    "apnsCertificateFileName": {
                        "type": "string",
                        "description": "Name of the APNS certificate file used to enable iOS push notifications."
                    },
                    "apnsCertificateFileContent": {
                        "type": "string",
                        "description": "Content of the APNS certificate file used to enable iOS push notifications."
                    },
                    "apnsCertificatePassword": {
                        "type": "string",
                        "description": "Password used for decryption of the APNS certificate."
                    }
                },
                "description": "Configuration used to enable iOS push notifications."
            },
            "infobipapimanagementother.openapi.email.org.infobip.email.v1.send.ipcore.SendResponse": {
                "title": "SendResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.email.org.infobip.email.v1.send.ipcore.MessageInfo"
                        }
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ivr.v1.model.IvrMessageBody": {
                "title": "IvrMessageBody",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.ivr.v1.model.IvrMessage"
                        },
                        "description": "Array of IVR messages to be sent, one object per every message."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "URL",
                            "AUDIO",
                            "VIDEO",
                            "FILE",
                            "IMAGE",
                            "LOCATION",
                            "LOCATION_URL",
                            "POSTBACK",
                            "SHARE",
                            "STORY_MENTION",
                            "PRODUCT",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextInstagramMoContent",
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UrlInstagramMoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioInstagramMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoInstagramMoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileInstagramMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageInstagramMoContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationCoordinatesInstagramMoContent",
                        "LOCATION_URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationUrlInstagramMoContent",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackInstagramMoContent",
                        "SHARE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ShareInstagramMoContent",
                        "STORY_MENTION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StoryMentionInstagramMoContent",
                        "PRODUCT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ProductInstagramMoContent",
                        "UNKNOWN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnknownInstagramMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.NoteRequest": {
                "required": [
                    "content"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes content can be any text."
                    },
                    "agentId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "agentId, creator of note"
                    },
                    "type": {
                        "enum": [
                            "INTERNAL",
                            "ATTACHMENT"
                        ],
                        "type": "string",
                        "default": "INTERNAL"
                    }
                },
                "example": "{\n    content: \"Sample Note content\" +\n}"
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotImageMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "thumbnailUrl": {
                                "type": "string"
                            },
                            "fileName": {
                                "type": "string"
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "text": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.customer.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobipomniflowwebhook.openapi.IamPhoneContact": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ListPickerSelectedItem": {
                "required": [
                    "identifier",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    }
                }
            },
            "mobile-identity-service.openapi.SmvVerifyAdvancedResponseDto": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.ErrorDto"
                    },
                    "status": {
                        "enum": [
                            "ACCEPTED",
                            "ERROR"
                        ],
                        "type": "string",
                        "description": "Silent Mobile Verification request status"
                    },
                    "token": {
                        "type": "string",
                        "description": "Unique request ID",
                        "format": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                },
                "description": "Silent Mobile Verification response object"
            },
            "infobip-ccaas-conversation-service.openapi.GenericInstagramMessagingTemplatePayload": {
                "required": [
                    "elements"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "elements": {
                                "maxItems": 10,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GenericInstagramMessagingTemplateElement"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.DeliveryInfo": {
                "title": "DeliveryInfo",
                "type": "object",
                "properties": {
                    "rate": {
                        "type": "number",
                        "description": "Delivery rate. Ratio between total delivered and total sent messages in a specific bulk sending process.",
                        "format": "double"
                    },
                    "time": {
                        "type": "integer",
                        "description": "Delivery time.",
                        "format": "int64"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramBusinessAccount"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmButton": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "URL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UrlTwitterDmButton"
                    }
                }
            },
            "infobippushko.openapi.infobip.api.models.WhatsappChannel": {
                "title": "WhatsappChannel",
                "enum": [
                    "WHATSAPP"
                ],
                "type": "string"
            },
            "infobip-email-api-amg.openapi.EmailLogResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-email-api-amg.openapi.EmailLog"
                        },
                        "description": "Array of email logs, one object per each email request."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TemplateZaloContent": {
                "required": [
                    "code"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ZaloContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "data": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.OpenUrlSuggestion": {
                "required": [
                    "postbackData",
                    "text",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplatePublicApiRequest": {
                "title": "TemplateRequest",
                "required": [
                    "category",
                    "language",
                    "name",
                    "structure"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Template name. Must only contain lowercase alphanumeric characters and underscores."
                    },
                    "language": {
                        "enum": [
                            "af",
                            "sq",
                            "ar",
                            "az",
                            "bn",
                            "bg",
                            "ca",
                            "zh_CN",
                            "zh_HK",
                            "zh_TW",
                            "hr",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "en_GB",
                            "en_US",
                            "et",
                            "fil",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "gu",
                            "ha",
                            "he",
                            "hi",
                            "hu",
                            "id",
                            "ga",
                            "it",
                            "ja",
                            "kn",
                            "kk",
                            "ko",
                            "lo",
                            "lv",
                            "lt",
                            "mk",
                            "ms",
                            "ml",
                            "mr",
                            "nb",
                            "fa",
                            "pl",
                            "pt_BR",
                            "pt_PT",
                            "pa",
                            "ro",
                            "ru",
                            "sr",
                            "sk",
                            "sl",
                            "es",
                            "es_AR",
                            "es_ES",
                            "es_MX",
                            "sw",
                            "sv",
                            "ta",
                            "te",
                            "th",
                            "tr",
                            "uk",
                            "ur",
                            "uz",
                            "vi",
                            "unknown"
                        ],
                        "type": "string",
                        "description": "The language code or locale to use. Multiple templates with different language codes can be registered under the same template name."
                    },
                    "category": {
                        "enum": [
                            "ACCOUNT_UPDATE",
                            "PAYMENT_UPDATE",
                            "PERSONAL_FINANCE_UPDATE",
                            "SHIPPING_UPDATE",
                            "RESERVATION_UPDATE",
                            "ISSUE_RESOLUTION",
                            "APPOINTMENT_UPDATE",
                            "TRANSPORTATION_UPDATE",
                            "TICKET_UPDATE",
                            "ALERT_UPDATE",
                            "AUTO_REPLY"
                        ],
                        "type": "string",
                        "description": "Category of the template."
                    },
                    "structure": {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.TemplateStructureApiData"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveFooterContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message footer."
                    }
                },
                "description": "Message footer."
            },
            "infobiprcsapi.openapi.ReplySuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                    }
                ]
            },
            "infobipamgnumbersapi.openapi.NumberResponse": {
                "type": "object",
                "properties": {
                    "numberKey": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryName": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "VIRTUAL_LONG_NUMBER",
                            "SHORT_CODE",
                            "SIM_HOSTING",
                            "VIRTUAL_SIM_HOSTING",
                            "VIRTUAL_LONG_NUMBER_CALL_TRIGGER",
                            "SHORT_CODE_USSD",
                            "WHATSAPP",
                            "VIBER",
                            "FACEBOOK"
                        ],
                        "type": "string"
                    },
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "SMS",
                                "VOICE",
                                "MMS"
                            ],
                            "type": "string"
                        }
                    },
                    "shared": {
                        "type": "boolean"
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.NumberPrice"
                    },
                    "network": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "voiceSetup": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.VoiceSetup"
                    },
                    "reservationStatus": {
                        "enum": [
                            "PENDING",
                            "BILLING_FAILED",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "additionalSetupRequired": {
                        "type": "boolean"
                    },
                    "editPermissions": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.EditPermissions"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.CreateSimAlertRequest": {
                "required": [
                    "iccid"
                ],
                "type": "object",
                "properties": {
                    "iccid": {
                        "type": "string",
                        "description": "ICCID of the SIM to create the limit for.",
                        "example": "8944501704188849000"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Whole positive number which is defining MB of data usage; There is no defined max value.",
                        "example": 500
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.ApplicationDetails": {
                "required": [
                    "action",
                    "packageName",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "packageName": {
                        "type": "string",
                        "description": "Android package name.",
                        "example": "com.android"
                    },
                    "type": {
                        "enum": [
                            "CLASS_NAME",
                            "URI_BASE"
                        ],
                        "type": "string",
                        "description": "Application details type.",
                        "example": "URI_BASE"
                    },
                    "action": {
                        "type": "string",
                        "description": "Android action.",
                        "example": "android.intent.action.MAIN"
                    }
                },
                "description": "Details of the application to be opened. Each subsequent item is a fallback used in case the previous application opening attempt fails.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "CLASS_NAME": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ClassNameApplicationDetails",
                        "URI_BASE": "#/components/schemas/infobipmiyuloregatewayservice.openapi.UriBaseApplicationDetails"
                    }
                }
            },
            "infobipapimanagementother.openapi.chat.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.chat.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FormInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "hidden",
                    "required"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "hidden": {
                                "type": "boolean"
                            },
                            "label": {
                                "type": "string"
                            },
                            "required": {
                                "type": "boolean"
                            },
                            "fieldId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.SeparatorComponent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipzalozmsgatewayservice.openapi.Error": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error."
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent."
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.MoReport": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.IntegrationType"
                    },
                    {
                        "properties": {
                            "message": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.TextMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ImageDocumentVideoMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.StickerMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.LocationMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ContactMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.VoiceAudioMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.QuickReplyWhatsAppMoContent"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ButtonReplyWhatsAppMoContent"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ListReplyWhatsAppMoContent"
                                    }
                                ],
                                "description": "Message content.",
                                "discriminator": {
                                    "propertyName": "type",
                                    "mapping": {
                                        "TEXT": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.TextMessage",
                                        "IMAGE": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ImageDocumentVideoMessage",
                                        "DOCUMENT": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ImageDocumentVideoMessage",
                                        "STICKER": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.StickerMessage",
                                        "LOCATION": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.LocationMessage",
                                        "CONTACT": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ContactMessage",
                                        "VIDEO": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ImageDocumentVideoMessage",
                                        "VOICE": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.VoiceAudioMessage",
                                        "AUDIO": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.VoiceAudioMessage",
                                        "BUTTON": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.QuickReplyWhatsAppMoContent",
                                        "INTERACTIVE_BUTTON_REPLY": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ButtonReplyWhatsAppMoContent",
                                        "INTERACTIVE_LIST_REPLY": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.ListReplyWhatsAppMoContent"
                                    }
                                },
                                "writeOnly": true
                            },
                            "contact": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.ContactName"
                                    }
                                ],
                                "description": "Information about recipient.",
                                "writeOnly": true
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.MoReportBase"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextWhatsAppContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 4096,
                                "minLength": 0,
                                "type": "string"
                            },
                            "previewUrl": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VideoWithCaptionContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Button": {
                "required": [
                    "action"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                            },
                            "flex": {
                                "maximum": 10,
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "position": {
                                "enum": [
                                    "RELATIVE",
                                    "ABSOLUTE"
                                ],
                                "type": "string"
                            },
                            "offsetTop": {
                                "type": "string"
                            },
                            "offsetBottom": {
                                "type": "string"
                            },
                            "offsetStart": {
                                "type": "string"
                            },
                            "offsetEnd": {
                                "type": "string"
                            },
                            "height": {
                                "enum": [
                                    "SM",
                                    "MD"
                                ],
                                "type": "string"
                            },
                            "style": {
                                "enum": [
                                    "LINK",
                                    "PRIMARY",
                                    "SECONDARY"
                                ],
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "gravity": {
                                "enum": [
                                    "TOP",
                                    "BOTTOM",
                                    "CENTER"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.FormInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "hidden",
                    "required"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "hidden": {
                                "type": "boolean"
                            },
                            "required": {
                                "type": "boolean"
                            },
                            "staticValue": {
                                "type": "string"
                            },
                            "personField": {
                                "type": "string"
                            },
                            "fieldId": {
                                "type": "string"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string"
                            },
                            "personFieldSubItemName": {
                                "type": "string"
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "label": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotVideoContent": {
                "required": [
                    "size",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "thumbnailUrl": {
                                "type": "string"
                            },
                            "size": {
                                "maximum": 27262976,
                                "type": "integer",
                                "format": "int32"
                            },
                            "duration": {
                                "maximum": 180,
                                "type": "integer",
                                "format": "int32"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsDocumentHeaderContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of a document sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported document type is `PDF`. Maximum document size is 100MB."
                            },
                            "filename": {
                                "maxLength": 240,
                                "minLength": 0,
                                "type": "string",
                                "description": "Filename of the document."
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.viber.IntegrationType": {
                "type": "object",
                "properties": {
                    "integrationType": {
                        "enum": [
                            "VIBER"
                        ],
                        "type": "string",
                        "description": "Integration type.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateWhatsAppContent": {
                "required": [
                    "language",
                    "mediaTemplateBody",
                    "templateName"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "templateName": {
                                "maxLength": 512,
                                "minLength": 0,
                                "type": "string"
                            },
                            "language": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Language"
                            },
                            "mediaTemplateHeader": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                            },
                            "mediaTemplateBody": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateBodyContent"
                            },
                            "mediaTemplateButtons": {
                                "maxItems": 3,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateButtonContent"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamTerminateSessionContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MtName": {
                "required": [
                    "firstName",
                    "formattedName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "nameSuffix": {
                        "type": "string"
                    },
                    "namePrefix": {
                        "type": "string"
                    },
                    "formattedName": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MessageObject": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "object"
                    },
                    "channel": {
                        "enum": [
                            "SMS",
                            "RCS",
                            "VIBER",
                            "WHATSAPP",
                            "VK",
                            "FACEBOOK_MESSENGER",
                            "APPLE_BUSINESS_CHAT",
                            "LINE_OFFICIAL_ACCOUNT",
                            "LIVE_CHAT",
                            "VOICE",
                            "VIDEO",
                            "ZALO_NOTIFICATION_SERVICE",
                            "EMAIL",
                            "GOOGLE_BUSINESS_MESSAGES",
                            "TELEGRAM",
                            "CALLS",
                            "CONVERSATION",
                            "VIBER_BOT",
                            "FACEBOOK_POST",
                            "INSTAGRAM_POST",
                            "TWITTER_TWEET",
                            "INSTAGRAM_MESSAGING",
                            "KAKAO_SANGDAM",
                            "TWITTER_DM"
                        ],
                        "type": "string"
                    },
                    "direction": {
                        "enum": [
                            "INBOUND",
                            "OUTBOUND"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "direction",
                    "mapping": {
                        "INBOUND": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage",
                        "OUTBOUND": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.DailyUsageForSimResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page",
                        "example": 1
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page",
                        "example": 20
                    },
                    "iccid": {
                        "type": "string",
                        "description": "Unique ICCID identifier",
                        "example": "8944500204198492000"
                    },
                    "dailyUsage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.SimUsageResponse"
                        }
                    }
                }
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.token.TokenResponseModel": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "The access token used to connect client SDKs to Infobip WebRTC platform."
                    },
                    "expirationTime": {
                        "type": "string",
                        "description": "Time point until which token is valid. The default value is 8h. If it expires, the user must be provided with the new valid token in order to continue using Infobip WebRTC platform. There is no notification about token expiry, you must track that by yourself."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateTextHeaderContent": {
                "required": [
                    "placeholder"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "placeholder": {
                                "type": "string",
                                "description": "Value of a placeholder in the text header."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveSectionWhatsAppContent": {
                "required": [
                    "rows"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveRowWhatsAppContent"
                        }
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.OrderStatus": {
                "enum": [
                    "Received",
                    "Pending",
                    "Rejected",
                    "Accepted",
                    "Cancelled"
                ],
                "type": "string"
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.contactInformation.IamContactV2": {
                "title": "IamContactV2",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamEmailContact"
                        },
                        "description": "List of person's email"
                    },
                    "facebook": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamFacebookContact"
                        },
                        "description": "List of person's Facebook destinations",
                        "readOnly": true
                    },
                    "instagram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamInstagramContact"
                        },
                        "description": "List of person's Instagram destinations",
                        "readOnly": true
                    },
                    "line": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamLineContact"
                        },
                        "description": "List of person's Line destinations",
                        "readOnly": true
                    },
                    "liveChat": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamLiveChatContact"
                        },
                        "description": "List of person's Live Chat destinations",
                        "readOnly": true
                    },
                    "phone": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamPhoneContact"
                        },
                        "description": "List of person's phones"
                    },
                    "push": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamPushContact"
                        },
                        "description": "List of person's push registrations",
                        "readOnly": true
                    },
                    "twitter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamTwitterContact"
                        },
                        "description": "List of person's Twitter destinations",
                        "readOnly": true
                    },
                    "viberBots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamViberBotsContact"
                        },
                        "description": "List of person's Viber Bots destinations",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.Language": {
                "title": "Language",
                "type": "object",
                "properties": {
                    "languageCode": {
                        "type": "string",
                        "description": "Code for language character set of a message text. Possible values: `TR` for Turkish, `ES` for Spanish, `PT` for Portuguese and `AUTODETECT` to let platform pick character set automatically based on the message text."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ApplePayAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "paid",
                    "requestIdentifier"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "paid": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Component": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FileViberMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "fileName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-recording-amg.openapi.BulkDeleteResponseModel": {
                "type": "object",
                "properties": {
                    "successCount": {
                        "type": "integer",
                        "description": "Number of successfully deleted recordings.",
                        "format": "int32"
                    },
                    "failed": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of recording ids that are not deleted."
                        },
                        "description": "List of recording ids that are not deleted."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.SenderActionFacebookContent": {
                "required": [
                    "senderAction"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "senderAction": {
                                "enum": [
                                    "MARK_SEEN",
                                    "TYPING_ON",
                                    "TYPING_OFF"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "FACEBOOK_SENDER_ACTION",
                                    "FACEBOOK_TEMPLATE",
                                    "COMMENT",
                                    "POST"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.DispositionRequest": {
                "required": [
                    "fieldId",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "fieldId": {
                        "type": "string"
                    },
                    "value": {
                        "maxLength": 5000,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "description": "List of fields and agent inputs to those fields."
            },
            "infobipamgnumbersapi.openapi.PullAction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VkContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateVkContent"
                    }
                }
            },
            "infobip-forms.openapi.FormElement": {
                "required": [
                    "component"
                ],
                "type": "object",
                "properties": {
                    "component": {
                        "enum": [
                            "TEXT",
                            "TEXTAREA",
                            "NUMBER",
                            "DROPDOWN",
                            "CHECKBOX",
                            "CHECKBOX_GROUP",
                            "RADIOBUTTON",
                            "DATE",
                            "DATETIME",
                            "EMAIL",
                            "MSISDN",
                            "SUBMIT_BUTTON",
                            "TITLE",
                            "DESCRIPTION"
                        ],
                        "type": "string"
                    }
                },
                "description": "List of form fields",
                "discriminator": {
                    "propertyName": "component",
                    "mapping": {
                        "SUBMIT_BUTTON": "#/components/schemas/infobip-forms.openapi.SubmitButtonElement",
                        "TITLE": "#/components/schemas/infobip-forms.openapi.TitleElement",
                        "DESCRIPTION": "#/components/schemas/infobip-forms.openapi.DescriptionElement",
                        "TEXT": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "TEXTAREA": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "NUMBER": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "DATE": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "DATETIME": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "EMAIL": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "MSISDN": "#/components/schemas/infobip-forms.openapi.PlainInputElement",
                        "DROPDOWN": "#/components/schemas/infobip-forms.openapi.DropdownInputElement",
                        "CHECKBOX": "#/components/schemas/infobip-forms.openapi.CheckboxInputElement",
                        "CHECKBOX_GROUP": "#/components/schemas/infobip-forms.openapi.CheckboxGroupInputElement",
                        "RADIOBUTTON": "#/components/schemas/infobip-forms.openapi.RadioButtonInputElement"
                    }
                }
            },
            "infobip-mms-service.openapi.MMSReport": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination address."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the MMS was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the SMS was finished processing by Infobip (i.e., delivered to the destination, delivered to the destination network, etc.). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "mmsCount": {
                        "type": "integer",
                        "description": "The number of parts the sent MMS was split into.",
                        "format": "int32"
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through `callbackData` field in fully featured MMS message."
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.Price"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.Status"
                    },
                    "error": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.Error"
                    }
                }
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.auth.Session": {
                "title": "Session",
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Unique temporary identifier for this session. Keep this value securely stored and never share it."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PlainInput": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isRequired": {
                                "type": "boolean"
                            },
                            "isHidden": {
                                "type": "boolean"
                            },
                            "placeholder": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.ContactName": {
                "title": "Contact",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Contact name",
                        "writeOnly": true
                    }
                }
            },
            "infobiprcsapi.openapi.Suggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 25,
                        "minLength": 1,
                        "type": "string",
                        "description": "Suggestion text",
                        "example": "Pick one!"
                    },
                    "postbackData": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "Value which is going to be sent as a reply to a suggestion",
                        "example": "REPLY"
                    },
                    "type": {
                        "enum": [
                            "REPLY",
                            "OPEN_URL",
                            "DIAL_PHONE",
                            "SHOW_LOCATION",
                            "REQUEST_LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "description": "List of suggestions that will be sent in card",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY": "#/components/schemas/infobiprcsapi.openapi.ReplySuggestion",
                        "OPEN_URL": "#/components/schemas/infobiprcsapi.openapi.OpenUrlSuggestion",
                        "DIAL_PHONE": "#/components/schemas/infobiprcsapi.openapi.DialPhoneSuggestion",
                        "SHOW_LOCATION": "#/components/schemas/infobiprcsapi.openapi.ShowLocationSuggestion",
                        "REQUEST_LOCATION": "#/components/schemas/infobiprcsapi.openapi.RequestLocationSuggestion"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CarouselColumn": {
                "required": [
                    "actions",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "thumbnailImageUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "imageBackgroundColor": {
                        "type": "string"
                    },
                    "title": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "text": {
                        "maxLength": 120,
                        "minLength": 0,
                        "type": "string"
                    },
                    "defaultAction": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    "actions": {
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AgentResponse": {
                "required": [
                    "displayName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Agent ID.",
                        "readOnly": true
                    },
                    "displayName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Agent name to be displayed."
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "BUSY",
                            "INVISIBLE",
                            "AWAY"
                        ],
                        "type": "string",
                        "description": "Agent status.",
                        "default": "INVISIBLE"
                    },
                    "availability": {
                        "enum": [
                            "ACTIVE",
                            "BUSY",
                            "INVISIBLE",
                            "AWAY"
                        ],
                        "type": "string",
                        "description": "Agent availability."
                    },
                    "role": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR"
                        ],
                        "type": "string",
                        "description": "Agent role.",
                        "default": "AGENT"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Agent enabled/disabled toggle.",
                        "default": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time stamp when agent is created.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time stamp when agent is last updated.",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": "97457D13B1FC79AF3C1A1096AE7E77AB",
                    "displayName": "Angus Young",
                    "status": "ACTIVE",
                    "availability": "BUSY",
                    "role": "SUPERVISOR",
                    "enabled": true,
                    "createdAt": "2019-05-10T09:53:58.4630000+00:00",
                    "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                }
            },
            "infobip-ccaas-conversation-service.openapi.NoteResultPage": {
                "type": "object",
                "properties": {
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Note"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "notes": [
                        {
                            "id": "22457B6EE7558AAD2F7D8235696ED4E6",
                            "conversationId": "9F1F21C198025CC026956A7E2E9C560F",
                            "agentId": "F66D67327326FCCB027BEAA916B94542",
                            "content": "Sample Note content",
                            "createdAt": "2019-04-11T10:40:38.0590000+00:00",
                            "updatedAt": "2019-04-11T10:40:38.0590000+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 1,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioWithCaptionContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 1024,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.LocationContent": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Latitude of a location sent in the WhatsApp message.",
                        "format": "double"
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Longitude of a location sent in the WhatsApp message.",
                        "format": "double"
                    },
                    "name": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Location name."
                    },
                    "address": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Location address."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.SmsInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MoTextContent"
                            }
                        }
                    }
                ]
            },
            "infobip-recording-amg.openapi.Page": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "description": "Max number of results shown per page. Max value is 1000. Default value is 50.",
                        "format": "int32"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Page number currently shown.",
                        "format": "int32"
                    }
                },
                "description": "Pagination object"
            },
            "infobip-ccaas-conversation-service.openapi.CallsInboundContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "CALL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent",
                        "START_CALL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StartCallInboundCallsContent",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "HANG_UP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.HangUpInboundCallsContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MtAddress": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.Action": {
                "required": [
                    "content",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "OPEN_LINK",
                            "ADD_TO_CALENDAR",
                            "OPEN_APPLICATION",
                            "COPY_STRING",
                            "CALL_NUMBER"
                        ],
                        "type": "string",
                        "description": "Action type.",
                        "example": "OPEN_LINK"
                    },
                    "content": {
                        "type": "string",
                        "description": "Action content.",
                        "example": "Example content"
                    }
                },
                "description": "Action to perform upon clicking of a button inside a message.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "OPEN_LINK": "#/components/schemas/infobipmiyuloregatewayservice.openapi.OpenLinkAction",
                        "ADD_TO_CALENDAR": "#/components/schemas/infobipmiyuloregatewayservice.openapi.CalendarEventAction",
                        "OPEN_APPLICATION": "#/components/schemas/infobipmiyuloregatewayservice.openapi.OpenApplicationAction",
                        "COPY_STRING": "#/components/schemas/infobipmiyuloregatewayservice.openapi.CopyStringAction",
                        "CALL_NUMBER": "#/components/schemas/infobipmiyuloregatewayservice.openapi.CallNumberAction"
                    }
                }
            },
            "infobippushko.openapi.email.reports.DeliveryReport": {
                "title": "EmailDeliverReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies a list of email messages. This is either defined by user in the request or auto generated.",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the email sent to the recipient.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination email address.",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Send date and time. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Delivery date and time.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of emails sent.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through `callbackData` field in fully featured email.",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.email.reports.deliveryReport.Price"
                            }
                        ],
                        "description": "Sent email price.",
                        "writeOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the email is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "writeOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "writeOnly": true
                    },
                    "browserLink": {
                        "type": "string",
                        "description": "Contains the link to the HTML sent to recipient. This will be present only if the _view in browser_ feature is used in the email.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-omni.openapi.VoiceData": {
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "language": {
                        "type": "string",
                        "description": "Supported languages for Voice messages. List of supported languages can be found [here](https://www.infobip.com/docs/voice-and-video/text-to-speech-languages)",
                        "writeOnly": true
                    }
                },
                "description": "Voice-specific data used if the message is sent through a voice channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.LiveAgentSuggestion": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MoAddress": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "text": {
                        "type": "string",
                        "description": "Error description",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobip-omni.openapi.MediaTemplateData": {
                "required": [
                    "body"
                ],
                "type": "object",
                "properties": {
                    "header": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.MediaTemplateHeaderContent"
                    },
                    "body": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.MediaTemplateBodyContent"
                    },
                    "buttons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.MediaTemplateButtonContent"
                        },
                        "description": "Media template buttons",
                        "writeOnly": true
                    }
                },
                "description": "Media template definitions",
                "writeOnly": true
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.reports.VoiceReportsResponse": {
                "title": "VoiceReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.reports.VoiceReport"
                        },
                        "description": "Arrays of delivery reports, one object for every message."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CarouselLineTemplatePayload": {
                "required": [
                    "columns"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "columns": {
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CarouselColumn"
                                }
                            },
                            "imageAspectRatio": {
                                "enum": [
                                    "RECTANGLE",
                                    "SQUARE"
                                ],
                                "type": "string"
                            },
                            "imageSize": {
                                "enum": [
                                    "COVER",
                                    "CONTAIN"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipamgnumbersapi.openapi.VoiceActionDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PULL",
                            "HTTP_FORWARD",
                            "SMPP_FORWARD",
                            "MAIL_FORWARD",
                            "NO_ACTION",
                            "BLOCK",
                            "AUTORESPONSE",
                            "USSD",
                            "SEND_BULK_MT",
                            "EMAIL_TO_SMS_FORWARD",
                            "CNS_FWD",
                            "USE_CONVERSATIONS",
                            "FORWARD_TO_PSTN",
                            "FORWARD_TO_IP",
                            "FORWARD_TO_SOFT_PHONE",
                            "FORWARD_TO_IVR",
                            "VOICE_NUMBER_MASKING",
                            "VOICE_CALL_DROP",
                            "FORWARD_TO_WEBRTC",
                            "VOICE_FORWARD_TO_CONVERSATIONS",
                            "VOICE_FORWARD_TO_CONVERSATIONS_WITH_FLOW",
                            "CALL_FORWARD_TO_APPLICATION",
                            "OTHER"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "VOICE_NUMBER_MASKING": "#/components/schemas/infobipamgnumbersapi.openapi.VoiceNumberMaskingActionDetails",
                        "FORWARD_TO_IVR": "#/components/schemas/infobipamgnumbersapi.openapi.ForwardToIvrActionDetails"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.logs.VoiceLog": {
                "title": "VoiceLog",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request."
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the voice message was processed by Infobip (ie. delivered to destination, delivered to destination network, etc.)",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Call duration in seconds.",
                        "format": "int32"
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric."
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Price"
                            }
                        ],
                        "description": "Sent voice message price."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Status"
                            }
                        ],
                        "description": "Indicates whether the message has been successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that was sent."
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address."
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.message.InAppStyle": {
                "title": "InAppStyle",
                "enum": [
                    "MODAL",
                    "BANNER"
                ],
                "type": "string"
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.applications.v2.ApplicationConfiguration": {
                "title": "ApplicationConfiguration",
                "type": "object",
                "properties": {
                    "allowMultiplePinVerifications": {
                        "type": "boolean",
                        "description": "Tells if multiple PIN verifications are allowed.",
                        "default": true
                    },
                    "pinAttempts": {
                        "type": "integer",
                        "description": "Number of possible PIN attempts.",
                        "format": "int32",
                        "default": 10
                    },
                    "pinTimeToLive": {
                        "type": "string",
                        "description": "PIN time to live. Should be in format of `{timeLength}{timeUnit}`. Here `timeLength` is an optional positive integer with a default value of 1 and `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Must not be larger that one year, although much lower values are recommended.",
                        "default": "15m"
                    },
                    "sendPinPerApplicationLimit": {
                        "type": "string",
                        "description": "Overall number of requests in time interval for generating a PIN and sending an SMS using single application. Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one year, although much lower values are recommended.",
                        "default": "10000/1d"
                    },
                    "sendPinPerPhoneNumberLimit": {
                        "type": "string",
                        "description": "Number of requests in time interval for generating a PIN and sending an SMS to one phone number (MSISDN). Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one year, although much lower values are recommended.",
                        "default": "3/1d"
                    },
                    "verifyPinLimit": {
                        "type": "string",
                        "description": "Number of PIN verification requests in time interval from one phone number (MSISDN). Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one day, although much lower values are recommended.",
                        "default": "1/3s"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PushRequestMulti": {
                "title": "PushRequestMulti",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PushRequest"
                        },
                        "description": "List of push requests"
                    }
                }
            },
            "infobip-email-api-amg.openapi.ReportError": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "permanent": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-omni.openapi.KakaoChinguUrlButton": {
                "required": [
                    "buttonText",
                    "buttonUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "buttonUrl": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL to open upon button press. Max 500 characters.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamButtonListContent": {
                "required": [
                    "buttons",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "buttons": {
                                "maxItems": 5,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.Preview": {
                "title": "Preview",
                "type": "object",
                "properties": {
                    "charactersRemaining": {
                        "type": "integer",
                        "description": "Number of remaining characters in the last SMS part.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "configuration": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.LanguageConfiguration"
                            }
                        ],
                        "description": "Configuration that, when sent with the original text, results in this preview.",
                        "readOnly": true
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of SMS message parts required to deliver the message.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "textPreview": {
                        "type": "string",
                        "description": "Preview of the text as it should appear on the recipient’s device.",
                        "readOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Message header.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsTextHeaderContent",
                        "VIDEO": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsVideoHeaderContent",
                        "IMAGE": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsImageHeaderContent",
                        "DOCUMENT": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsDocumentHeaderContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatApplication": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.PostbackButtonAction": {
                "required": [
                    "data",
                    "displayText",
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "data": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            },
                            "displayText": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-mms-service.openapi.head": {
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "The originator (or sender) of the message; i.e. your contact number as seen by the end user."
                    },
                    "to": {
                        "type": "string",
                        "description": "Mobile number to which MMS message is sent."
                    },
                    "id": {
                        "type": "string",
                        "description": "External id, if not provided id will be returned in response."
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject line for the MMS message."
                    },
                    "validityPeriodMinutes": {
                        "type": "integer",
                        "description": "Validity period of message in minutes, default is 48h. After the validity period has expired message will exit send retry.",
                        "format": "int32"
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters."
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your call back server on which the Delivery report will be sent."
                    }
                },
                "description": "Head part contains required information for sending MMS to an end user.",
                "format": "json"
            },
            "infobip-ccaas-conversation-service.openapi.EmailOutboundGatewayData": {
                "required": [
                    "emailAddresses",
                    "emailBodies",
                    "fromAddress",
                    "messageId",
                    "originInterface",
                    "totalContentSize"
                ],
                "type": "object",
                "properties": {
                    "fromAddress": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "emailAddresses": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailAddresses"
                    },
                    "emailBodies": {
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailBody"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Attachment"
                        }
                    },
                    "totalContentSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "senderDomainId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "inReplyTo": {
                        "type": "string"
                    },
                    "preHeaderText": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "originInterface": {
                        "enum": [
                            "API",
                            "SMTP",
                            "BROADCAST",
                            "FLOW",
                            "CONVERSATIONS",
                            "RMI"
                        ],
                        "type": "string"
                    },
                    "adapted": {
                        "type": "boolean"
                    },
                    "cache": {
                        "type": "boolean"
                    },
                    "defaultPlaceholdersValue": {
                        "type": "string"
                    },
                    "defaultPlaceholderContentId": {
                        "type": "string"
                    },
                    "placeholdersValue": {
                        "type": "string"
                    },
                    "placeholderContentId": {
                        "type": "string"
                    },
                    "trackingUrl": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "clientMetadata": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bulkId": {
                        "type": "string"
                    },
                    "trackingEventTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "OPEN",
                                "CLICK"
                            ],
                            "type": "string"
                        }
                    }
                }
            },
            "infobip-email-api-amg.openapi.BulkRescheduleResponse": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "sendAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ReplyTo": {
                "type": "object",
                "properties": {
                    "mid": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamContent"
                    }
                ]
            },
            "infobipwhatsapptemplatemanagement.openapi.TextHeaderApiData": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string",
                                "description": "Template header text. Can contain up to 60 characters, with one placeholder {{1}}."
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.Failover": {
                "required": [
                    "from",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "SMS sender number. Must be in international format."
                    },
                    "text": {
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the SMS that will be sent."
                    }
                },
                "description": "SMS message to be sent if WhatsApp template message could not be delivered."
            },
            "infobippushko.openapi.viber.mo.reports.MoMessage": {
                "title": "MoMessage",
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.viber.Type"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatCarouselContent": {
                "required": [
                    "cards"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cards": {
                                "maxItems": 10,
                                "minItems": 2,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardContent"
                                },
                                "description": "A list of cards within the carousel"
                            },
                            "quickReplies": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "A list of suggested actions independent from cards"
                                },
                                "description": "A list of suggested actions independent from cards"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LineMoAttachment": {
                "required": [
                    "downloadId",
                    "fileName"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "downloadId": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.HorizontalVerticalComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BOX": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalBoxComponent",
                        "BUTTON": "#/components/schemas/infobip-omni.openapi.ButtonComponent",
                        "FILLER": "#/components/schemas/infobip-omni.openapi.FillerComponent",
                        "IMAGE": "#/components/schemas/infobip-omni.openapi.ImageComponent",
                        "TEXT": "#/components/schemas/infobip-omni.openapi.TextComponent",
                        "SEPARATOR": "#/components/schemas/infobip-omni.openapi.SeparatorComponent",
                        "SPACER": "#/components/schemas/infobip-omni.openapi.SpacerComponent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "AUDIO",
                            "FILE",
                            "EXPIRED_SESSION"
                        ],
                        "type": "string"
                    },
                    "sentAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoTextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoImageContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoVideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoAudioContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoFileContent",
                        "EXPIRED_SESSION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoExpiredSessionContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Icon": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "position": {
                                "enum": [
                                    "RELATIVE",
                                    "ABSOLUTE"
                                ],
                                "type": "string"
                            },
                            "offsetTop": {
                                "type": "string"
                            },
                            "offsetBottom": {
                                "type": "string"
                            },
                            "offsetStart": {
                                "type": "string"
                            },
                            "offsetEnd": {
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL"
                                ],
                                "type": "string"
                            },
                            "aspectRatio": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.SeenReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.SeenDeletedBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "seenAt": {
                                "type": "string",
                                "description": "Tells when the message was seen.",
                                "format": "date-time",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InlineImage": {
                "required": [
                    "contentType",
                    "fileId",
                    "fileName"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "fileId": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cfUrl": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AgentStatusRequest": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "BUSY",
                            "INVISIBLE",
                            "AWAY"
                        ],
                        "type": "string",
                        "description": "Agent status."
                    }
                },
                "example": {
                    "status": "ACTIVE"
                }
            },
            "infobip-ccaas-conversation-service.openapi.CardDialPhoneSuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardSuggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            },
                            "phoneNumber": {
                                "pattern": "\\+?\\d{5,15}",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipzalozmsgatewayservice.openapi.Price": {
                "type": "object",
                "properties": {
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per one message."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CustomInteractiveAppleBusinessChatMoContent": {
                "required": [
                    "attachments",
                    "intentGroupLocale",
                    "urlData",
                    "urlRawData"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "urlData": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Parameter"
                                }
                            },
                            "urlRawData": {
                                "type": "string"
                            },
                            "sessionIdentifier": {
                                "type": "string"
                            },
                            "attachments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoAttachment"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.Duration": {
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "unit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Duration information."
            },
            "infobip-ccaas-conversation-service.openapi.AppleQuickReplyItem": {
                "required": [
                    "identifier",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ConversationTextContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.IndiaDltOptions": {
                "required": [
                    "principalEntityId"
                ],
                "type": "object",
                "properties": {
                    "contentTemplateId": {
                        "type": "string",
                        "description": "Id of your registered DTL content template that matches this message's text."
                    },
                    "principalEntityId": {
                        "type": "string",
                        "description": "Your assigned DTL principal entity id."
                    }
                },
                "description": "Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India."
            },
            "infobip-ccaas-conversation-service.openapi.FacebookPostInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "commentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostMoContent"
                            },
                            "facebookSocialData": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookSocialData"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FacebookMtEmailQuickReply": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMtQuickReply"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.SeenDeletedBase": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID of the sent message.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Number which sent the message.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Registered WhatsApp business number.",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent.",
                        "format": "date-time",
                        "writeOnly": true
                    }
                }
            },
            "infobip-forms.openapi.FormElementWithOptions": {
                "required": [
                    "component",
                    "fieldId",
                    "hidden",
                    "options",
                    "required"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-forms.openapi.FormElementOption"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TypingIndicatorContent": {
                "required": [
                    "typingIndicatorType"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "typingIndicatorType": {
                                "enum": [
                                    "TYPING_START",
                                    "TYPING_END"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.AlertType": {
                "type": "string",
                "description": "Indicates type of alert",
                "example": "Limit reached"
            },
            "infobip-ccaas-conversation-service.openapi.CardReplySuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardSuggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageWithCaptionContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "LOCATION"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmContent"
                    }
                ]
            },
            "infobip-push-services-helper.openapi.PushApiInstance": {
                "type": "object",
                "properties": {
                    "registrationId": {
                        "type": "string",
                        "description": "Push registration id of the instance",
                        "readOnly": true
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "String id of the application that the instance belongs to",
                        "readOnly": true
                    },
                    "additionalData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Custom attributes set for a device"
                        },
                        "description": "Custom attributes set for a device"
                    },
                    "systemData": {
                        "$ref": "#/components/schemas/infobip-push-services-helper.openapi.PushApiInstanceSystemData"
                    },
                    "isPrimary": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CallsOutboundContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "CALL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileOutboundCallsContent",
                        "HANG_UP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.HangUpOutboundCallsContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextWithButtonViberContent": {
                "required": [
                    "action",
                    "caption",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "action": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-portal-audit-logs.openapi.SearchResult": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "User's action.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of an action.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID of an action.",
                        "nullable": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "User's IP Address.",
                        "nullable": true
                    },
                    "item": {
                        "type": "string",
                        "description": "Entity on which action is executed.",
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Exact time when user executed an action.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "infobip-ccaas-conversation-service.openapi.QueueResultPage": {
                "type": "object",
                "properties": {
                    "queues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Queue"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "queues": [
                        {
                            "id": "3BD35AB01DFD27E5AB48D57DC9DD02AB",
                            "name": "Croatian Support",
                            "isAutoAssignmentEnabled": false,
                            "createdAt": "2019-05-15T07:51:15.1870000+00:00",
                            "updatedAt": "2019-05-15T07:51:15.1870000+00:00"
                        },
                        {
                            "id": "5B7C4A0F8CC7D707908722AD8919E202",
                            "name": "Spanish Support",
                            "isAutoAssignmentEnabled": false,
                            "createdAt": "2019-05-15T07:51:01.4460000+00:00",
                            "updatedAt": "2019-05-15T07:51:01.4460000+00:00"
                        },
                        {
                            "id": "92C44D4D77DA67EABBD1EF9098A70754",
                            "name": "Keyword STOP",
                            "isAutoAssignmentEnabled": false,
                            "createdAt": "2019-05-15T07:51:39.6520000+00:00",
                            "updatedAt": "2019-05-15T07:51:39.6520000+00:00"
                        },
                        {
                            "id": "C685C19A7954C3A17C7F1002FED32C74",
                            "name": "English Support",
                            "isAutoAssignmentEnabled": false,
                            "createdAt": "2019-05-15T07:50:45.1550000+00:00",
                            "updatedAt": "2019-05-15T07:50:45.1550000+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 4,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "[Action](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example) that should be taken to eliminate the error."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable [description](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example) of the status."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status [group ID](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example).",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status [group name](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example)."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status [ID](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example).",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status [name](https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example)."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsTextHeaderContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 60,
                                "minLength": 1,
                                "type": "string",
                                "description": "Text of the message header."
                            }
                        }
                    }
                ]
            },
            "infobip-push-services-helper.openapi.ContactInformationEmail": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobippushko.openapi.voip.reports.v1.VoiceData": {
                "title": "VoiceData",
                "type": "object",
                "properties": {
                    "feature": {
                        "type": "string",
                        "description": "The name of the Infobip Voice service or feature."
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was established and started ringing."
                    },
                    "answerTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was answered."
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was ended."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the call, in seconds. Show the true duration of the call. If the call lasted 6 seconds, the value will show \"6\".",
                        "format": "int32"
                    },
                    "chargedDuration": {
                        "type": "integer",
                        "description": "Charged duration of the call, in seconds. Shows the charged duration of the call according to billing model.<br/>If the call lasted 6 second, and the billing model is 1/1 the shown value will be \"6\". If the call lasted 6 seconds, and the billing model is 15/15 then the shown value will be \"15\".<br/>Available billing models: 1/1, 15/15, 30/30, 60/60.",
                        "format": "int32"
                    },
                    "fileDuration": {
                        "type": "number",
                        "description": "Duration of the Voice message audio file, in seconds.",
                        "format": "double"
                    },
                    "dtmfCodes": {
                        "type": "string",
                        "description": "DTMF code entered by user. Can be empty string, if user did not press anything, or `null` in case of IVR if user did not participate in Collect action."
                    },
                    "ivr": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.reports.v1.IvrData"
                            }
                        ],
                        "description": "Fields representing details about IVR, if outbound IVR is being used. If the call was not IVR, the field will be null."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AgentAssignRequest": {
                "required": [
                    "agentId"
                ],
                "type": "object",
                "properties": {
                    "agentId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "agentId identifier"
                    }
                },
                "example": {
                    "agentId": "44B93F4D2BA3C58B58526EAEAA1AB333"
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookTemplatePayload": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BUTTON",
                            "GENERIC"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ButtonFacebookTemplatePayload",
                        "GENERIC": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GenericFacebookTemplatePayload"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoAudioContent": {
                "required": [
                    "sentAt",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.ApplicationResponse": {
                "title": "ApplicationResponse",
                "type": "object",
                "properties": {
                    "apns": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.ApnsData"
                            }
                        ],
                        "description": "APNs Data"
                    },
                    "applicationCode": {
                        "type": "string",
                        "description": "Push application code."
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "Push application ID."
                    },
                    "description": {
                        "type": "string",
                        "description": "Push application description."
                    },
                    "gcm": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.GcmData"
                            }
                        ],
                        "description": "GCM data"
                    },
                    "name": {
                        "type": "string",
                        "description": "Push application name."
                    },
                    "registrationsCount": {
                        "type": "integer",
                        "description": "Number of Push application registrations.",
                        "format": "int64"
                    }
                }
            },
            "infobipsc.openapi.TokenResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer",
                        "description": "Expiration in seconds.",
                        "format": "int32"
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Destination": {
                "title": "Destination",
                "required": [
                    "to"
                ],
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Message destination address. Addresses must be in international format (Example: `41793026727`).",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CarouselContainer": {
                "required": [
                    "contents"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Container"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contents": {
                                "maxItems": 10,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BubbleContainer"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AppleAccount": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamButton": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "OPEN_APPLICATION",
                            "OPEN_URL",
                            "CHATBOT_SWITCH",
                            "REPLY",
                            "REPLY_WITH_TEXT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "OPEN_APPLICATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamOpenApplicationButton",
                        "OPEN_URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamOpenUrlButton",
                        "CHATBOT_SWITCH": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamChatbotSwitchButton",
                        "REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamReplyButton",
                        "REPLY_WITH_TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamReplyWithTextButton"
                    }
                }
            },
            "infobippushko.openapi.rcs.mo.reports.FileMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.Type"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the file which is sent in an incoming message.",
                        "writeOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of a file which is sent in an incoming message.",
                        "writeOnly": true
                    },
                    "contentType": {
                        "type": "string",
                        "description": "Content type of a file which is sent in an incoming message.",
                        "writeOnly": true
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the file which is sent in an incoming message. Minimum value is 0. Size of file is considered to be expressed in bytes.",
                        "format": "int64",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.EmailContent": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Contact's email."
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of the email. Can be `HOME` or `WORK`."
                    }
                },
                "description": "Array of emails information."
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotUnsubscribedMoContent": {
                "required": [
                    "messageToken",
                    "timestamp",
                    "type",
                    "userId"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AgentResponseResultPage": {
                "type": "object",
                "properties": {
                    "agents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AgentResponse"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "agents": [
                        {
                            "id": "9030551F327704A0F262995A1A4B4596",
                            "displayName": "Malcolm Young",
                            "status": "INVISIBLE",
                            "role": "AGENT",
                            "enabled": true,
                            "createdAt": "2019-05-10T07:45:23.7770000+00:00",
                            "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                        },
                        {
                            "id": "97457D13B1FC79AF3C1A1096AE7E77AB",
                            "displayName": "Angus Young",
                            "status": "ACTIVE",
                            "role": "SUPERVISOR",
                            "enabled": true,
                            "createdAt": "2019-05-10T07:45:23.7770000+00:00",
                            "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                        },
                        {
                            "id": "E83E787CF2613450157ADA3476171E3F",
                            "displayName": "Bon Scott",
                            "status": "INVISIBLE",
                            "role": "AGENT",
                            "enabled": true,
                            "createdAt": "2019-05-10T07:45:23.7770000+00:00",
                            "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                        },
                        {
                            "id": "F66D67327326FCCB027BEAA916B94542",
                            "displayName": "Phil Rudd",
                            "status": "ACTIVE",
                            "role": "AGENT",
                            "enabled": true,
                            "createdAt": "2019-05-10T07:45:23.7770000+00:00",
                            "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                        },
                        {
                            "id": "F66D67327326FCCB027BEAA916B94542",
                            "displayName": "Brian Johnson",
                            "status": "ACTIVE",
                            "role": "AGENT",
                            "enabled": true,
                            "createdAt": "2019-05-10T07:45:23.7770000+00:00",
                            "updatedAt": "2019-05-10T09:53:58.4630000+00:00"
                        },
                        {
                            "id": "7E77AB97457D13B1FC79AF3C1A1096AE7E77AB",
                            "displayName": "Neil Young",
                            "status": "ACTIVE",
                            "role": "AGENT",
                            "enabled": false,
                            "createdAt": "2019-03-10T07:45:44.7440000+00:00",
                            "updatedAt": "2019-03-10T09:33:58.3740000+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 6,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterGif": {
                "type": "object",
                "properties": {
                    "photoUrl": {
                        "type": "string"
                    },
                    "videoUrl": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.CreateApiKeyRequest": {
                "title": "CreateApiKeyRequest",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "allowedIPs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP addresses or IP ranges from which this API key will be used. Authentication will fail from any other IP not specified in this list.",
                        "externalDocs": {
                            "description": "It is recommended to set up AllowedIPs by security recommendations",
                            "url": "https://www.infobip.com/docs/essentials/security-recommendations#entry-point-specific-users"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Only enabled API keys will be accepted. When revoking existing API key, this property can be set to false."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this API Key."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.Permission"
                        },
                        "description": "List of permissions this API key has granted."
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Date from which this API key is/will be valid.",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Date until this API key will be valid.",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "quickReply": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoQuickReply"
                            },
                            "replyTo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyToInstagramMoContent"
                            },
                            "referral": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReferralInstagramMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.SocialUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UnsupportedWhatsAppMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.PostFacebookContent": {
                "required": [
                    "content"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "FACEBOOK_SENDER_ACTION",
                                    "FACEBOOK_TEMPLATE",
                                    "COMMENT",
                                    "POST"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipzalozmsgatewayservice.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageLineContent": {
                "required": [
                    "thumbnailUrl",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "thumbnailUrl": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.ContactMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contacts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Contact"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-recording-amg.openapi.DownloadResponseModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique recording identifier"
                    },
                    "downloadUrl": {
                        "type": "string",
                        "description": "File url."
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Date and time until download URL is valid. It is in *`YYYY-MM-DDThh:mm:ss.SSSZ` format `(2019-04-25T18:00:00.000+0000))`*"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.PhoneContent": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string",
                        "description": "Contact's phone number."
                    },
                    "type": {
                        "enum": [
                            "CELL",
                            "MAIN",
                            "IPHONE",
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of the phone number. Can be `CELL`, `MAIN`, `IPHONE`, `HOME` or `WORK`."
                    },
                    "waId": {
                        "type": "string",
                        "description": "Contact's WhatsApp ID."
                    }
                },
                "description": "Array of phones information."
            },
            "infobippushko.openapi.whatsapp.Phone": {
                "title": "Phone",
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string",
                        "description": "Contact phone number.",
                        "writeOnly": true
                    },
                    "waId": {
                        "type": "string",
                        "description": "WhatsApp ID.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "CELL",
                            "MAIN",
                            "IPHONE",
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of a phone.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextGbmMoContent": {
                "required": [
                    "context",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.StatusCodeResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobipomniflowwebhook.openapi.ExceptionResponse": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "description": "Response error codes\n\n<table>\n<tr><th>Error</th><th>ErrorCode</th><th>HTTP status</th></tr>\n<tr><td>Bad request</td><td>40001</td><td>400</td></tr>\n<tr><td>Duplicate person</td><td>40002</td><td>400</td></tr>\n<tr><td>Person manipulation failed</td><td>40003</td><td>400</td></tr>\n<tr><td>Person already in flow</td><td>40004</td><td>400</td></tr>\n<tr><td>Flow inactive</td><td>40005</td><td>400</td></tr>\n<tr><td>Person is not in the flow</td><td>40006</td><td>400</td></tr>\n<tr><td>Flow not found</td><td>40401</td><td>404</td></tr>\n<tr><td>Person not found</td><td>40402</td><td>404</td></tr>\n<tr><td>Internal server error</td><td>50001</td><td>500</td></tr>\n</table>",
                "example": {
                    "errorCode": 40001,
                    "errorMessage": ""
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.StartAuthenticationRequest": {
                "title": "StartAuthenticationRequest",
                "required": [
                    "applicationId",
                    "messageId",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "2FA application ID.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Use this parameter if you wish to override the sender ID from the [created](#channels/sms/create-2fa-message-template) message template parameter `senderId`."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message template ID that will be sent to phone number.",
                        "writeOnly": true
                    },
                    "placeholders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key value pairs that will be replaced during message sending. Placeholder keys should NOT contain curly brackets and should NOT contain a `pin` placeholder. Valid example: `\"placeholders\":{\"firstName\":\"John\"}`",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Phone number to which the 2FA message will be sent. Example: 41793026727.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Queue": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Queue name."
                    },
                    "enabledAgentsCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enabledRoutesCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "isAutoAssignmentEnabled": {
                        "type": "boolean",
                        "description": "Queue Auto-assignment toggle.",
                        "default": false
                    },
                    "stickyAgentTimeoutDays": {
                        "type": "integer",
                        "description": "Number of days since last interaction with the customer.",
                        "format": "int64"
                    },
                    "isStickyAutoAssignmentEnabled": {
                        "type": "boolean",
                        "description": "Auto-assignment according to last interaction with the customer."
                    },
                    "workingHoursId": {
                        "type": "string",
                        "description": "Working hours Id queue belongs to"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "example": {
                    "name": "Spanish Support",
                    "isAutoAssignmentEnabled": false
                }
            },
            "infobip-ccaas-conversation-service.openapi.UrlInstagramMessagingButton": {
                "required": [
                    "title",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.number.masking.callback.Response": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.number.masking.DialCommand"
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.number.masking.AudioCommand"
                    }
                ],
                "discriminator": {
                    "propertyName": "command",
                    "mapping": {
                        "dial": "#/components/schemas/infobippushko.openapi.number.masking.DialCommand",
                        "audio": "#/components/schemas/infobippushko.openapi.number.masking.AudioCommand"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.BulkRequest": {
                "title": "BulkRequest",
                "required": [
                    "sendAt"
                ],
                "type": "object",
                "properties": {
                    "sendAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AccountConfigurationRequest": {
                "type": "object",
                "properties": {
                    "webhookUrl": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Webhook url all inbound messages will be forwarded to."
                    }
                },
                "example": {
                    "webhookUrl": "https://example.com"
                }
            },
            "infobip-iot-siman-service.iot.openapi.UsageDataResponse": {
                "type": "object",
                "properties": {
                    "receivedSmsCount": {
                        "type": "integer",
                        "description": "Number of SMS received for the time specified by the date field",
                        "example": 10
                    },
                    "sentSmsCount": {
                        "type": "integer",
                        "description": "Number of SMS sent for the time specified by the date field",
                        "example": 15
                    },
                    "usedDataBytes": {
                        "type": "integer",
                        "description": "Data usage for the time specified by the date field.",
                        "example": 982016
                    },
                    "receivedCallsCount": {
                        "type": "integer",
                        "description": "Number of received calls for the time specified by the date field",
                        "example": 10
                    },
                    "sentCallsCount": {
                        "type": "integer",
                        "description": "Number of sent calls for the time specified by the date field",
                        "example": 15
                    }
                },
                "description": "Single record in the specified range contains the usage recorded at the point in time given in the date field.\n"
            },
            "infobip-ccaas-conversation-service.openapi.LineQuickReplyAction": {
                "required": [
                    "label"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "URI",
                            "POSTBACK",
                            "MESSAGE",
                            "DATETIMEPICKER",
                            "CAMERA",
                            "CAMERAROLL",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "URI": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UriAction",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackAction",
                        "MESSAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageAction",
                        "DATETIMEPICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DatetimePickerAction",
                        "CAMERA": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CameraAction",
                        "CAMERAROLL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CameraRollAction",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationAction"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.CalendarEventAction": {
                "required": [
                    "content",
                    "dateTime",
                    "description",
                    "title",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "dateTime": {
                                "type": "string",
                                "description": "Date and time of the event with minute precision in the local time zone of the device.",
                                "format": "date-time",
                                "example": {
                                    "offset": {
                                        "totalSeconds": 0,
                                        "id": "Z",
                                        "rules": {
                                            "fixedOffset": true,
                                            "transitions": [],
                                            "transitionRules": []
                                        }
                                    },
                                    "nano": 0,
                                    "year": 2021,
                                    "monthValue": 1,
                                    "dayOfMonth": 1,
                                    "hour": 12,
                                    "minute": 15,
                                    "second": 0,
                                    "month": "JANUARY",
                                    "dayOfWeek": "FRIDAY",
                                    "dayOfYear": 1
                                }
                            },
                            "title": {
                                "type": "string",
                                "description": "Title of the event.",
                                "example": "Example title"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the event.",
                                "example": "Example description"
                            },
                            "content": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string",
                                "description": "Action content.",
                                "example": "Example content"
                            }
                        }
                    }
                ],
                "description": "Action of creating a calendar event."
            },
            "infobip-ccaas-conversation-service.openapi.LocationCoordinatesFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.notify.NumberContextResponse": {
                "title": "NumberContextResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.notify.NumberContextResponseDetails"
                        },
                        "description": "Collection of preliminary lookup results.",
                        "readOnly": true
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimDeliveryTrackingAlimButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.BeaconEventLineMoContent": {
                "required": [
                    "hwid",
                    "replyToken",
                    "timestamp",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "hwid": {
                                "type": "string"
                            },
                            "dm": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.DocumentWithCaptionContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "LOCATION"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                    }
                ]
            },
            "infobip-omni.openapi.com.infobip.omni.api.controller.request.OmniAdvancedRequest": {
                "title": "OmniAdvancedRequest",
                "type": "object",
                "properties": {
                    "scenarioKey": {
                        "type": "string",
                        "description": "Scenario key that uniquely identifies the scenario which will be used when sending message. If this field is not set, the default scenario will be used.",
                        "writeOnly": true
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "writeOnly": true
                    },
                    "destinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Destination"
                        },
                        "description": "Destinations to which you are sending a message, such as phone number, email address, or unique ID.",
                        "writeOnly": true
                    },
                    "sms": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.SmsData"
                    },
                    "whatsApp": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.WhatsAppData"
                    },
                    "viber": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ViberData"
                    },
                    "voice": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.VoiceData"
                    },
                    "email": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.EmailData"
                    },
                    "push": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.PushData"
                    },
                    "line": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.LineData"
                    },
                    "kakaoChingu": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguData"
                    },
                    "kakaoAlim": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimData"
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Date and time when the message is to be sent. Used for scheduled OMNI messaging (first message in the OMNI flow not sent immediately, but at scheduled time).",
                        "format": "date-time"
                    },
                    "vKontakte": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.VKontakteData"
                    }
                }
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.ApiKey": {
                "title": "ApiKey",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "accountKey": {
                        "type": "string",
                        "description": "Unique identifier for account this API key belongs to."
                    },
                    "allowedIPs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed IP addresses from which this API key will be used. Authentication will fail from any other IP not specified in this list."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Only enabled API keys will be accepted. When revoking existing API key, this property can be set to false."
                    },
                    "key": {
                        "type": "string",
                        "description": "Unique key specifying this account."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this API Key."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.Permission"
                        },
                        "description": "List of permissions this API key has granted."
                    },
                    "publicApiKey": {
                        "type": "string",
                        "description": "Authentication key. Use this value for authentication on API. Keep this in secure storage and don't share it."
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Date from which this API key is/will be valid.",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Date until this API key will be valid.",
                        "format": "date-time"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.MessageTextMiMtApiContent": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message sender",
                        "example": "mySender"
                    },
                    "to": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message destination",
                        "example": "385977666618"
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.TextMiMtApiContent"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.SmsFailover"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Custom client's data that will be included in Delivery Report"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.NoAction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    }
                ]
            },
            "infobip-recording-amg.openapi.RecordingSearchRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique recording identifier."
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of unique recording identifiers."
                        },
                        "description": "List of unique recording identifiers."
                    },
                    "from": {
                        "type": "string",
                        "description": "Caller ID. *Number is in E.164 format `(38761222333)`*"
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination number. *Number is in E.164 format `(38761222333)`*"
                    },
                    "transferTo": {
                        "type": "string",
                        "description": "Destination number of transferred call. *Number is in E.164 format `(38761222333)`*"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP address."
                    },
                    "createdBefore": {
                        "type": "string",
                        "description": "Mandatory field. Filters all recordings that are created before defined date and time. Defined date is included in search results. *Must be in `YYYY-MM-DDThh:mm:ss.SSSZ` format `(2019-04-25T18:00:00.000+0000))`*"
                    },
                    "createdAfter": {
                        "type": "string",
                        "description": "Filters all recordings that are created after defined date and time. Defined date is included in search results. *Must be in `YYYY-MM-DDThh:mm:ss.SSSZ` format `(2019-04-25T18:00:00.000+0000))`*"
                    },
                    "minDuration": {
                        "type": "integer",
                        "description": "Min duration of recording in seconds. *(Inclusive)*",
                        "format": "int32"
                    },
                    "maxDuration": {
                        "type": "integer",
                        "description": "Max duration of recording in seconds. *(Inclusive)*",
                        "format": "int32"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Call identifier that is generated or set by user."
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "Unique identifier of bulk messages defined by user."
                    },
                    "communicationName": {
                        "type": "string",
                        "description": "This is name of the *Broadcast* or *Flow* defined by user using [Infobip Portal](http://portal.infobip.com/)"
                    },
                    "featureName": {
                        "type": "string",
                        "description": "Feature name that is used for recording. List of all features can be found in list bellow."
                    },
                    "featureType": {
                        "type": "string",
                        "description": "Feature type can be **INBOUND** or **OUTBOUND** ."
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "Scenario Id is unique scenario identifier that is obtained by creating scenario using [IVR api.](https://dev.infobip.com/ivr)."
                    },
                    "scenarioName": {
                        "type": "string",
                        "description": "Scenario name defined by user during IVR creation."
                    },
                    "recordActionIdentifier": {
                        "type": "string",
                        "description": "Used as a identifier of the recording inside [Record Action](https://dev.infobip.com/ivr/create-ivr-scenario#record)."
                    },
                    "agentId": {
                        "type": "string",
                        "description": "CCAAS Agent ID that answered call."
                    },
                    "transferToAgentId": {
                        "type": "string",
                        "description": "CCAAS AgentId that call was transferred to."
                    },
                    "transferFromAgentId": {
                        "type": "string",
                        "description": "CCAAS AgentId that call was transferred from."
                    },
                    "correlationId": {
                        "type": "string",
                        "description": "Call identifier generated by platform to match all call legs included."
                    },
                    "conversationId": {
                        "type": "string",
                        "description": "CCAAS Conversation identifier generated by platform."
                    },
                    "callId": {
                        "type": "string",
                        "description": "Call identifier generated by platform to match call leg with recording."
                    },
                    "sourceStatus": {
                        "type": "string",
                        "description": "Status of the SOURCE file. Possible values are **RECORDED**, **DELETED** ."
                    },
                    "downloadStatus": {
                        "type": "string",
                        "description": "Status of the DOWNLOAD file. Possible values are **NONE**, **DELETED**, **PREPARING**, **FAILED**, **READY**, **SFTP**, **UPLOADING_SFTP** ."
                    },
                    "filename": {
                        "type": "string",
                        "description": "Recorded file name."
                    },
                    "page": {
                        "$ref": "#/components/schemas/infobip-recording-amg.openapi.Page"
                    }
                }
            },
            "mobile-identity-service.openapi.SmvVerifyAdvancedRequestDto": {
                "required": [
                    "callbackUrl",
                    "consentGranted",
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "consentGranted": {
                        "type": "boolean",
                        "description": "Indicates whether you have consent from mobile phone number's owner to perform this request. All requests that do not have this property set to \"true\" will be rejected",
                        "default": false,
                        "example": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Mobile phone number (MSISDN) to verify. The number must be in international format",
                        "example": "441134961234"
                    },
                    "deviceIp": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address of the mobile device that will be verified with operator",
                        "format": "xxx.xxx.xxx.xxx|xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx",
                        "example": "10.20.30.100|1111:22222:3333:4444:AAAA:BBBB:CCCC:DDDD"
                    },
                    "devicePort": {
                        "type": "integer",
                        "description": "Port of the mobile device that will be verified with operator. Can be used only when \"deviceIp\" is also provided",
                        "format": "int32",
                        "example": 54321
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "Your URL that will be called to provide verification result when the process is complete.\nCallback request will be sent using HTTP <code>POST</code> method\nand it only expects <code>200 OK</code> status with <code>no content</code> in response.<br>\nExample of a successful verification request:\n<br>\n<pre><code>\n{\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"result\":\" VALID\",\n    \"status\":\"COMPLETED\",\n    \"error\": \"null\"\n}\n</code></pre>\nExample of an unsuccessful verification request:\n<br>\n<pre><code>\n{\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"result\": \"null\",\n    \"status\":\"COMPLETED\",\n    \"error\": {\n        \"id\": 202,\n        \"name\": \"EC_CONSENT_NOT_GRANTED\",\n        \"description\": \"User consent not granted\"\n    },\n}\n</code></pre>\nExample of an unsuccessful verification request and fallback to SMS:\n<br>\n<pre><code>\n{\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"result\": \"OTP_SMS_SENT\",\n    \"status\":\"COMPLETED\",\n    \"error\": \"null\",\n}\n</code></pre>\nExample of a detected Sim Swap event:\n<br>\n<pre><code>\n{\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"result\": \"SIM_SWAP_DETECTED\",\n    \"status\":\"COMPLETED\",\n    \"error\": \"null\"\",\n}\n</code></pre>\n",
                        "example": "https://my-site.com/my-path"
                    },
                    "returnUrl": {
                        "type": "string",
                        "description": "An URL to which the mobile device will be redirected to when verification is complete.",
                        "example": "https://my-site.com/my-shop.html"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.SmsFailoverDto"
                    },
                    "simSwapCheck": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.SimSwapCheckDto"
                    }
                },
                "description": "Silent Mobile Verification Advanced request object"
            },
            "infobip-ccaas-conversation-service.openapi.TelegramSender": {
                "required": [
                    "botId"
                ],
                "type": "object",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.SimResponse": {
                "type": "object",
                "properties": {
                    "iccid": {
                        "type": "string",
                        "description": "Integrated Circuit Card Identifier",
                        "example": "8944501704188849000"
                    },
                    "name": {
                        "type": "string",
                        "description": "SIM card name in the system",
                        "example": "Sim Card 1"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the SIM card. Possible statuses are Imported, Activation Ready, Active, Suspended, Deactivated.",
                        "example": "Activation Ready"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date and time of first provision of a SIM card",
                        "example": "2020-01-13T15:30:58"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date and time of last modification of a SIM card",
                        "example": "2020-01-13T20:37:28"
                    },
                    "msisdn": {
                        "type": "string",
                        "description": "Mobile Station International Subscriber Directory Number",
                        "example": "882360003776012"
                    },
                    "imsi": {
                        "type": "string",
                        "description": "International mobile subscriber identity",
                        "example": "310150123456789"
                    },
                    "model": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.ModelType"
                            },
                            "grade": {
                                "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.ModelGrade"
                            },
                            "provisioning": {
                                "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.ModelProvisioning"
                            },
                            "size": {
                                "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.ModelSize"
                            }
                        }
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.LocationMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "required": [
                            "latitude",
                            "longitude"
                        ],
                        "type": "object",
                        "properties": {
                            "longitude": {
                                "type": "number",
                                "description": "Longitude. The value must be between -90 and 90.",
                                "format": "double",
                                "writeOnly": true
                            },
                            "latitude": {
                                "type": "number",
                                "description": "Latitude. The value must be between -180 and 180.",
                                "format": "double",
                                "writeOnly": true
                            },
                            "name": {
                                "type": "string",
                                "description": "Location name.",
                                "writeOnly": true
                            },
                            "address": {
                                "type": "string",
                                "description": "Location address.",
                                "writeOnly": true
                            },
                            "url": {
                                "type": "string",
                                "description": "Location URL.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TelegramChat": {
                "required": [
                    "chatId"
                ],
                "type": "object",
                "properties": {
                    "chatId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UrlFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.TextMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string",
                                "description": "Text of received message.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.notify.NumberContextResponseDetails": {
                "title": "NumberContextResponseDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the performed lookup.",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "description": "The looked up phone number.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterAccount"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterUser"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmContent"
                            },
                            "quickReplies": {
                                "maxItems": 13,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmQuickReply"
                                }
                            },
                            "buttons": {
                                "maxItems": 3,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmButton"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-email-api-amg.openapi.BulkUpdateStatusRequest": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.BulkStatus"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TapbackAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateBodyContent": {
                "required": [
                    "placeholders"
                ],
                "type": "object",
                "properties": {
                    "placeholders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionRequest.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "actionRequest": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionRequest"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ImageContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "properties": {
                    "mediaUrl": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of an image sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported image types are `JPG`, `JPEG`, `PNG`. Maximum image size is 5MB."
                    },
                    "caption": {
                        "maxLength": 3000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Caption of the image."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotContact": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.RcsOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                            },
                            "suggestions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.AccountRecordingConfigCli": {
                "required": [
                    "mediaType"
                ],
                "type": "object",
                "properties": {
                    "inbound": {
                        "type": "boolean",
                        "description": "Enables inbound call recording. At least one of the parameters 'inbound' or 'outbound' must be set to true. "
                    },
                    "outbound": {
                        "type": "boolean",
                        "description": "Enables outbound call recording. At least one of the parameters 'inbound' or 'outbound' must be set to true. "
                    },
                    "mediaType": {
                        "enum": [
                            "AUDIO",
                            "AUDIO_AND_VIDEO"
                        ],
                        "type": "string",
                        "description": "Specifies whether the recording should be done on audio or both audio and video."
                    },
                    "videoDownloadPreparation": {
                        "type": "boolean",
                        "description": "Start preparing a downloadable file format of video recording as soon as a recording is made.",
                        "default": false
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "enabledChangedAt": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "example": {
                    "inbound": true,
                    "outbound": false,
                    "mediaType": "AUDIO_AND_VIDEO"
                }
            },
            "infobip-ccaas-disposition.openapi.ConditionalField": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Field"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "description": "Is the conditional field required to fill?"
                    }
                },
                "description": "List of fields to present if agent input matches condition value."
            },
            "infobippushko.openapi.rcs.mo.reports.ReportResponse": {
                "title": "rcsReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.MoReport"
                                },
                                "description": "Collection of reports, one per every received message."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.MessageCount"
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.InAppExpirationTimeUnit": {
                "title": "InAppExpirationTimeUnit",
                "enum": [
                    "MINUTES",
                    "HOURS"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.UnknownTwitterDmMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "raw": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.Contact": {
                "title": "Contact",
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Address"
                        },
                        "description": "Address information."
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Birthday information, YYYY-MM-DD formatted string.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Email"
                        },
                        "description": "Email information."
                    },
                    "name": {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Name"
                    },
                    "org": {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Organization"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Phone"
                        },
                        "description": "Phone information."
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Url"
                        },
                        "description": "URL information."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.org.infobip.ccaas.connector.model.message.Message": {
                "required": [
                    "content",
                    "contentType",
                    "conversationId",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel": {
                        "enum": [
                            "SMS",
                            "VIBER",
                            "FACEBOOK_MESSENGER",
                            "WHATSAPP",
                            "RCS",
                            "LIVE_CHAT",
                            "LINE",
                            "GOOGLE_BUSINESS_MESSAGES",
                            "TELEGRAM",
                            "INSTAGRAM_MESSAGING",
                            "KAKAO_SANGDAM",
                            "TWITTER_DM"
                        ],
                        "type": "string",
                        "description": "Available communication channels"
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender phone number, FB messenger ID or live chat widget ID."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination phone number, FB messenger or live chat user ID."
                    },
                    "direction": {
                        "enum": [
                            "INBOUND",
                            "OUTBOUND"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "conversationId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageContent"
                    },
                    "singleSendMessage": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageObject"
                    },
                    "contentType": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "LOCATION",
                            "TEMPLATE",
                            "AUDIO",
                            "VOICE",
                            "VIDEO",
                            "DOCUMENT",
                            "CONTACT",
                            "VOICE_CALL",
                            "VIDEO_CALL",
                            "CALL",
                            "BUTTON",
                            "TYPING_INDICATOR",
                            "LIST_PICKER",
                            "FILE",
                            "LIST_PICKER_RESPONSE",
                            "POSTBACK",
                            "SURVEY_REQUEST",
                            "SURVEY_RESPONSE",
                            "FACEBOOK_TEMPLATE",
                            "PRE_CHAT_FORM",
                            "LC_FORM_RESPONSE",
                            "LC_QUICK_REPLY",
                            "LC_CAROUSEL",
                            "TEXT_WITH_BUTTON",
                            "TEXT_WITH_IMAGE_AND_BUTTON",
                            "ABC_MULTI_TYPE",
                            "CARD",
                            "SUGGESTION_RESPONSE",
                            "CAROUSEL",
                            "TEXT_WITH_SUGGESTION",
                            "EMAIL",
                            "RICH_LINK",
                            "TIME_PICKER",
                            "TIME_PICKER_RESPONSE",
                            "BUTTON_RESPONSE",
                            "WHATSAPP_STICKER",
                            "VIBER_STICKER",
                            "INSTAGRAM_STICKER",
                            "CALL_FILE",
                            "CALL_TRANSCRIPT",
                            "CALL_HANGUP",
                            "CALL_START",
                            "ABC_CUSTOM_INTERACTIVE_CONTENT",
                            "APPLE_PAY_REQUEST_CONTENT",
                            "APPLE_AUTH_REQUEST_CONTENT",
                            "APPLE_CUSTOM_INTERACTIVE_CONTENT",
                            "BUTTON_LIST",
                            "KAKAO_SANGDAM_SESSION_EXPIRED",
                            "SHARE",
                            "INTERACTIVE",
                            "INTERACTIVE_BUTTON_REPLY",
                            "INTERACTIVE_LIST_REPLY",
                            "PRODUCT"
                        ],
                        "type": "string",
                        "default": "TEXT"
                    }
                },
                "example": {
                    "from": "447492263897",
                    "to": "44776333666",
                    "channel": "WHATSAPP",
                    "contentType": "TEXT",
                    "content": {
                        "text": "Dear customer, thank you for everything."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Pagination": {
                "type": "object",
                "properties": {
                    "totalItems": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "orderBy": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.StickerMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "Url for media download.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.SmsFailoverDto": {
                "required": [
                    "from",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Message failover sender",
                        "example": "441134961234"
                    },
                    "text": {
                        "type": "string",
                        "description": "Message failover text",
                        "example": "One time verification pin: 1234"
                    },
                    "validityPeriod": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The message validity period in seconds. When the period expires, it will not be allowed for the message to be sent",
                        "format": "int32",
                        "example": 5
                    }
                },
                "description": "SMS failover message contents. In case this field is null, no SMS failover will be done."
            },
            "infobip-ccaas-conversation-service.openapi.ShareInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipamgnumbersapi.openapi.PurchaseNumberRequest": {
                "required": [
                    "numberKey"
                ],
                "type": "object",
                "properties": {
                    "numberKey": {
                        "type": "string"
                    }
                }
            },
            "infobip-email-api-amg.openapi.BulkStatusResponse": {
                "type": "object",
                "properties": {
                    "externalBulkId": {
                        "type": "string"
                    },
                    "bulks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-email-api-amg.openapi.BulkStatusInfo"
                        }
                    }
                }
            },
            "infobip-recording-amg.openapi.SearchResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-recording-amg.openapi.Recording"
                        }
                    },
                    "page": {
                        "$ref": "#/components/schemas/infobip-recording-amg.openapi.PageInfo"
                    }
                }
            },
            "infobipomniflowwebhook.openapi.IamEmailContact": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoLineContent": {
                "required": [
                    "thumbnailUrl",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "thumbnailUrl": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.RegionalOptions": {
                "title": "RegionalOptions",
                "type": "object",
                "properties": {
                    "indiaDlt": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.IndiaDltOptions"
                            }
                        ],
                        "description": "Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotKeyboardDisplay": {
                "type": "object",
                "properties": {
                    "nativeKeyboardHeight": {
                        "type": "boolean"
                    },
                    "percentageOfKeyboardOccupancy": {
                        "maximum": 70,
                        "minimum": 40,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.VoiceSetup": {
                "required": [
                    "action"
                ],
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.VoiceActionDetails"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.MailForwardAction": {
                "required": [
                    "mail"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mail": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.infobip.api.models.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is displayed.",
                        "writeOnly": true
                    },
                    "pricePerMessage": {
                        "type": "number",
                        "description": "The price per individual  message.",
                        "format": "double",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.GenericInstagramMessagingTemplateElement": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "subtitle": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "defaultAction": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingDefaultAction"
                    },
                    "buttons": {
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingButton"
                        }
                    }
                }
            },
            "infobip-omni.openapi.OmniResponseDetails": {
                "type": "object",
                "properties": {
                    "to": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.To"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.Status"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent message."
                    }
                },
                "description": "Array of sent message objects, one object per every message.",
                "readOnly": true
            },
            "infobip-mms-service.openapi.SendResult": {
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Unique bulk identifier.",
                        "example": "1"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-mms-service.openapi.MessageResult"
                        },
                        "description": "Array of sent message objects, one object per every message."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "General error description."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextInstagramPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.accounts.AccountsResponse": {
                "title": "AccountsResponse",
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.infobip.api.models.accounts.Account"
                        },
                        "description": "List of accounts"
                    }
                }
            },
            "infobippushko.openapi.voip.reports.v1.VoiceReportsResponse": {
                "title": "VoiceReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.voip.reports.v1.VoiceReport"
                        },
                        "description": "Arrays of delivery reports, one object for every message."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailTextContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.RcsApiResponse": {
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobiprcsapi.openapi.SingleMessageInfo"
                        }
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.query.NumberContextResponseDetails": {
                "title": "NumberContextResponseDetails",
                "type": "object",
                "properties": {
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Error"
                            }
                        ],
                        "description": "Detailed information on error, in case lookup failed.",
                        "readOnly": true
                    },
                    "imsi": {
                        "type": "string",
                        "description": "International Mobile Subscriber Identity, used to uniquely identify the user of a mobile network.",
                        "readOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country code and mobile network code concatenated. MccMnc will start with the MCC, and it will always have three digits, followed by the MNC (length of the MNC depends on the value of the MCC, and it can be two or three).",
                        "readOnly": true
                    },
                    "originalNetwork": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.Network"
                            }
                        ],
                        "description": "Information about the original network.",
                        "readOnly": true
                    },
                    "ported": {
                        "type": "boolean",
                        "description": "True if number has been ported.",
                        "readOnly": true
                    },
                    "portedNetwork": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.Network"
                            }
                        ],
                        "description": "Information about the ported network.",
                        "readOnly": true
                    },
                    "roaming": {
                        "type": "boolean",
                        "description": "True if number is currently in roaming.",
                        "readOnly": true
                    },
                    "roamingNetwork": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.Network"
                            }
                        ],
                        "description": "Information about the roaming network.",
                        "readOnly": true
                    },
                    "servingMSC": {
                        "type": "string",
                        "description": "Serving mobile switching center.",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ],
                        "description": "Status of the Number lookup query. Indicates if lookup was successful or not.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The looked up phone number.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Component": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT",
                            "SPAN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BOX": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Box",
                        "BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Button",
                        "FILLER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Filler",
                        "ICON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Icon",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image",
                        "SEPARATOR": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Separator",
                        "SPACER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Spacer",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Text",
                        "SPAN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Span"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Text": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "contents": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Span"
                                }
                            },
                            "flex": {
                                "maximum": 10,
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL"
                                ],
                                "type": "string"
                            },
                            "align": {
                                "enum": [
                                    "START",
                                    "END",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "gravity": {
                                "enum": [
                                    "TOP",
                                    "BOTTOM",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "wrap": {
                                "type": "boolean"
                            },
                            "maxLines": {
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "color": {
                                "type": "string"
                            },
                            "weight": {
                                "enum": [
                                    "BOLD",
                                    "REGULAR"
                                ],
                                "type": "string"
                            },
                            "action": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error.",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "readOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PostbackEventLineMoContent": {
                "required": [
                    "data",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "data": {
                                "type": "string"
                            },
                            "paramDate": {
                                "type": "string"
                            },
                            "paramTime": {
                                "type": "string"
                            },
                            "paramDatetime": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Sender": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PHONE_NUMBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender",
                        "FACEBOOK_MESSENGER_PAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPage",
                        "APPLE_BUSINESS_CHAT_ACCOUNT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleAccount",
                        "LINE_OFFICIAL_ACCOUNT_SENDER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineSender",
                        "LIVE_CHAT_APPLICATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatApplication",
                        "ZALO_NOTIFICATION_SERVICE_SENDER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ZaloSender",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailSender",
                        "GOOGLE_AGENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleAgent",
                        "TELEGRAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramSender",
                        "CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Conversation",
                        "VIBER_BOT_SENDER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSender",
                        "SOCIAL_PAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage",
                        "INSTAGRAM_BUSINESS_ACCOUNT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramBusinessAccount",
                        "KAKAO_SANGDAM_CHANNEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamChannel",
                        "TWITTER_ACCOUNT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterAccount"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextFacebookPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ConversationContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationTextContent"
                    }
                }
            },
            "infobippushko.openapi.sms.mt.reports.SMSReport": {
                "title": "SMSReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Unique ID attributed to  messages sent to multiple recipients.",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Unique SMS ID for individual messages sent.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Recipient number.",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Date and time the message was sent.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Date and time the message was finished processing by Infobip.\n\nThis is when the message was delivered to the specified destination.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "Long SMS messages have a character limit on how much can be sent over one message.\n\nLonger messages will be split up into multiple messages and sent separately.\n\nThis is the total count of messages one SMS was sent over.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "The callback data sent through the callbackData field in your fully featured SMS message.",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Price of the sent SMS.",
                        "writeOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Status"
                            }
                        ],
                        "description": "The delivery status of the message.",
                        "writeOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.UrlContent": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "Contact's url."
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of the url. Can be `HOME` or `WORK`."
                    }
                },
                "description": "Array of urls information."
            },
            "infobip-ccaas-conversation-service.openapi.ViberInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-mms-service.openapi.MessageResult": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "example": "41793026727"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.Status"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "2250be2d4219-3af1-78856-aabe-1362af1edfd2"
                    }
                },
                "description": "Array of sent message objects, one object per every message."
            },
            "infobip-ccaas-conversation-service.openapi.EmailAddresses": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recipientListId": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CameraRollAction": {
                "required": [
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    }
                ]
            },
            "infobip-iot-siman-interchange.openapi.SendSmsResponse": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "The message destination ICCID."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent message."
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-iot-siman-interchange.openapi.Status"
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.UpsertDispositionRequest": {
                "required": [
                    "fields"
                ],
                "type": "object",
                "properties": {
                    "fields": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.DispositionRequest"
                        },
                        "description": "List of fields and agent inputs to those fields."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotTextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotImageContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotVideoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotFileContent",
                        "CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotCarouselContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotLocationContent",
                        "CONTACT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContactContent",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotStickerContent",
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotUrlContent"
                    }
                }
            },
            "infobip-mms-service.openapi.Error": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error.."
                    }
                },
                "description": "Indicates whether the error occurred during the query execution."
            },
            "infobip-ccaas-conversation-service.openapi.TextLineMoContent": {
                "required": [
                    "replyToken",
                    "text",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.status.UpdateStatusRequest": {
                "title": "UpdateStatusRequest",
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.status.BulkStatus"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.StatusCodeResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.web.v1.send.message.WebPushRequest": {
                "title": "WebPushRequest",
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "minLength": 1,
                        "type": "string",
                        "description": "WEB PUSH Application Code you are using to send messages. Application Code is the application identifier which links your web application to the application profile created in Infobip Platform.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Recipient destination address.",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters.",
                        "writeOnly": true
                    },
                    "customPayload": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Additional data that can be delivered with the Web Push message. customPayload must be formatted as JSON object.",
                        "writeOnly": true
                    },
                    "notificationOptions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.web.v1.send.message.WebPushRequestNotificationOptions"
                            }
                        ],
                        "description": "JSON object that contains notification options.",
                        "writeOnly": true
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Supported content types: application/json, application/xml.",
                        "writeOnly": true
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your callback server on which the Delivery report will be sent. Additional Information about Delivery reports on Notify URL.",
                        "writeOnly": true
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Used for scheduled Web Push notifications. Message will be sent at scheduled time.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in hours. When the period expires, it will not be allowed for the message to be sent or message will be canceled if it's pending. Default value 48h. Minimum value is 30 sec. Maximum value is 72h.",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.ValidityPeriodTimeUnit"
                            }
                        ],
                        "description": "Time unit for validity period.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-mms-service.openapi.MMSMoReportResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-mms-service.openapi.MMSMoReport"
                        }
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveBodyContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message body."
                    }
                },
                "description": "Message body."
            },
            "infobipwhatsappstandaloneapiservice.openapi.NameContent": {
                "required": [
                    "firstName",
                    "formattedName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "Contact's first name."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Contact's last name."
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Contact's middle name."
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "Contact's name suffix."
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "Contact's name prefix."
                    },
                    "formattedName": {
                        "type": "string",
                        "description": "Contact's full name as it normally appears."
                    }
                },
                "description": "Contains information about contact's name."
            },
            "infobip-ccaas-conversation-service.openapi.PostbackInstagramMessagingButton": {
                "required": [
                    "postback",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "postback": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobipapimanagementother.openapi.chat.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.chat.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.Tracking": {
                "title": "Tracking",
                "type": "object",
                "properties": {
                    "baseUrl": {
                        "type": "string",
                        "description": "Custom base url used for shortening links from SMS text in `URL` Conversion rate tracking use-case.",
                        "writeOnly": true
                    },
                    "processKey": {
                        "type": "string",
                        "description": "Key that uniquely identifies Conversion tracking process.",
                        "writeOnly": true
                    },
                    "track": {
                        "type": "string",
                        "description": "Indicates if the message has to be tracked for Conversion rates. Possible values: `SMS` and `URL`",
                        "writeOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "User-defined type of the Conversion tracking process or flow type or message type, etc. Example: `ONE_TIME_PIN or SOCIAL_INVITES`.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.reports.v1.IvrData": {
                "title": "IvrData",
                "type": "object",
                "properties": {
                    "collectedDtmfs": {
                        "type": "string",
                        "description": "JSON showing the result of every CollectAction in IVR scenario in the form of key/value pairs, where the key is CollectAction variable and pair is collected DTMF."
                    },
                    "collectedMappedDtmfs": {
                        "type": "string",
                        "description": "JSON showing the result of every CollectAction in IVR scenario with the mapped, meaningful, values you defined in CollectAction `mappedValues` option."
                    },
                    "matchedSpokenInput": {
                        "type": "string",
                        "description": "JSON showing the result of every CaptureSpeech action with only the key phrases that matched user spoken input."
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "ID of IVR scenario."
                    },
                    "scenarioName": {
                        "type": "string",
                        "description": "Name of IVR scenario."
                    },
                    "spokenInput": {
                        "type": "string",
                        "description": "JSON showing the result of every CaptureSpeech action with full text spoken by the user."
                    }
                }
            },
            "infobiprcsapi.openapi.com.infobip.rcs.api.single.RcsSendRequest": {
                "title": "RcsSendRequest",
                "required": [
                    "content",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Message sender",
                        "example": "myRcsSender"
                    },
                    "to": {
                        "type": "string",
                        "description": "Message destination",
                        "example": "385977666618"
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message validity period",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message validity period time unit",
                        "example": "MINUTES"
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.RcsMtContent"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.SmsFailoverRequest"
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your call back server on which the Delivery report will be sent."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "MessageId data that will be included in Delivery Report."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.status.BulkStatus": {
                "title": "BulkStatus",
                "enum": [
                    "PENDING",
                    "PAUSED",
                    "PROCESSING",
                    "CANCELED",
                    "FINISHED",
                    "FAILED"
                ],
                "type": "string"
            },
            "infobippushko.openapi.mms.mo.reports.MoReport": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the received message.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "writeOnly": true
                    },
                    "message": {
                        "type": "string",
                        "description": "All parts of the received message.",
                        "writeOnly": true
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when Infobip platform received the message.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "SMS price.",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through `callbackData` field in fully featured SMS message.",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.VideoMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.VideoContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LineQuickReply": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "maxItems": 13,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineQuickReplyItem"
                        }
                    }
                }
            },
            "peev-webapi.iam.openapi.PersonIdentifierType": {
                "enum": [
                    "PHONE",
                    "EMAIL",
                    "EXTERNAL_ID",
                    "PUSH_REG_ID"
                ],
                "type": "string"
            },
            "infobippushko.openapi.ott.IntegrationType": {
                "type": "object",
                "properties": {
                    "integrationType": {
                        "enum": [
                            "WHATSAPP",
                            "VIBER",
                            "FACEBOOK"
                        ],
                        "type": "string",
                        "description": "Integration type.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-email-validation-amg.openapi.org.infobip.email.validation.amg.request.ValidationRequest": {
                "title": "ValidationRequest",
                "required": [
                    "to"
                ],
                "type": "object",
                "properties": {
                    "to": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Email address of the recipient."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UrlInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.NetworkInformationResponse": {
                "type": "object",
                "properties": {
                    "eventType": {
                        "enum": [
                            "Data Session Opened",
                            "Data Session Updated",
                            "Data Session Closed"
                        ],
                        "type": "string",
                        "description": "Network Event Type",
                        "example": "Data Session Opened"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date and time when event occured.",
                        "example": "2020-01-13T15:30:58"
                    },
                    "mcc": {
                        "type": "string",
                        "description": "Mobile Country Code of Network SIM was connected for this event.",
                        "example": "234"
                    },
                    "mnc": {
                        "type": "string",
                        "description": "Mobile Network Code of Network SIM was connected for this event.",
                        "example": "50"
                    },
                    "connectionType": {
                        "enum": [
                            "3G",
                            "EDGE",
                            "WLAN",
                            "GAN",
                            "HSPA",
                            "LTE",
                            "UNKNOWN",
                            "NB-IoT"
                        ],
                        "type": "string",
                        "description": "Type of connection SIM used for this event.",
                        "example": "NB-IoT"
                    },
                    "imei": {
                        "type": "string",
                        "description": "International Mobile Equipment Identity",
                        "example": "5317888050700230"
                    }
                }
            },
            "infobip-mms-service.openapi.Price": {
                "type": "object",
                "properties": {
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per one MMS."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    }
                },
                "description": "Sent MMS price."
            },
            "infobip-ccaas-conversation-service.openapi.AudioContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.CountBySimsMap": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Map with String key representing status of SIM and Integer value representing number of SIMs owned.",
                "example": {
                    "registered": "10",
                    "active": "15"
                }
            },
            "infobip-ccaas-conversation-service.openapi.Profile": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ListPickerSection": {
                "required": [
                    "items",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPickerItem"
                        }
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "multipleSelection": {
                        "type": "boolean"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.Email": {
                "title": "Email",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of a contact.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of an email",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextWhatsAppMoContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.lang.GetVoicesResponse": {
                "title": "GetVoicesResponse",
                "type": "object",
                "properties": {
                    "voices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice"
                        },
                        "description": "Array of voices belonging to the specified language."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamChannel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DocumentLiveChatInboundContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 3000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotFileMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "fileName": {
                                "type": "string"
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "text": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Name": {
                "required": [
                    "firstName",
                    "formattedName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of a contact. Mandatory value.",
                        "writeOnly": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of a contact.",
                        "writeOnly": true
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Middle name of a contact.",
                        "writeOnly": true
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "Name suffix of a contact. ",
                        "writeOnly": true
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "Name prefix of a contact.",
                        "writeOnly": true
                    },
                    "formattedName": {
                        "type": "string",
                        "description": "Full name as it normally appears. Mandatory value.",
                        "writeOnly": true
                    }
                },
                "description": "Contains information about the name and last of a contact.",
                "writeOnly": true
            },
            "infobip-ccaas-disposition.openapi.FieldResultPage": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Field"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Pagination"
                    }
                },
                "example": {
                    "items": [
                        {
                            "id": "d85b8e46-f579-482f-b383-22648aae17b5",
                            "title": "Type",
                            "type": "DROPDOWN",
                            "isEnabled": true,
                            "isDefault": null,
                            "options": [
                                "inquiry",
                                "complaint"
                            ],
                            "createdAt": "2021-03-30T06:28:10.6760280+00:00",
                            "updatedAt": "2021-03-30T06:28:10.6760290+00:00",
                            "operators": []
                        },
                        {
                            "id": "e130e3f2-c8de-4ba9-a26e-8ac705642832",
                            "title": "Complaints",
                            "type": "TEXT",
                            "isEnabled": true,
                            "isDefault": null,
                            "options": [],
                            "createdAt": "2021-06-29T10:00:55.7556850+00:00",
                            "updatedAt": "2021-06-29T10:00:55.7556860+00:00",
                            "operators": []
                        },
                        {
                            "id": "ba18fdf8-eacf-4b15-8d4e-71515f5b9bcc",
                            "title": "Inquiry",
                            "type": "TEXT",
                            "isEnabled": true,
                            "isDefault": null,
                            "options": [],
                            "createdAt": "2021-06-29T10:00:33.7775640+00:00",
                            "updatedAt": "2021-06-29T10:00:33.7775650+00:00",
                            "operators": []
                        }
                    ],
                    "pagination": {
                        "totalItems": 3,
                        "page": 0,
                        "limit": 10,
                        "orderBy": {
                            "property": "id",
                            "direction": "ASC"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotTextMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.ButtonAction": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "POSTBACK",
                            "URI",
                            "MESSAGE"
                        ],
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "POSTBACK": "#/components/schemas/infobip-omni.openapi.PostbackButtonAction",
                        "URI": "#/components/schemas/infobip-omni.openapi.UriButtonAction",
                        "MESSAGE": "#/components/schemas/infobip-omni.openapi.MessageButtonAction"
                    }
                }
            },
            "infobip-omni.openapi.ComponentStyle": {
                "type": "object",
                "properties": {
                    "header": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BlockComponentStyle"
                    },
                    "hero": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BlockComponentStyle"
                    },
                    "body": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BlockComponentStyle"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BlockComponentStyle"
                    }
                }
            },
            "infobip-push-services-helper.openapi.PushUserPersonalizationRequest": {
                "type": "object",
                "properties": {
                    "identity": {
                        "$ref": "#/components/schemas/infobip-push-services-helper.openapi.PushUserIdentity"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "externalId": {
                                "type": "string",
                                "description": "Id of a user in external system"
                            },
                            "firstName": {
                                "type": "string",
                                "description": "User first name"
                            },
                            "lastName": {
                                "type": "string",
                                "description": "User last name"
                            },
                            "middleName": {
                                "type": "string",
                                "description": "User middle name"
                            },
                            "birthday": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "gender": {
                                "enum": [
                                    "MALE",
                                    "FEMALE"
                                ],
                                "type": "string",
                                "description": "User gender"
                            },
                            "customAttributes": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "description": "Set of custom key-value pairs where value can be any of `string`, `number`, `boolean`"
                                },
                                "description": "Set of custom key-value pairs where value can be any of `string`, `number`, `boolean`"
                            },
                            "tags": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Set of string labels attached to the user"
                                },
                                "description": "Set of string labels attached to the user"
                            },
                            "contactInformation": {
                                "$ref": "#/components/schemas/infobip-push-services-helper.openapi.ContactInformation"
                            }
                        },
                        "description": "Data specified in this object will be applied to the target person upon personalization"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "statisticsResponseExample": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse"
                            }
                        ]
                    }
                }
            },
            "infobipapimanagement.openapi.customer.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.customer.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotTextContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 4000,
                                "minLength": 0,
                                "type": "string",
                                "description": "Message text"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.Verification": {
                "title": "Verification",
                "type": "object",
                "properties": {
                    "msisdn": {
                        "type": "string",
                        "description": "Phone number (MSISDN) for which verification status is checked.",
                        "readOnly": true
                    },
                    "sentAt": {
                        "type": "integer",
                        "description": "Sent UNIX timestamp (in millis), if the phone number (MSISDN) is verified.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Indicates if the phone number (MSISDN) is already verified for 2FA application with given ID.",
                        "readOnly": true
                    },
                    "verifiedAt": {
                        "type": "integer",
                        "description": "Verification UNIX timestamp (in millis), if the phone number (MSISDN) is verified.",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppActionContent": {
                "required": [
                    "buttons"
                ],
                "type": "object",
                "properties": {
                    "buttons": {
                        "maxItems": 3,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveActionButtonWhatsAppContent"
                        }
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.TransactionIdentifier": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "Unique identifier used to track the status of previously initiated HTTP request.",
                        "example": "9a5ef974-58f5-4074-be1e-9c18fdb9501e"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotVideoMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "thumbnailUrl": {
                                "type": "string"
                            },
                            "fileName": {
                                "type": "string"
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "description": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.reports.OMNIReport": {
                "title": "OMNIReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "channel": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.OmniChannel"
                            }
                        ],
                        "description": "Channel that was used for message delivering.",
                        "readOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the message was finished processing by Infobip (ie. delivered to destination, delivered to destination network, etc.).",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "readOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "readOnly": true
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.Price"
                            }
                        ],
                        "description": "Sent message price.",
                        "readOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent. Has the following format: yyyy-MM-dd'T'HH:mm:ss.SSSZ.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.accounts.Account": {
                "title": "Account",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Current status of account. If it's not enabled users will not be able to access any resources on API or web."
                    },
                    "key": {
                        "type": "string",
                        "description": "Unique key (identifier) for account"
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name"
                    },
                    "ownerKey": {
                        "type": "string",
                        "description": "Identifier of the owner account. If current account is root this property will not be set."
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.MoResponse.Companion": {
                "title": "Companion",
                "type": "object"
            },
            "infobip-ccaas-conversation-service.openapi.TimePickerContent": {
                "required": [
                    "event",
                    "receivedMessage",
                    "replyMessage"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "images": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image"
                                }
                            },
                            "event": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Event"
                            },
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "receivedMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "replyMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "APPLE_TYPING_INDICATOR_CONTENT",
                                    "APPLE_LIST_PICKER_CONTENT",
                                    "APPLE_TIME_PICKER_CONTENT",
                                    "APPLE_AUTH_REQUEST_CONTENT",
                                    "APPLE_RICH_LINK_CONTENT",
                                    "APPLE_PAY_REQUEST_CONTENT",
                                    "APPLE_CUSTOM_INTERACTIVE_CONTENT",
                                    "APPLE_QUICK_REPLY_CONTENT"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveListMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobipamgnumbersapi.openapi.SmppForwardAction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CommentFacebookPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "imageUrl": {
                                "type": "string"
                            },
                            "videoUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveTextHeaderWhatsAppContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "DOCUMENT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-recording-amg.openapi.DeleteResponseModel": {
                "type": "object",
                "properties": {
                    "deletedRecordingId": {
                        "type": "string",
                        "description": "Deleted Recording id."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FormElementValue": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.BulkMessage": {
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.FailoverMessage"
                        },
                        "description": "Array of messages that will be sent."
                    },
                    "bulkId": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address."
                    }
                }
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.auth.CreateSessionRequest": {
                "title": "CreateSessionRequest",
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Secret password."
                    },
                    "username": {
                        "type": "string",
                        "description": "Unique username of the existing user who is performing login."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.multi.MultiMessage": {
                "title": "MultiMessage",
                "required": [
                    "to"
                ],
                "type": "object",
                "properties": {
                    "audioFileUrl": {
                        "type": "string",
                        "description": "Besides the text format of the message, audio recording (format like: aac, aiff, m4a, mp2, mp3, ogg, wav, wma) can also be delivered as a voice message to the recipient. Audio file must be uploaded online so the existing URL can be available for the file download. Size of the audio file must be below 4 MB."
                    },
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID in E.164 standard format (Example: 41793026727). This is caller ID that will be presented to the end user where applicable."
                    },
                    "language": {
                        "type": "string",
                        "description": "If the message is in text format, the language in which the message is written must be defined for correct pronunciation. More about Text-to-speech functionality and supported TTS languages can be found [here](https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast). If not set, default language is `English [en]`. If voice is not set, then default voice for that specific language is used. In the case of English language, the voice is `[Joanna]`.",
                        "externalDocs": {
                            "description": "Voice Text-To-Speech Languages",
                            "url": "https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast"
                        }
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent. Message text can be up to 1400 characters long."
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Phone number of the recipient. Phone number must be written in E.164 standard format (Example: 41793026727)."
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice"
                            }
                        ],
                        "description": "Used to define voice in which text would be synthesized. It has two parameters: _name_ and _gender_. When only _name_ is provided, then that exact voice with that name will be used to synthesize text. If only _gender_ is provided, then text is synthesized with first voice in given gender. If voice is not set, then default voice is used."
                    }
                }
            },
            "infobip-mms-service.openapi.Status": {
                "required": [
                    "description",
                    "groupId",
                    "groupName",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "example": 1
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "example": "PENDING"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "example": 26
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "example": "PENDING_ACCEPTED"
                    },
                    "description": {
                        "type": "string",
                        "description": "Status description.",
                        "example": "Message accepted, pending for delivery."
                    }
                },
                "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
            },
            "infobip-iot-siman-interchange.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "text": {
                        "type": "string",
                        "description": "Error description",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobip-portal-audit-logs.openapi.Item": {
                "enum": [
                    "TFA",
                    "Account",
                    "ApiKey",
                    "AutomaticPayment",
                    "BillingAddress",
                    "Blacklist",
                    "Campaign",
                    "Communication",
                    "Company",
                    "CustomField",
                    "Domain",
                    "ExportConfiguration",
                    "Forms",
                    "Keyword",
                    "MobileApplication",
                    "MobileDemoApplication",
                    "Number",
                    "OneTimePayment",
                    "Password",
                    "Person",
                    "Price",
                    "Report",
                    "Segment",
                    "Search",
                    "Tag",
                    "Team",
                    "Template",
                    "URL",
                    "User",
                    "Website"
                ],
                "type": "string"
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.status.BulkStatusResponse": {
                "title": "BulkStatusResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.status.BulkStatus"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LeaveEventLineMoContent": {
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    }
                ]
            },
            "infobip-omni.openapi.TextComponent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "flex": {
                                "maximum": 10,
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL"
                                ],
                                "type": "string"
                            },
                            "align": {
                                "enum": [
                                    "START",
                                    "END",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "gravity": {
                                "enum": [
                                    "TOP",
                                    "BOTTOM",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "wrap": {
                                "type": "boolean"
                            },
                            "maxLines": {
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "color": {
                                "type": "string"
                            },
                            "weight": {
                                "enum": [
                                    "BOLD",
                                    "REGULAR"
                                ],
                                "type": "string"
                            },
                            "action": {
                                "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BaselineComponent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterTweetMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "COMMENT",
                            "POST",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextTwitterTweetMoContent",
                        "COMMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommentOnTwitterTweetMoContent",
                        "POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostTwitterTweetMoContent",
                        "UNKNOWN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnknownTwitterTweetMoContent"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.AudioMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.AudioContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageCarouselLineTemplatePayload": {
                "required": [
                    "columns"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "columns": {
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageCarouselColumn"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FieldCondition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the Condition."
                    },
                    "value": {
                        "type": "string",
                        "description": "Condition value."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.ConditionalField"
                        },
                        "description": "List of fields to present if agent input matches condition value."
                    }
                },
                "description": "List of conditions"
            },
            "infobip-email-api-amg.openapi.BulkRescheduleRequest": {
                "required": [
                    "sendAt"
                ],
                "type": "object",
                "properties": {
                    "sendAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CommentFacebookContent": {
                "required": [
                    "content"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "FACEBOOK_SENDER_ACTION",
                                    "FACEBOOK_TEMPLATE",
                                    "COMMENT",
                                    "POST"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.DropdownInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElementWithOptions"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "fieldId": {
                                "type": "string",
                                "description": "Field identifier. It must be unique within the form."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            },
                            "personField": {
                                "type": "string",
                                "description": "Connect field to person attribute"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string",
                                "description": "Data type for person attribute"
                            },
                            "personFieldSubItemName": {
                                "type": "string",
                                "description": "Connect field to person attribute sub item name"
                            },
                            "isRequired": {
                                "type": "boolean",
                                "description": "Required field has to be filled with input or end users will not be able to submit the form."
                            },
                            "isHidden": {
                                "type": "boolean",
                                "description": "Hidden field is not visible to end users. The value can be filled by using an API submission. Use for profile attribution."
                            },
                            "staticValue": {
                                "type": "string",
                                "description": "This value is filled on every submit."
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "description": "Date of last element modification, null for old and unmodified data",
                                "format": "date-time"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-forms.openapi.FormElementOption"
                                },
                                "description": "List of options for multiple select."
                            },
                            "placeholder": {
                                "type": "string",
                                "description": "Input placeholder."
                            },
                            "isMultipleSelect": {
                                "type": "boolean",
                                "description": "Does this field allow to input multiple values?"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Suggestion": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "REPLY",
                            "OPEN_URL",
                            "DIAL_PHONE",
                            "LIVE_AGENT_REQUEST"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplySuggestion",
                        "OPEN_URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OpenUrlSuggestion",
                        "DIAL_PHONE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DialPhoneSuggestion",
                        "LIVE_AGENT_REQUEST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveAgentSuggestion"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice": {
                "title": "Voice",
                "type": "object",
                "properties": {
                    "gender": {
                        "type": "string",
                        "description": "Gender of the voice. Can be `male` or `female`."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the voice. Example: `Joanna`"
                    }
                }
            },
            "infobip-email-api-amg.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DocumentWhatsAppContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 3000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "filename": {
                                "maxLength": 240,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipamgnumbersapi.openapi.EditPermissions": {
                "type": "object",
                "properties": {
                    "canEditNumber": {
                        "type": "boolean"
                    },
                    "canEditConfiguration": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.GoogleInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleConversation"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleAgent"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.sms.mo.reports.SMSReportResponse": {
                "title": "SMSReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.sms.mo.reports.MoReport"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.MessageCount"
                    }
                ],
                "description": "The array of objects for your sent messages."
            },
            "infobip-ccaas-conversation-service.openapi.EmailOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "gatewayData",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailContent"
                            },
                            "gatewayData": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailOutboundGatewayData"
                            }
                        }
                    }
                ]
            },
            "infobip-email-api-amg.openapi.BulkUpdateStatusResponse": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.BulkStatus"
                    }
                }
            },
            "infobip-webrtc-amg.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "text": {
                        "type": "string",
                        "description": "Error description",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.Type": {
                "title": "Type",
                "enum": [
                    "TEXT",
                    "IMAGE",
                    "DOCUMENT",
                    "LOCATION",
                    "CONTACT",
                    "VIDEO",
                    "VOICE",
                    "AUDIO",
                    "BUTTON",
                    "INTERACTIVE_BUTTON_REPLY",
                    "INTERACTIVE_LIST_REPLY",
                    "UNSUPPORTED"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.Rule": {
                "required": [
                    "expression",
                    "queueId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Rule ID.",
                        "readOnly": true
                    },
                    "priority": {
                        "enum": [
                            "URGENT",
                            "HIGH",
                            "NORMAL",
                            "LOW"
                        ],
                        "type": "string",
                        "description": "The priority of the new message. If not provided will be set to default.",
                        "default": "NORMAL"
                    },
                    "expression": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Query for logical validation of new messages, 4000 characters max. See [Routing](https://www.infobip.com/docs/conversations/queues-and-routing) for more info."
                        },
                        "description": "Query for logical validation of new messages, 4000 characters max. See [Routing](https://www.infobip.com/docs/conversations/queues-and-routing) for more info."
                    },
                    "queueId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Queue ID is a destination queue where the new message will be assigned to."
                    },
                    "queueName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Queue name.",
                        "readOnly": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled is a boolean value (TRUE, FALSE), so the rule is engaged or avoided in the routing process. If not provided will be set to default.",
                        "default": true
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Rule name, light description of expression logic."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time stamp when rule is created.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time stamp when rule is last updated.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "description": "Position in order of executing this rule for logical validation new message.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "routeOnlyDuringWorkingHours": {
                        "type": "boolean"
                    }
                },
                "example": [
                    {
                        "name": "English Support",
                        "queueId": "8772F93BC855D00A1036B771ACA7EC40",
                        "priority": "NORMAL",
                        "enabled": true,
                        "expression": {
                            "$or": [
                                {
                                    "$eq": {
                                        "customer.country": "United Kingdom"
                                    }
                                },
                                {
                                    "$eq": {
                                        "customer.country": "Australia"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Spanish Support",
                        "queueId": "A1C93E138A8D831F49D047BC0A5B1D0D",
                        "priority": "NORMAL",
                        "enabled": true,
                        "expression": {
                            "$in": {
                                "customer.country": [
                                    "Spain",
                                    "Columbia",
                                    "Mexico"
                                ]
                            }
                        }
                    },
                    {
                        "name": "Croatian Support",
                        "queueId": "04FAFF86C252478D324CF3F980799C9E",
                        "priority": "NORMAL",
                        "enabled": true,
                        "expression": {
                            "$and": [
                                {
                                    "$starts_with": {
                                        "message.customerNumber": "385"
                                    }
                                },
                                {
                                    "$neq": {
                                        "message.channel": "FACEBOOK_MESSENGER"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Keyword STOP",
                        "queueId": "1E54701F74BD86A070B43DB49478D82C",
                        "priority": "NORMAL",
                        "enabled": true,
                        "expression": {
                            "$starts_with": {
                                "message.content": "STOP"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionType": {
                "title": "ActionType",
                "enum": [
                    "HTTP_FORWARD",
                    "PULL"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.FileRcsContent": {
                "required": [
                    "file"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "file": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Resource"
                            },
                            "thumbnail": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Resource"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.customer.financeservice.account.balance.lib.model.BalanceInfoResponse": {
                "title": "BalanceInfoResponse",
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "number",
                        "format": "double"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.customer.financeservice.account.balance.lib.model.CurrencyInfo"
                            }
                        ]
                    },
                    "freeMessages": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "infobiprcsapi.openapi.FileRcsMtContent": {
                "required": [
                    "file"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.RcsMtContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "file": {
                                "$ref": "#/components/schemas/infobiprcsapi.openapi.Resource"
                            },
                            "thumbnail": {
                                "$ref": "#/components/schemas/infobiprcsapi.openapi.Resource"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VkOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterTweetOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "replyToCommentId",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "replyToCommentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.email.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.email.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PostFacebookPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "imageUrls": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "videoUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.WhatsAppOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotDeliveredMoContent": {
                "required": [
                    "messageToken",
                    "timestamp",
                    "type",
                    "userId"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TemplateWhatsAppContent": {
                "required": [
                    "elementName",
                    "language",
                    "localizableParameters"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "elementName": {
                                "maxLength": 512,
                                "minLength": 0,
                                "type": "string"
                            },
                            "language": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Language"
                            },
                            "localizableParameters": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.CarouselRcsMtContent": {
                "required": [
                    "cardWidth",
                    "contents"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.RcsMtContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cardWidth": {
                                "enum": [
                                    "SMALL",
                                    "MEDIUM"
                                ],
                                "type": "string",
                                "description": "Width of cards contained within the carousel",
                                "example": "MEDIUM"
                            },
                            "contents": {
                                "maxItems": 10,
                                "minItems": 2,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobiprcsapi.openapi.CardContent"
                                },
                                "description": "An array of cards contained within the carousel"
                            },
                            "suggestions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                                },
                                "description": "List of suggestions"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FormRequest": {
                "required": [
                    "fields",
                    "isEnabled",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Form title."
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Is form enabled. Mandatory when updating."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Is form default."
                    },
                    "fields": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.FormFieldRequest"
                        },
                        "description": "Fields attached to a form."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationCoordinatesInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.BaselineBoxComponent": {
                "required": [
                    "contents",
                    "layout"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BoxComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contents": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-omni.openapi.BaselineComponent"
                                }
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.infobip.api.models.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "groupName": {
                        "type": "string",
                        "description": "Group name for the status.",
                        "writeOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "writeOnly": true
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to fix the error.",
                        "writeOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccca.openapi.WaitingStrategyCliPage": {
                "type": "object",
                "properties": {
                    "waitingStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccca.openapi.WaitingStrategyCli"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.ApplicationResponse": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Application identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Application description containing up to 160 characters."
                    },
                    "ios": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.IosPushNotificationConfig"
                    },
                    "android": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.AndroidPushNotificationConfig"
                    },
                    "appToApp": {
                        "type": "boolean",
                        "description": "Enable to communicate app to app."
                    },
                    "appToConversations": {
                        "type": "boolean",
                        "description": "Enable to forward incoming calls to an agent on Conversations platform."
                    },
                    "appToPhone": {
                        "type": "boolean",
                        "description": "Enable to forward incoming calls to a phone number."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ReferralInstagramMoContent": {
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ProductInstagramMoContent"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.VoiceCallsPrice": {
                "type": "object",
                "properties": {
                    "pricePerSecond": {
                        "type": "number",
                        "description": "Price per one second of the voice message."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    }
                },
                "description": "Sent voice call price."
            },
            "infobipapimanagement.openapi.voip.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "VIBER_TEXT_WITH_BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextWithButtonViberContent",
                        "VIBER_TEXT_WITH_IMAGE_AND_BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextWithImageAndButtonViberContent",
                        "VIBER_TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateViberContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileViberContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.QuickReplySelectedItem": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamPersonV2": {
                "title": "IamPersonV2",
                "required": [
                    "contactInformation"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Person's address, 256 characters max"
                    },
                    "birthDate": {
                        "type": "string",
                        "description": "Person's date of birth, format `YYYY-MM-DD`"
                    },
                    "city": {
                        "type": "string",
                        "description": "Person's city, 50 characters max"
                    },
                    "contactInformation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.contactInformation.IamContactV2"
                            }
                        ],
                        "description": "List of phones, emails and other information how a person can be contacted"
                    },
                    "country": {
                        "type": "string",
                        "description": "Person's country, 50 characters max"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date and time of creation",
                        "readOnly": true
                    },
                    "customAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "List of custom attributes for the person"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "Unique ID for a person from your or another external system, 256 characters max"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Person's first name, 255 characters max"
                    },
                    "gender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.IamGender"
                            }
                        ],
                        "description": "Person's gender"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the entity",
                        "format": "int64",
                        "readOnly": true
                    },
                    "integrations": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamIntegrationsV2"
                            }
                        ],
                        "description": "Integrations"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Person's last name, 255 characters max"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Person's middle name, 50 characters max"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "Date and time of last modification",
                        "readOnly": true
                    },
                    "modifiedFrom": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.IamOrigin"
                            }
                        ],
                        "description": "The information which describes the source of the last modification of record",
                        "readOnly": true
                    },
                    "origin": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.IamOrigin"
                            }
                        ],
                        "description": "The information which describes the origin of the record",
                        "readOnly": true
                    },
                    "profilePicture": {
                        "type": "string",
                        "description": "URL for the person's profile picture, 2083 characters max"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags that this person has"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamTypeV2"
                            }
                        ],
                        "description": "Person's type, default type is CUSTOMER"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.SmvVerifyResponseDto": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.ErrorDto"
                    },
                    "status": {
                        "enum": [
                            "OK",
                            "REDIRECT",
                            "ERROR"
                        ],
                        "type": "string",
                        "description": "Silent Mobile Verification request status"
                    },
                    "token": {
                        "type": "string",
                        "description": "Unique request ID",
                        "format": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    "deviceRedirectUrl": {
                        "type": "string",
                        "description": "An URL to perform mobile device redirect to if specified so by 'status'",
                        "example": "https://mno.com/smv-check-endpoint"
                    }
                },
                "description": "Silent Mobile Verification response object"
            },
            "infobip-ccaas-conversation-service.openapi.VideoTwitterDmMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Contact": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Address"
                        },
                        "description": "Address information.",
                        "writeOnly": true
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Birthday information, YYYY-MM-DD formatted string.",
                        "writeOnly": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Email"
                        },
                        "description": "Email information.",
                        "writeOnly": true
                    },
                    "name": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.Name"
                    },
                    "org": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.Organization"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Phone"
                        },
                        "description": "Phone information.",
                        "writeOnly": true
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Url"
                        },
                        "description": "Url information.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FileLineMoContent": {
                "required": [
                    "fileName",
                    "fileSize",
                    "moAttachment",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "moAttachment": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoAttachment"
                            },
                            "fileName": {
                                "type": "string"
                            },
                            "fileSize": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-mms-service.openapi.externallyHostedMedia": {
                "required": [
                    "contentId",
                    "contentType",
                    "contentUrl"
                ],
                "type": "object",
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "Content type for media, for example 'image/png'."
                    },
                    "contentId": {
                        "type": "string",
                        "description": "Unique identifier for the content part."
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "URL for externally hosted content."
                    }
                },
                "description": "Optional part containing information for externally hosted media (image, video).",
                "format": "json array"
            },
            "infobiprcsapi.openapi.SingleMessageStatus": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "example": 1
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "example": "PENDING"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "example": 7
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "example": "PENDING_ENROUTE"
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "example": "Message sent to next instance"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.logs.SMSLog": {
                "title": "SMSLog",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the SMS was finished processing by Infobip (i.e. delivered to the destination, delivered to the destination network, etc.). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Error"
                            }
                        ]
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "readOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Price"
                            }
                        ]
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the SMS was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ]
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that was sent.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AuthRequestContent": {
                "required": [
                    "receivedMessage",
                    "replyMessage"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "images": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image"
                                }
                            },
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "receivedMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "replyMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Retry": {
                "title": "Retry",
                "required": [
                    "maxCount",
                    "maxPeriod",
                    "minPeriod"
                ],
                "type": "object",
                "properties": {
                    "maxCount": {
                        "maximum": 32767,
                        "minimum": -32768,
                        "type": "integer",
                        "description": "Specify the maximum number of retry attempts. Maximum value of the maxCount is `4`. If the value is higher than `4`, it will be set to `4`.",
                        "format": "int32"
                    },
                    "maxPeriod": {
                        "type": "integer",
                        "description": "Defines the maximum waiting time (in minutes) after the previous failed attempt to try to deliver the message again.",
                        "format": "int32"
                    },
                    "minPeriod": {
                        "type": "integer",
                        "description": "Defines the minimal waiting time (in minutes) after the previous failed attempt to try to deliver the message again.",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateDynamicUrlButtonContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateButtonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameters": {
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.KakaoChinguBotKeywordButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguButton"
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.ApiKeysResponse": {
                "title": "ApiKeysResponse",
                "type": "object",
                "properties": {
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.ApiKey"
                        },
                        "description": "List of API keys."
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.Pagination": {
                "type": "object",
                "properties": {
                    "totalItems": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderBy": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.OrderBy"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.tags.model.BatchTagEntry": {
                "title": "BatchTagEntry",
                "type": "object",
                "properties": {
                    "query": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Query for single person. Example: \"email\": \"janesmith@acme.com\""
                    }
                }
            },
            "infobipamgnumbersapi.openapi.MoAction": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PULL",
                            "HTTP_FORWARD",
                            "SMPP_FORWARD",
                            "MAIL_FORWARD",
                            "NO_ACTION",
                            "BLOCK",
                            "AUTORESPONSE",
                            "USSD",
                            "SEND_BULK_MT",
                            "EMAIL_TO_SMS_FORWARD",
                            "CNS_FWD",
                            "USE_CONVERSATIONS",
                            "FORWARD_TO_PSTN",
                            "FORWARD_TO_IP",
                            "FORWARD_TO_SOFT_PHONE",
                            "FORWARD_TO_IVR",
                            "VOICE_NUMBER_MASKING",
                            "VOICE_CALL_DROP",
                            "FORWARD_TO_WEBRTC",
                            "VOICE_FORWARD_TO_CONVERSATIONS",
                            "VOICE_FORWARD_TO_CONVERSATIONS_WITH_FLOW",
                            "CALL_FORWARD_TO_APPLICATION",
                            "OTHER"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "HTTP_FORWARD": "#/components/schemas/infobipamgnumbersapi.openapi.HttpForwardAction",
                        "MAIL_FORWARD": "#/components/schemas/infobipamgnumbersapi.openapi.MailForwardAction",
                        "SMPP_FORWARD": "#/components/schemas/infobipamgnumbersapi.openapi.SmppForwardAction",
                        "PULL": "#/components/schemas/infobipamgnumbersapi.openapi.PullAction",
                        "NO_ACTION": "#/components/schemas/infobipamgnumbersapi.openapi.NoAction"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotStickerContent": {
                "required": [
                    "stickerId"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "stickerId": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.reports.SMSReportResponse": {
                "title": "SMSReportResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.reports.SMSReport"
                        }
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.StickerMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.StickerContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.bulks.BulkResponse": {
                "title": "BulkResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Unique ID of the bulk."
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Timestamp when bulk is scheduled.",
                        "format": "date-time"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ivr.v1.model.RecordedAudioFilesResponse": {
                "title": "RecordedAudioFilesResponse",
                "type": "object",
                "properties": {
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.ivr.v1.model.RecordedIvrFile"
                        },
                        "description": "Array of recorded files metadata, one for each recorded file."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.query.NumberContextResponse": {
                "title": "NumberContextResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.query.NumberContextResponseDetails"
                        },
                        "description": "Collection of lookup results.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.voip.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleCustomInteractiveContent": {
                "required": [
                    "receivedMessage",
                    "replyMessage"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "receivedMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "replyMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTimeWindow": {
                "title": "DeliveryTimeWindow",
                "required": [
                    "days"
                ],
                "type": "object",
                "properties": {
                    "days": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryDay"
                        },
                        "description": "Days which are included in the delivery time window. Values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`. At least one day must be stated.",
                        "writeOnly": true
                    },
                    "from": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTime"
                            }
                        ],
                        "description": "Exact time of day in which the sending can start. Consists of hour and minute properties, both mandatory. Time is expressed in the UTC time zone.",
                        "writeOnly": true
                    },
                    "to": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTime"
                            }
                        ],
                        "description": "Exact time of day in which the sending will end. Consists of an hour and minute properties, both mandatory. Time is expressed in the UTC time zone.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "APPLE_TYPING_INDICATOR_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TypingIndicatorContent",
                        "APPLE_LIST_PICKER_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPickerContent",
                        "APPLE_TIME_PICKER_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TimePickerContent",
                        "APPLE_AUTH_REQUEST_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AuthRequestContent",
                        "APPLE_RICH_LINK_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RichLinkContent",
                        "APPLE_PAY_REQUEST_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ApplePayRequestContent",
                        "APPLE_CUSTOM_INTERACTIVE_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleCustomInteractiveContent",
                        "APPLE_QUICK_REPLY_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleQuickReplyContent"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveListHeaderContent": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Message header.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListTextHeaderContent"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.SetupBody": {
                "required": [
                    "callbackUrl",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique configuration name. Alphanumeric, max length 100."
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "Client's URL that will be called on each inbound call to related Number masking Voice number in order to get instructions of how to handle incoming calls. Instructions are a result of mapping logic implemented on your side according to your business case."
                    },
                    "statusUrl": {
                        "type": "string",
                        "description": "Client's URL for status report delivery after the call is finished."
                    },
                    "backupCallbackUrl": {
                        "type": "string",
                        "description": "If callbackUrl is unavailable this one will be called instead."
                    },
                    "backupStatusUrl": {
                        "type": "string",
                        "description": "If statusUrl is unavailable this one will be called instead."
                    },
                    "description": {
                        "type": "string",
                        "description": "Masking configuration description"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButton": {
                "required": [
                    "action"
                ],
                "type": "object",
                "properties": {
                    "columns": {
                        "maximum": 6,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonAction"
                    },
                    "text": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonText"
                    },
                    "background": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonBackground"
                    },
                    "media": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonMedia"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.VoiceCallsError": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error."
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent."
                    }
                },
                "description": "Indicates whether the error occurred during the query execution."
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamPushContact": {
                "title": "IamPushContact",
                "type": "object",
                "properties": {
                    "additionalData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Additional data collected from the user's profile",
                        "readOnly": true
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "registrationId": {
                        "type": "string",
                        "description": "Push registration ID",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobiprcsapi.openapi.Resource": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of the given resource",
                        "example": "https://www.infobip.com/infobip-logo.png"
                    }
                },
                "description": "Resource object describing the thumbnail of the card"
            },
            "infobip-ccaas-conversation-service.openapi.ListPickerContent": {
                "required": [
                    "listPicker",
                    "receivedMessage",
                    "replyMessage"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "images": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image"
                                }
                            },
                            "listPicker": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPicker"
                            },
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "receivedMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "replyMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "APPLE_TYPING_INDICATOR_CONTENT",
                                    "APPLE_LIST_PICKER_CONTENT",
                                    "APPLE_TIME_PICKER_CONTENT",
                                    "APPLE_AUTH_REQUEST_CONTENT",
                                    "APPLE_RICH_LINK_CONTENT",
                                    "APPLE_PAY_REQUEST_CONTENT",
                                    "APPLE_CUSTOM_INTERACTIVE_CONTENT",
                                    "APPLE_QUICK_REPLY_CONTENT"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Style": {
                "type": "object",
                "properties": {
                    "header": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BlockStyle"
                    },
                    "hero": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BlockStyle"
                    },
                    "body": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BlockStyle"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BlockStyle"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.StartCallInboundCallsContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundContent"
                    }
                ]
            },
            "infobip-recording-amg.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-recording-amg.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.reports.dlr.Report": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.reports.dlr.Report"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "channel": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.WhatsappChannel"
                                    }
                                ],
                                "description": "Channel that was used for message delivering.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.com.infobip.rcs.api.bulk.RcsBulkSendRequest": {
                "title": "RcsBulkSendRequest",
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobiprcsapi.openapi.com.infobip.rcs.api.single.RcsSendRequest"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InfectedWhatsAppMoContent": {
                "required": [
                    "context"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "malware": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Description": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInfoElement"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.multi.MultiBody": {
                "title": "MultiBody",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.multi.MultiMessage"
                        },
                        "description": "Array of messages to be sent, one per every message"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ThingsEventLineMoContent": {
                "required": [
                    "deviceId",
                    "replyToken",
                    "timestamp",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "deviceId": {
                                "type": "string"
                            },
                            "scenarioId": {
                                "type": "string"
                            },
                            "revision": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "startTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "endTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "resultCode": {
                                "type": "string"
                            },
                            "actionResults": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ActionResult"
                                }
                            },
                            "bleNotificationPayload": {
                                "type": "string"
                            },
                            "errorReason": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AccountLinkEventLineMoContent": {
                "required": [
                    "nonce",
                    "replyToken",
                    "result",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "result": {
                                "type": "string"
                            },
                            "nonce": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Attachment": {
                "required": [
                    "fileId",
                    "fileName",
                    "size"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "fileId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "cfUrl": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UriImagemapAction": {
                "required": [
                    "area",
                    "linkUri"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImagemapAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "linkUri": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipmiyuloregatewayservice.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mo.reports.MOReportResponse": {
                "title": "MOReportResponse",
                "type": "object",
                "properties": {
                    "messageCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pendingMessageCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mo.reports.MOReport"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageWithCaptionContent",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoWithCaptionContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.SubmitButton": {
                "required": [
                    "component",
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.SimSwapCheckNetworkInfoDto": {
                "type": "object",
                "properties": {
                    "simSwapTimestamp": {
                        "type": "string",
                        "description": "Timestamp when the sim swap occurred in the format conforming to RFC 3339",
                        "format": "date-time",
                        "nullable": true,
                        "example": {
                            "offset": {
                                "totalSeconds": 0,
                                "id": "Z",
                                "rules": {
                                    "fixedOffset": true,
                                    "transitions": [],
                                    "transitionRules": []
                                }
                            },
                            "nano": 0,
                            "year": 2020,
                            "monthValue": 4,
                            "dayOfMonth": 15,
                            "hour": 20,
                            "minute": 0,
                            "second": 0,
                            "month": "APRIL",
                            "dayOfWeek": "WEDNESDAY",
                            "dayOfYear": 106
                        }
                    },
                    "simSwapPeriodStartHours": {
                        "type": "integer",
                        "description": "Start of the period when the sim swap occurred",
                        "format": "int32",
                        "nullable": true,
                        "example": 0
                    },
                    "simSwapPeriodEndHours": {
                        "type": "integer",
                        "description": "End of the period when the sim swap occurred",
                        "format": "int32",
                        "nullable": true,
                        "example": 24
                    }
                },
                "description": "Contains additional sim swap info if available"
            },
            "infobip-ccaas-conversation-service.openapi.ForceReply": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyMarkup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "selective": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.web.v1.send.message.WebPushRequestNotificationOptions": {
                "title": "WebPushRequestNotificationOptions",
                "type": "object",
                "properties": {
                    "actionButtonTitle": {
                        "type": "string",
                        "description": "The label of the action button for Safari notifications. The default value is “Show”."
                    },
                    "destinationUrl": {
                        "type": "string",
                        "description": "Defines the url to open in browser when notification is clicked. Optional."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL of the image displayed in the notification. Optional."
                    },
                    "title": {
                        "type": "string",
                        "description": "Notification title displayed within notification. Optional."
                    }
                }
            },
            "infobip-push-services-helper.openapi.PushUserIdentity": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Id of a user in external system. **Notice**: for `externalId` any string values such as `\"null\"`, `\"Null\"` or `\"NULL\"` are not supported and would be considered as JSON `null`"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "User phone number according to E.164 general format"
                    }
                },
                "description": "Unique identifiers from this object will be used to find a person to personalize push registration with"
            },
            "infobip-ccaas-conversation-service.openapi.WorkingHoursResultPage": {
                "type": "object",
                "properties": {
                    "workingHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WorkingHours"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.HourlyUsageForSimResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page"
                    },
                    "iccid": {
                        "type": "string",
                        "description": "Unique ICCID identifier"
                    },
                    "hourlyUsage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.SimUsageResponse"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingStickerContent": {
                "required": [
                    "sticker"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sticker": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.ModelType": {
                "type": "string",
                "description": "Model type possible values: <br> Standard <br> Embedded <br> SoftSIM\n",
                "example": "Standard"
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoVideoContent": {
                "required": [
                    "sentAt",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingButton": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "URL",
                            "POSTBACK"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UrlInstagramMessagingButton",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackInstagramMessagingButton"
                    }
                }
            },
            "infobip-recording-amg.openapi.BulkDownloadRequestModel": {
                "required": [
                    "ids"
                ],
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of recording ids."
                        },
                        "description": "List of recording ids."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Representative": {
                "required": [
                    "representativeType"
                ],
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "avatarImage": {
                        "type": "string"
                    },
                    "representativeType": {
                        "enum": [
                            "BOT",
                            "HUMAN"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.reports.v1.VoiceReportsResponse": {
                "title": "VoiceReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.reports.v1.VoiceReport"
                        },
                        "description": "Arrays of delivery reports, one object for every message."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationUrlFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Parameter": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ButtonsLineTemplatePayload": {
                "required": [
                    "actions",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "thumbnailImageUrl": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "imageAspectRatio": {
                                "enum": [
                                    "RECTANGLE",
                                    "SQUARE"
                                ],
                                "type": "string"
                            },
                            "imageSize": {
                                "enum": [
                                    "COVER",
                                    "CONTAIN"
                                ],
                                "type": "string"
                            },
                            "imageBackgroundColor": {
                                "type": "string"
                            },
                            "title": {
                                "maxLength": 40,
                                "minLength": 0,
                                "type": "string"
                            },
                            "text": {
                                "maxLength": 160,
                                "minLength": 0,
                                "type": "string"
                            },
                            "defaultAction": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                            },
                            "actions": {
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                                }
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.CardContent": {
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Title of the card, displayed as bolded text",
                        "example": "Card title"
                    },
                    "description": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the card, displayed as regular text",
                        "example": "Some supercool, attention-grabbing description"
                    },
                    "media": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.CardMedia"
                    },
                    "suggestions": {
                        "maxItems": 4,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                        },
                        "description": "List of suggestions that will be sent in card"
                    }
                },
                "description": "An array of cards contained within the carousel"
            },
            "infobiprcsapi.openapi.RcsMtContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "FILE",
                            "CARD",
                            "CAROUSEL"
                        ],
                        "type": "string",
                        "description": "Message type, describing type of message which is going to be sent over RCS"
                    }
                },
                "description": "Rcs message contents",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobiprcsapi.openapi.TextRcsMtContent",
                        "FILE": "#/components/schemas/infobiprcsapi.openapi.FileRcsMtContent",
                        "CARD": "#/components/schemas/infobiprcsapi.openapi.CardRcsMtContent",
                        "CAROUSEL": "#/components/schemas/infobiprcsapi.openapi.CarouselRcsMtContent"
                    }
                }
            },
            "peev-webapi.iam.openapi.EventResourceRequest": {
                "type": "object",
                "properties": {
                    "Properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "nullable": true
                    }
                }
            },
            "infobip-ccca.openapi.FileAudioSource": {
                "type": "object",
                "properties": {
                    "fileDescriptor": {
                        "type": "string",
                        "description": "File audio source descriptor."
                    },
                    "fileUrl": {
                        "type": "string",
                        "description": "File audio source URL."
                    }
                },
                "description": "File audio source information."
            },
            "infobip-forms.openapi.FormStaticElement": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "textContent": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.PreviewResponse": {
                "title": "PreviewResponse",
                "type": "object",
                "properties": {
                    "originalText": {
                        "type": "string",
                        "description": "Text supplied in the request.",
                        "readOnly": true
                    },
                    "previews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.Preview"
                        },
                        "description": "Previews of applying different configurations to the original text.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.SuggestionRcsMoContent": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "postbackData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-mms-service.openapi.MmsRequest": {
                "type": "object",
                "properties": {
                    "head": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.head"
                    },
                    "text": {
                        "minimum": 0,
                        "type": "string",
                        "description": "Optional part sent with content type as text/plain containing textual message data. Can be sent with different charsets.",
                        "format": "text"
                    },
                    "media": {
                        "minimum": 0,
                        "type": "string",
                        "description": "Optional part sent with content type for media containing media(image, video) message data.",
                        "format": "binary,byte"
                    },
                    "externallyHostedMedia": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.externallyHostedMedia"
                    },
                    "smil": {
                        "type": "string",
                        "description": "Optional part sent with content type application/smil containing SMIL - synchronized multimedia integration language file. Used for parts ordering in MMS.",
                        "format": "xml"
                    }
                },
                "description": "MMS multipart request, parts are ordered"
            },
            "infobip-ccaas-conversation-service.openapi.GoogleOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleAgent"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleConversation"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.persons.batch.model.BatchOperationResponse": {
                "title": "BatchOperationResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of people"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FileInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.DocumentMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.DocumentContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobip-ccaas-web-froms.openapi.WebForm": {
                "required": [
                    "channel",
                    "destination",
                    "enabled",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Web Form Id."
                    },
                    "name": {
                        "type": "string",
                        "description": "Web Form name."
                    },
                    "channel": {
                        "enum": [
                            "SMS",
                            "VIBER",
                            "FACEBOOK_MESSENGER",
                            "WHATSAPP",
                            "RCS",
                            "UNKNOWN",
                            "EMAIL",
                            "MULTICHANNEL",
                            "NO_CHANNEL",
                            "LIVE_CHAT",
                            "UNUSED",
                            "VOICE",
                            "VIDEO",
                            "APPLE_BUSINESS_CHAT",
                            "LINE",
                            "GOOGLE_BUSINESS_MESSAGES",
                            "TELEGRAM",
                            "CALLS",
                            "INTERNAL",
                            "FACEBOOK_POST",
                            "INSTAGRAM_POST",
                            "TWITTER_POST",
                            "VIBER_BOT",
                            "INSTAGRAM_MESSAGING",
                            "GOOGLE_PLAY"
                        ],
                        "type": "string",
                        "description": "Web Form channel."
                    },
                    "destination": {
                        "type": "string",
                        "description": "Web Form destination."
                    },
                    "url": {
                        "type": "string",
                        "description": "Web Form URL."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Web Form enable/disable toggle."
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of tag Ids used on the Web Form."
                        },
                        "description": "List of tag Ids used on the Web Form."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time stamp when Web Form is created.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time stamp when Web Form was updated.",
                        "format": "date-time"
                    }
                },
                "example": {
                    "id": "3c2d1ddf-ef0f-457e-88b1-3477f3e0952b",
                    "name": "Test WebForm",
                    "channel": "EMAIL",
                    "destination": "destination@email.test",
                    "url": "/ccaas/1/web-form/3c2d1ddf-ef0f-457e-88b1-3477f3e0952b/post",
                    "enabled": true,
                    "createdAt": "2021-07-09T06:15:48.3610000+00:00",
                    "updatedAt": "2021-07-09T06:15:48.3610000+00:00"
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.SendingSpeed": {
                "title": "SendingSpeed",
                "type": "object",
                "properties": {
                    "speed": {
                        "type": "integer",
                        "description": "Defines the number of messages that will be sent per specified time unit.",
                        "format": "int32"
                    },
                    "timeUnit": {
                        "type": "string",
                        "description": "Defines time unit used for calculating sending speed.  Possible values: `second`, `minute`, `hour` and `day`."
                    }
                }
            },
            "infobipapimanagementother.openapi.email.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.LegacyMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message sender.",
                        "example": "mySender"
                    },
                    "to": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message destination.",
                        "example": "385977666618"
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "effcdc6f-6766-485d-856e-3e928a0e23a6"
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.LegacyApiContent"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.SmsFailover"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Custom client's data that will be included in Delivery Report."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.bulks.status.BulkStatus": {
                "title": "BulkStatus",
                "enum": [
                    "PENDING",
                    "PAUSED",
                    "PROCESSING",
                    "CANCELED",
                    "FINISHED",
                    "FAILED"
                ],
                "type": "string"
            },
            "infobippushko.openapi.voip.tts.v3.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotMoMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "STICKER",
                            "FILE",
                            "CONTACT",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotTextMoMessage",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotImageMoMessage",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotVideoMoMessage",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotStickerMoMessage",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotFileMoMessage",
                        "CONTACT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContactMoMessage",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotLocationMoMessage"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.expire.UploadResponse": {
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string",
                        "description": "Id of the uploaded audio file."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatPreChatFormContent": {
                "required": [
                    "items"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatPreChatFormContentItem"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TelegramInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramChat"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.LineData": {
                "required": [
                    "altText",
                    "contents",
                    "duration",
                    "packageId",
                    "stickerId",
                    "thumbnailUrl",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "AUDIO",
                            "STICKER",
                            "FLEX"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Url of the image sent in the Line message. Max 1000 characters.",
                        "writeOnly": true
                    },
                    "thumbnailUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Thumbnail of the image sent in the Line message. Max 1000 characters.",
                        "writeOnly": true
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the audio file.",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "packageId": {
                        "type": "string",
                        "description": "Package id of sticker that will be sent.",
                        "writeOnly": true
                    },
                    "stickerId": {
                        "type": "string",
                        "description": "Sticker id that will be sent.",
                        "writeOnly": true
                    },
                    "altText": {
                        "maxLength": 400,
                        "minLength": 0,
                        "type": "string"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.FlexContainer"
                    }
                },
                "description": "Line-specific data used if the message is sent through a Line channel.",
                "writeOnly": true
            },
            "infobippushko.openapi.whatsapp.mo.reports.ImageDocumentVideoMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "caption": {
                                "type": "string",
                                "description": "Media Caption.",
                                "writeOnly": true
                            },
                            "url": {
                                "type": "string",
                                "description": "Url for media download.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VideoWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.ott.reports.dlr.Report": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.reports.dlr.Report"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "channel": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.OmniChannel"
                                    }
                                ],
                                "description": "Channel that was used for message delivering.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Configuration.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "configuration": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Configuration"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.Form": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Form id."
                    },
                    "title": {
                        "type": "string",
                        "description": "Form title."
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Is form enabled."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Is form marked as default one."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.FormField"
                        },
                        "description": "List of fields attached to a form"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.Log": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric."
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that was sent."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the message was finished processing by Infobip (i.e. delivered to the destination, delivered to the destination network, etc.). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32"
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.Price"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.Status"
                    },
                    "error": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.Error"
                    }
                },
                "description": "Collection of logs."
            },
            "infobip-ccca.openapi.OptionWithPeriodicCollectCli": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "audioSourceType": {
                        "enum": [
                            "TTS",
                            "FILE"
                        ],
                        "type": "string",
                        "description": "Specifies whether the audio is from a file source or text-to-speech"
                    },
                    "ttsAudioSource": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.TtsAudioSource"
                    },
                    "fileAudioSource": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.FileAudioSource"
                    },
                    "repeatInterval": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.Duration"
                    }
                },
                "description": "File information."
            },
            "infobip-iot-siman-service.iot.openapi.AccountUsageResponse": {
                "allOf": [
                    {
                        "properties": {
                            "iccid": {
                                "type": "string",
                                "description": "Unique SIM identifier.",
                                "example": "8944500204198492000"
                            },
                            "date": {
                                "type": "string",
                                "description": "Date of the record creation",
                                "example": "2020-01-01T00:00:00"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.UsageDataResponse"
                    }
                ],
                "description": "Single record in the specified range contains the usage recorded at the point in time given in the date field.\n"
            },
            "infobip-ccaas-conversation-service.openapi.VoiceInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.JoinEventLineMoContent": {
                "required": [
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.EventGoogleContent": {
                "required": [
                    "eventType",
                    "representative"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventType": {
                                "enum": [
                                    "REPRESENTATIVE_JOINED",
                                    "REPRESENTATIVE_LEFT"
                                ],
                                "type": "string"
                            },
                            "representative": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Representative"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.TextContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message that will be sent."
                    },
                    "previewUrl": {
                        "type": "boolean",
                        "description": "Allows for URL previews in text messages. If the value is set to `true`, text is expected to contain URL starting with `https://` or `http://`. The default value is `false`."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.VoiceWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FlexLineContent": {
                "required": [
                    "altText",
                    "contents"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "altText": {
                                "maxLength": 400,
                                "minLength": 0,
                                "type": "string"
                            },
                            "contents": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Container"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.bulks.status.BulkStatusResponse": {
                "title": "BulkStatusResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Unique ID of the bulk."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.bulks.status.BulkStatus"
                            }
                        ],
                        "description": "Status of the bulk. Possible values are `PENDING`, `PAUSED`, `CANCELED`, `PROCESSING` and `FINISHED`"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoFileContent": {
                "required": [
                    "sentAt",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MtPhone": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waId": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotStickerMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.HangUpInboundCallsContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Destination": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PHONE_NUMBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination",
                        "FACEBOOK_MESSENGER_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookUser",
                        "APPLE_BUSINESS_CHAT_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleUser",
                        "LINE_OFFICIAL_ACCOUNT_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineUser",
                        "LIVE_CHAT_REGISTRATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatRegistration",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailDestination",
                        "GOOGLE_CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleConversation",
                        "TELEGRAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramChat",
                        "AGENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Agent",
                        "VIBER_BOT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotDestination",
                        "SOCIAL_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser",
                        "INSTAGRAM_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramUser",
                        "INSTAGRAM_COMMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramComment",
                        "KAKAO_SANGDAM_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamUser",
                        "TWITTER_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterUser"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatInboundContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "AUDIO",
                            "DOCUMENT",
                            "SURVEY_RESPONSE",
                            "PRE_CHAT_FORM",
                            "FORM_RESPONSE",
                            "BUTTON_RESPONSE"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextLiveChatInboundContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageLiveChatInboundContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoLiveChatInboundContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioLiveChatInboundContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentLiveChatInboundContent",
                        "SURVEY_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SurveyResponseLiveChatContent",
                        "PRE_CHAT_FORM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatPreChatFormContent",
                        "FORM_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatFormResponseContent",
                        "BUTTON_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatButtonResponseContent"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.VoiceNumberMaskingActionDetails": {
                "required": [
                    "voiceNumberMaskingConfigKey"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.VoiceActionDetails"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "voiceNumberMaskingConfigKey": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveFooterWhatsAppContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 60,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Organization": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveRowWhatsAppContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string"
                    },
                    "title": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 72,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error.",
                        "readOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name.",
                        "readOnly": true
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.VerificationResponse": {
                "title": "VerificationResponse",
                "type": "object",
                "properties": {
                    "verifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.Verification"
                        },
                        "description": "Collection of verifications",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.org.infobip.ccaas.connector.model.tag.Tag": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "^[^?/]*$",
                        "type": "string",
                        "description": "Tag name. Characters '/' and '?' are restricted!"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "example": {
                    "name": "Demo tag"
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotDestination": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.Field": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Field id."
                    },
                    "title": {
                        "type": "string",
                        "description": "Field title."
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "MULTILINE",
                            "CHECKBOX",
                            "DROPDOWN",
                            "INTNUMBER",
                            "DECIMALNUMBER",
                            "REGEX",
                            "DATE",
                            "CARD"
                        ],
                        "type": "string",
                        "description": "Field type."
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regular expression. Valid only for REGEX field type."
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Is field enabled"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of available options."
                        },
                        "description": "List of available options."
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "IS",
                                "IS_NOT",
                                "CONTAINS",
                                "DOESNT_CONTAIN",
                                "IS_SELECTED",
                                "NOT_SELECTED",
                                "IS_EQUAL_TO",
                                "NOT_EQUAL_TO",
                                "LESS_THAN",
                                "GREATER_THAN",
                                "IS_EQUAL_OR_LESS",
                                "IS_EQUAL_OR_GREATER",
                                "BEFORE",
                                "AFTER",
                                "BEFORE_OR_ON",
                                "AFTER_OR_ON"
                            ],
                            "type": "string",
                            "description": "List of available operators based on field type."
                        },
                        "description": "List of available operators based on field type."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Note": {
                "required": [
                    "content",
                    "conversationId",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "conversationId": {
                        "type": "string",
                        "description": "Id of the Conversation holding the note.",
                        "readOnly": true
                    },
                    "agentId": {
                        "type": "string",
                        "description": "Id of the author Agent."
                    },
                    "content": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Note content, which can be any text up to 4000 characters."
                    },
                    "type": {
                        "enum": [
                            "INTERNAL",
                            "AUTH_BIOMETRY_INIT",
                            "AUTH_BIOMETRY_PENDING",
                            "AUTH_BIOMETRY_SUCCESS",
                            "AUTH_BIOMETRY_EXPIRED",
                            "AUTH_BIOMETRY_CANCEL",
                            "AUTH_BIOMETRY_FAILED",
                            "AUTH_AGENT_SUCCESS",
                            "AUTH_AGENT_EXPIRED",
                            "AUTH_BOT_SUCCESS",
                            "AUTH_BOT_EXPIRED",
                            "JIRA_COMMENT",
                            "ATTACHMENT"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "example": {
                    "agentId": "F66D67327326FCCB027BEAA916B94542",
                    "content": "Sample Note content"
                }
            },
            "infobip-ccaas-conversation-service.openapi.AuthAppleBusinessChatMoContent": {
                "required": [
                    "authenticated",
                    "intentGroupLocale",
                    "requestIdentifier"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "authenticated": {
                                "type": "boolean"
                            },
                            "authToken": {
                                "type": "string"
                            },
                            "errors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AuthError"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.textual.SMSAdvancedTextualRequest": {
                "title": "SMSAdvancedTextualRequest",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "writeOnly": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.textual.SMSTextualMessage"
                        }
                    },
                    "sendingSpeedLimit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SendingSpeedLimit"
                            }
                        ],
                        "description": "Limit the sending speed for message bulks. In some use cases, you might want to reduce message sending speed if your message call to action involves visiting a website, calling your contact center or similar recipient activity, in which you can handle a limited amount of load. This setting helps you to spread the delivery of the messages over a longer period, allowing your systems or agents to handle incoming traffic in real-time, resulting in better customer satisfaction.",
                        "writeOnly": true
                    },
                    "tracking": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.Tracking"
                            }
                        ]
                    }
                }
            },
            "infobippushko.openapi.voip.reports.v1.IvrData": {
                "title": "IvrData",
                "type": "object",
                "properties": {
                    "scenarioId": {
                        "type": "string",
                        "description": "ID of IVR scenario."
                    },
                    "scenarioName": {
                        "type": "string",
                        "description": "Name of IVR scenario."
                    },
                    "collectedDtmfs": {
                        "type": "string",
                        "description": "JSON showing the result of every CollectAction in IVR scenario in the form of key/value pairs, where the key is CollectAction variable and pair is collected DTMF."
                    },
                    "collectedMappedDtmfs": {
                        "type": "string",
                        "description": "JSON showing the result of every CollectAction in IVR scenario with the mapped, meaningful, values you defined in CollectAction `mappedValues` option."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.IntentGroupLocale": {
                "type": "object",
                "properties": {
                    "intent": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "deviceAgent": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CardSuggestion": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "postbackData": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "REPLY",
                            "OPEN_URL",
                            "DIAL_PHONE"
                        ],
                        "type": "string"
                    }
                },
                "description": "List of suggestions that will be sent in card",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardReplySuggestion",
                        "OPEN_URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardOpenUrlSuggestion",
                        "DIAL_PHONE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardDialPhoneSuggestion"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonText": {
                "type": "object",
                "properties": {
                    "opacity": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "backgroundGradientColor": {
                        "pattern": "^[#]([A-Fa-f0-9]{6})$",
                        "type": "string"
                    },
                    "paddings": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "text": {
                        "type": "string"
                    },
                    "verticalAlign": {
                        "enum": [
                            "TOP",
                            "MIDDLE",
                            "BOTTOM"
                        ],
                        "type": "string"
                    },
                    "horizontalAlign": {
                        "enum": [
                            "LEFT",
                            "CENTER",
                            "RIGHT"
                        ],
                        "type": "string"
                    },
                    "size": {
                        "enum": [
                            "SMALL",
                            "REGULAR",
                            "LARGE"
                        ],
                        "type": "string"
                    },
                    "shouldFit": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-forms.openapi.TitleElement": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormStaticElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "textContent": {
                                "type": "string",
                                "description": "Text content of the element."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.AdvancedMessage": {
                "title": "AdvancedMessage",
                "required": [
                    "destinations"
                ],
                "type": "object",
                "properties": {
                    "audioFileUrl": {
                        "type": "string",
                        "description": "Audio file can be delivered as a voice message to the recipients. Audio file must be uploaded online so the existing URL can be available for the file download. Size of the audio file must be below 4 MB. Supported formats are: aac, aiff, m4a, mp2, mp3, ogg, wav, wma."
                    },
                    "callTimeout": {
                        "type": "integer",
                        "description": "Maximum possible duration of the call to be set, shown in seconds.",
                        "format": "int32"
                    },
                    "callTransfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.CallTransfer"
                        },
                        "description": "Call transfers object enables transferring the ongoing call to another recipient(s) and establish a communication between your original recipient and additional one."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters. Example:  `Text containing some additional data needed in Delivery Report`."
                    },
                    "deliveryTimeWindow": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryTimeWindow"
                            }
                        ],
                        "description": "Scheduling object that allows setting up detailed time windows in which the message can be sent. Consists of from, to and days properties. Days property is mandatory. Days in the week are written as their full names: Monday-Sunday. Days parameter must be populated as a list, between two square brackets. `Example: ['MONDAY', 'TUESDAY', 'WEDNESDAY']`. From and to properties should be either both included, to allow finer time window granulation or both omitted, to include whole days in the delivery time window. From and to parameters are objects, that consist of hour and minute fields that hold integer values. For example, ` from: [ hour: 15, minute:45 ]`. For complete json, please check out our example. Note: delivery time window is set in UTC timezone."
                    },
                    "destinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Destination"
                        },
                        "description": "Message destination addresses. Destination address must be in the E.164 standard format (Example: 41793026727)."
                    },
                    "dtmfTimeout": {
                        "type": "integer",
                        "description": "The waiting period for end user to enter DTMF digits. Default value is `10` seconds.",
                        "format": "int32"
                    },
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID in E.164 standard format (Example: 41793026727). This is caller ID that will be presented to the end user where applicable."
                    },
                    "language": {
                        "type": "string",
                        "description": "If the message is in text format, the language in which the message is written must be defined for correct pronunciation. More about Text-to-speech functionality and supported TTS languages can be found [here](https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast). If not set, default language is `English [en]`. If voice is not set, then default voice for that specific language is used. In the case of English language, the voice is `[Joanna]`.",
                        "externalDocs": {
                            "description": "Voice Text-To-Speech Languages",
                            "url": "https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast"
                        }
                    },
                    "machineDetection": {
                        "type": "string",
                        "description": "Used for enabling detection of answering machine after the call has been answered. It can be set to `hangup` or `continue`. When set to `hangup`, if a machine is detected call will hang up. When set to `continue`, if a machine is detected, then voice message starts playing into voice mail after the answering message is finished with its greeting. If machineDetection is used, there is a minimum of 4 seconds detection time, which can result in delay of playing the message. Answering machine detection is additionally charged. For more information please contact your account manager and check documentation on Answering Machine Detection.",
                        "externalDocs": {
                            "description": "Answering Machine Detection",
                            "url": "https://www.infobip.com/docs/voice-and-video/add-ons#answering-machine-detection"
                        }
                    },
                    "maxDtmf": {
                        "type": "integer",
                        "description": "Defines the maximum number of DTMF codes entered by end user that would be collected.",
                        "format": "int32"
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Can be `application/json` or `application/xml`. [Read more](https://www.infobip.com/docs/api#channels/voice/get-voice-delivery-reports)."
                    },
                    "notifyContentVersion": {
                        "type": "integer",
                        "description": "Specifies the version of the Delivery report to be sent. Can be `1` ([deprecated version 1](#programmable-communications/voice/receive-voice-delivery-reports-deprecated)) or `2` ([current version 2](#programmable-communications/voice/receive-voice-delivery-reports)). The default is version 2. [Read more](https://www.infobip.com/docs/api#channels/voice/get-voice-delivery-reports).",
                        "format": "int32"
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your callback server on which the Delivery report will be sent."
                    },
                    "pause": {
                        "type": "integer",
                        "description": "Period of time in seconds between end user answering the call and message starting to be played. Minimal value is `0` and maximum value is 10 seconds. Default value is `0`.",
                        "format": "int32"
                    },
                    "record": {
                        "type": "boolean",
                        "description": "Record the call and expose it to client as URL inside the delivery report. Can be `true` or `false`.",
                        "externalDocs": {
                            "description": "Recording documentation",
                            "url": "https://www.infobip.com/docs/voice-and-video/add-ons#recording"
                        }
                    },
                    "repeatDtmf": {
                        "type": "string",
                        "description": "Specify DTMF code that is used as an indicator to repeat the voice message to the end user. The # key cannot be collected, as it is reserved for user input termination. Message can be repeated up to 5 times."
                    },
                    "retry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Retry"
                            }
                        ],
                        "description": "Used to define if the delivery of the Voice messages should be retried in case the first try doesn't succeed. Additional retries will be made according to the schedule defined by _minPeriod_ and _maxPeriod_ parameters and platform's internal retry logic. If the _minPeriod_ differs _maxPeriod_, delivery will be retried in the following manner: after 1 min, 2 min, 5 min, 10 min, 20 min, 30 min, 1 hour, 2 hours, 4 hours, 8 hours, 16 hours, 24 hours or until maxPeriod is reached.  If the retry attempt for the _maxPeriod_ is reached, the _maxPeriod_ will be used for all subsequent retries. If the _minPeriod_ and the _maxPeriod_ are defined as equal values, the period of time between retries will be equal to this value. Message delivery will be retried until the successful delivery or message validity or _maxCount_ value is reached."
                    },
                    "ringTimeout": {
                        "type": "integer",
                        "description": "Ringing duration, unless there are no operator limitations. Default value is `45`. Note: There are no limitations on the Voice platform regarding this value, however, most of the operators have their own ring timeout limitations and it is advisable to keep the ringTimeout value up to `45` seconds.",
                        "format": "int32"
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Used for scheduled Voice messages (message not to be sent immediately, but at scheduled time).",
                        "format": "date-time"
                    },
                    "sendingSpeed": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.SendingSpeed"
                            }
                        ],
                        "description": "Sending rate defined in number of messages sent per second, minute, hour or day. First message will be sent immediately (or at _sendAt_ time if scheduling is used) and subsequent messages will be sent respecting defined speed. For example, if _sendingSpeed_ is defined as 10 messages per hour, messages will be sent every 6 minutes. If this parameter is defined, _validityPeriod_ is ignored."
                    },
                    "speechRate": {
                        "type": "number",
                        "description": "The reproduction speed of speech in the resulting message. Effective only when using text. Supported range is from `0.5` (slow down speech) to `2` (speed up speech). Values less than `0.5` will be replaced with `0.5`, and values higher than `2` will be replaced with `2`. Default value is `1`.",
                        "format": "double"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent. Message text can be up to 1400 characters long. Adding _pauses_ between the words and extending the duration of the voice message is possible by using the comma character `“,”`. For example, if you want to have a 3 second pause after each word, then the text parameter should look like this `“one,,,,,,two,,,,,,three,,,,,,”`. Each comma creates a pause of 0.5 seconds."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period shown in minutes. When the period expires, it will not be allowed for the message to be sent. A validity period longer than 48h is not supported (in this case, it will be automatically set to 48h).",
                        "format": "int32"
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice"
                            }
                        ],
                        "description": "Used to define voice in which text would be synthesized. It has two parameters: _name_ and _gender_. When only _name_ is provided, then that exact voice with that name will be used to synthesize text. If only _gender_ is provided, then text is synthesized with first voice in given gender. If voice is not set, then default voice for that specific language is used."
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.PhoneNumberButtonApiData": {
                "required": [
                    "phoneNumber",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ButtonApiData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "type": "string",
                                "description": "Phone number to which a phone call would be placed by end-user when hitting the button."
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Configuration": {
                "title": "Configuration",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Configuration.Companion"
                            }
                        ]
                    },
                    "key": {
                        "type": "string",
                        "description": "Configuration key."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationLineMoContent": {
                "required": [
                    "address",
                    "latitude",
                    "longitude",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.OptionWithFileAudioSource": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "fileAudioSource": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.FileAudioSource"
                    }
                },
                "description": "File audio source information."
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotContactContent": {
                "required": [
                    "contact"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contact": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Contact"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VideoLineMoContent": {
                "required": [
                    "moAttachment",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "moAttachment": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoAttachment"
                            },
                            "duration": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ReplySuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LocationAction": {
                "required": [
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.IntegrationType": {
                "type": "object",
                "properties": {
                    "integrationType": {
                        "enum": [
                            "WHATSAPP"
                        ],
                        "type": "string",
                        "description": "Integration type.",
                        "writeOnly": true
                    }
                }
            },
            "infobiprcsapi.openapi.ShowLocationSuggestion": {
                "required": [
                    "latitude",
                    "longitude",
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "description": "Latitude of the location",
                                "format": "double",
                                "example": 45.793418
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "description": "Longitude of the location",
                                "format": "double",
                                "example": 15.946297
                            },
                            "label": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "description": "Label of the location",
                                "example": "Navigate to our office"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.email.org.infobip.email.v1.send.ipcore.MessageInfo": {
                "title": "MessageInfo",
                "type": "object",
                "properties": {
                    "messageCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.email.org.infobip.email.v1.send.ipcore.MessageStatus"
                            }
                        ]
                    },
                    "to": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ConversationInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Agent"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Conversation"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.Language": {
                "title": "Language",
                "enum": [
                    "en",
                    "es",
                    "ca",
                    "da",
                    "nl",
                    "fr",
                    "de",
                    "it",
                    "ja",
                    "ko",
                    "no",
                    "pl",
                    "ru",
                    "sv",
                    "fi",
                    "hr",
                    "sl",
                    "pt-pt",
                    "pt-br",
                    "zh-cn",
                    "zh-tw"
                ],
                "type": "string"
            },
            "infobip-ccca.openapi.Voice": {
                "required": [
                    "gender",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the voice."
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of the voice. Can be MALE or FEMALE."
                    }
                },
                "description": "Used to define voice in which text will be synthesized. To get a list of the supported voices for chosen language use <a href=\"https://www.infobip.com/docs/api#channels/voice/get-voices\" target=\"_blank\">Get voices.</a>"
            },
            "infobip-ccaas-conversation-service.openapi.ImageCarouselColumn": {
                "required": [
                    "action",
                    "imageUrl"
                ],
                "type": "object",
                "properties": {
                    "imageUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Span": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL"
                                ],
                                "type": "string"
                            },
                            "position": {
                                "enum": [
                                    "RELATIVE",
                                    "ABSOLUTE"
                                ],
                                "type": "string"
                            },
                            "weight": {
                                "enum": [
                                    "BOLD",
                                    "REGULAR"
                                ],
                                "type": "string"
                            },
                            "style": {
                                "enum": [
                                    "NORMAL",
                                    "ITALIC"
                                ],
                                "type": "string"
                            },
                            "decoration": {
                                "enum": [
                                    "NONE",
                                    "UNDERLINE",
                                    "LINE_THROUGH"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VoiceOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatApplication"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatRegistration"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.SurveyGoogleContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.RcsInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FormElement": {
                "required": [
                    "component"
                ],
                "type": "object",
                "properties": {
                    "component": {
                        "enum": [
                            "TEXT",
                            "TEXTAREA",
                            "NUMBER",
                            "DROPDOWN",
                            "CHECKBOX",
                            "CHECKBOX_GROUP",
                            "RADIOBUTTON",
                            "DATE",
                            "DATETIME",
                            "EMAIL",
                            "MSISDN",
                            "SUBMIT_BUTTON",
                            "TITLE",
                            "DESCRIPTION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "component",
                    "mapping": {
                        "SUBMIT_BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SubmitButton",
                        "TITLE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Title",
                        "DESCRIPTION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Description",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "TEXTAREA": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "NUMBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "DATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "DATETIME": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "MSISDN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlainInput",
                        "DROPDOWN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Dropdown",
                        "CHECKBOX": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Checkbox",
                        "CHECKBOX_GROUP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CheckboxGroup",
                        "RADIOBUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RadioButton"
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.PinType": {
                "title": "PinType",
                "enum": [
                    "NUMERIC",
                    "ALPHA",
                    "HEX",
                    "ALPHANUMERIC"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.FileViberContent": {
                "required": [
                    "caption",
                    "extension",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "extension": {
                                "type": "string"
                            },
                            "url": {
                                "pattern": "^(https?)://.*$",
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.UnknownFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "raw": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.response.SingleMessageStatus": {
                "title": "SingleMessageStatus",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    }
                }
            },
            "infobippushko.openapi.number.masking.callback.Request": {
                "title": "Number masking callback request",
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Caller phone number"
                    },
                    "to": {
                        "type": "string",
                        "description": "Called Voice number"
                    },
                    "correlationId": {
                        "type": "string",
                        "description": "Unique identifier of the call record, available for both Callback and Status requests"
                    },
                    "nmCorrelationId": {
                        "type": "string",
                        "description": "Unique identifier for correlation with inbound call, available in Callback and Status requests"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LineSender": {
                "required": [
                    "channelId"
                ],
                "type": "object",
                "properties": {
                    "channelId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamChannel"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.UpdateApiKeyRequest": {
                "title": "UpdateApiKeyRequest",
                "type": "object",
                "properties": {
                    "allowedIPs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP addresses or IP ranges from which this API key can be used.",
                        "externalDocs": {
                            "description": "It is recommended to set up AllowedIPs by security recommendations",
                            "url": "https://www.infobip.com/docs/essentials/security-recommendations#entry-point-specific-users"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable API key."
                    },
                    "name": {
                        "type": "string",
                        "description": "New name for API key."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.Permission"
                        },
                        "description": "List of permissions this API key has granted."
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Date from which this API key is/will be valid.",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Date until this API key will be valid.",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingQuickReply": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextInstagramMessagingQuickReply"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.ApiReportsResponse": {
                "title": "ApiReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.ApiReport"
                        },
                        "description": "List of API reports"
                    }
                }
            },
            "infobippushko.openapi.mms.mo.reports.MMSReportResponse": {
                "title": "MMSReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.mms.mo.reports.MoReport"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.MessageCount"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveListActionWhatsAppContent": {
                "required": [
                    "button",
                    "sections"
                ],
                "type": "object",
                "properties": {
                    "button": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "sections": {
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveSectionWhatsAppContent"
                        }
                    }
                }
            },
            "infobiprcsapi.openapi.OpenUrlSuggestion": {
                "required": [
                    "postbackData",
                    "text",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "URL that will be opened on mobile phone when the suggestion is selected",
                                "example": "https://www.infobip.com"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-forms.openapi.ActionAfterSubmission": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "REDIRECT",
                            "MESSAGE"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "description": "Action after the submission"
            },
            "infobip-ccaas-conversation-service.openapi.ApplePayLineItem": {
                "required": [
                    "amount",
                    "label"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotImageContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "thumbnailUrl": {
                                "type": "string"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FallbackFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.CardRcsMtContent": {
                "required": [
                    "alignment",
                    "content",
                    "orientation"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.RcsMtContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "orientation": {
                                "enum": [
                                    "HORIZONTAL",
                                    "VERTICAL"
                                ],
                                "type": "string",
                                "description": "Orientation type defines orientation in Card message"
                            },
                            "alignment": {
                                "enum": [
                                    "LEFT",
                                    "RIGHT"
                                ],
                                "type": "string",
                                "description": "Alignment type defines alignment in Card message"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobiprcsapi.openapi.CardContent"
                            },
                            "suggestions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                                },
                                "description": "List of suggestions"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.RequestedLiveAgentGbmMoContent": {
                "required": [
                    "context",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.util.DeliveryTime": {
                "title": "DeliveryTime",
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minute": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PhoneNumberFacebookMtQuickReply": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMtQuickReply"
                    }
                ]
            },
            "infobip-omni.openapi.VKontakteData": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name",
                        "writeOnly": true
                    },
                    "templateData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "JSON object where the keys are names of parameters in the template.",
                            "writeOnly": true
                        },
                        "description": "JSON object where the keys are names of parameters in the template.",
                        "writeOnly": true
                    }
                },
                "description": "VKontakte-specific data used if the message is sent through a VKontakte channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.LocationMediaTemplateHeaderContent": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.SimSwapCheckDto": {
                "required": [
                    "period"
                ],
                "type": "object",
                "properties": {
                    "period": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Sim swap check will be verified with MNO in \"period\" amount of hours from when this request was received. The value should be greater than 0.",
                        "format": "int32",
                        "example": 15
                    },
                    "proceedOn": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "ANY_ERROR",
                                "UNKNOWN",
                                "NO_COVERAGE"
                            ],
                            "type": "string",
                            "description": "If specified, proceed to the SMV verify in case:\n- Sim swap check fails\n- There is no sim swap coverage\n- Result of the sim swap check was unknown"
                        },
                        "description": "If specified, proceed to the SMV verify in case:\n- Sim swap check fails\n- There is no sim swap coverage\n- Result of the sim swap check was unknown"
                    }
                },
                "description": "Sim swap check parameters. In case this field is null, no sim swap checks will be done."
            },
            "infobipzalozmsgatewayservice.openapi.LogsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.Log"
                        },
                        "description": "Collection of logs."
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamTwitterContact": {
                "title": "IamTwitterContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.PreviewRequest": {
                "title": "PreviewRequest",
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "languageCode": {
                        "pattern": "^(TR|ES|PT|AUTODETECT)$",
                        "type": "string",
                        "description": "Code for language character set of a message text. Possible values: `TR` for Turkish, `ES` for Spanish, `PT` for Portuguese and `AUTODETECT` to let platform pick character set automatically based on the message text.",
                        "writeOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Message text to preview.",
                        "writeOnly": true
                    },
                    "transliteration": {
                        "pattern": "^(TURKISH|GREEK|CYRILLIC|SERBIAN_CYRILLIC|CENTRAL_EUROPEAN|BALTIC|NON_UNICODE)$",
                        "type": "string",
                        "description": "Conversion of a message text from one script to another. Possible values: `TURKISH`, `GREEK`, `CYRILLIC`, `SERBIAN_CYRILLIC`, `CENTRAL_EUROPEAN`, `BALTIC` and `NON_UNICODE`.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.logs.OmniLog": {
                "title": "OmniLog",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "channel": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.OmniChannel"
                            }
                        ],
                        "description": "Channel that was used for message delivering.",
                        "readOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the message was finished processing by Infobip (ie. delivered to destination, delivered to destination network, etc.)",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "readOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "readOnly": true
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.Price"
                            }
                        ],
                        "description": "Sent message price.",
                        "readOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent. It has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that was sent.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.Message": {
                "title": "Message",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "2FA application ID for which the requested message is created."
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.Language"
                            }
                        ],
                        "description": "Language code of language in which message text is written. It is used for reading the message when it is sent via voice. If no language is set, message will be read in `English`."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message template ID."
                    },
                    "messageText": {
                        "type": "string",
                        "description": "Text of a message that will be sent. Message text must contain `pinPlaceholder`."
                    },
                    "pinLength": {
                        "type": "integer",
                        "description": "PIN code length.",
                        "format": "int32"
                    },
                    "pinPlaceholder": {
                        "type": "string",
                        "description": "PIN code placeholder that will be replaced with generated PIN code."
                    },
                    "pinType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.PinType"
                            }
                        ],
                        "description": "Type of PIN code that will be generated and sent as part of 2FA message. You can set PIN type to numeric, alpha, alphanumeric or hex."
                    },
                    "regional": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.RegionalOptions"
                            }
                        ],
                        "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
                    },
                    "repeatDTMF": {
                        "type": "string",
                        "description": "In case PIN message is sent by Voice, DTMF code will enable replaying the message."
                    },
                    "senderId": {
                        "type": "string",
                        "description": "The name that will appear as the sender of the 2FA message (Example: CompanyName)."
                    },
                    "speechRate": {
                        "type": "number",
                        "description": "In case PIN message is sent by Voice, the speed of speech can be set for the message. Supported range is from `0.5` to `2`.",
                        "format": "double"
                    }
                }
            },
            "infobip-email-api-amg.openapi.BulkInfo": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "sendAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.SingleMessageInfo": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Message destination.",
                        "example": "385977666618"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of messages required to deliver.",
                        "format": "int32",
                        "example": 1
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.SingleMessageStatus"
                    }
                }
            },
            "infobipomniflowwebhook.openapi.IamPersonV2": {
                "required": [
                    "contactInformation"
                ],
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "modifiedAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "gender": {
                        "enum": [
                            "MALE",
                            "FEMALE"
                        ],
                        "type": "string"
                    },
                    "birthDate": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "profilePicture": {
                        "type": "string"
                    },
                    "origin": {
                        "enum": [
                            "API",
                            "PORTAL",
                            "WEB_SDK",
                            "INTEGRATION",
                            "PUSH",
                            "FACEBOOK",
                            "LINE",
                            "TELEGRAM",
                            "SALESFORCE",
                            "DYNAMICS",
                            "ZAPIER"
                        ],
                        "type": "string"
                    },
                    "modifiedFrom": {
                        "enum": [
                            "API",
                            "PORTAL",
                            "WEB_SDK",
                            "INTEGRATION",
                            "PUSH",
                            "FACEBOOK",
                            "LINE",
                            "TELEGRAM",
                            "SALESFORCE",
                            "DYNAMICS",
                            "ZAPIER"
                        ],
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "contactInformation": {
                        "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamContactV2"
                    }
                }
            },
            "infobip-email-api-amg.openapi.Status": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "action": {
                        "type": "string",
                        "description": "Action name."
                    }
                },
                "description": "Indicates whether the initiated email has been successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.ApnsData": {
                "title": "ApnsData",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Equals true if sending messages via APNS is enabled for this application."
                    }
                }
            },
            "infobip-omni.openapi.PushData": {
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "customPayload": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Additional custom data delivered with the Push message.",
                            "writeOnly": true
                        },
                        "description": "Additional custom data delivered with the Push message.",
                        "writeOnly": true
                    },
                    "notificationOptions": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.NotificationOptions"
                    },
                    "targetOnlyPrimaryDevices": {
                        "type": "boolean",
                        "description": "Set to true to only send messages to push devices which are marked as primary devices. By default, messages will be sent to all targeted devices, including both primary and non-primary.",
                        "writeOnly": true
                    },
                    "includeNotificationsDisabledDevices": {
                        "type": "boolean",
                        "description": "Flag which shows if devices with disabled notifications are included.",
                        "writeOnly": true
                    },
                    "personSubscriptions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Key set of custom attributes on person for additional filtering.",
                            "writeOnly": true
                        },
                        "description": "Key set of custom attributes on person for additional filtering.",
                        "writeOnly": true
                    },
                    "deviceSubscriptions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Key set of custom attributes on device for additional filtering.",
                            "writeOnly": true
                        },
                        "description": "Key set of custom attributes on device for additional filtering.",
                        "writeOnly": true
                    }
                },
                "description": "Push-specific data used if the message is sent through a Push channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.TwitterTweetInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "commentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetMoContent"
                            },
                            "socialData": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterSocialData"
                            }
                        }
                    }
                ]
            },
            "infobip-push-services-helper.openapi.MonoUnit": {
                "type": "object"
            },
            "infobipwhatsapptemplatemanagement.openapi.VideoHeaderApiData": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.RichLinkContent": {
                "required": [
                    "linkTitle",
                    "linkUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "linkUrl": {
                                "pattern": "^https?://[^\\s]+\\.\\w[^\\s]+$",
                                "type": "string"
                            },
                            "linkTitle": {
                                "type": "string"
                            },
                            "imageUrl": {
                                "pattern": "^https?://[^\\s]+\\.\\w[^\\s]+$",
                                "type": "string"
                            },
                            "videoUrl": {
                                "pattern": "^https?://[^\\s]+\\.\\w[^\\s]+$",
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "APPLE_TYPING_INDICATOR_CONTENT",
                                    "APPLE_LIST_PICKER_CONTENT",
                                    "APPLE_TIME_PICKER_CONTENT",
                                    "APPLE_AUTH_REQUEST_CONTENT",
                                    "APPLE_RICH_LINK_CONTENT",
                                    "APPLE_PAY_REQUEST_CONTENT",
                                    "APPLE_CUSTOM_INTERACTIVE_CONTENT",
                                    "APPLE_QUICK_REPLY_CONTENT"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.org.infobip.ccaas.tag.TagRequest": {
                "required": [
                    "tagName"
                ],
                "type": "object",
                "properties": {
                    "tagName": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "tag name identifier"
                    }
                },
                "example": {
                    "tagName": "This is demo TAG1"
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.logs.NumberContextLogsResponse": {
                "title": "NumberContextLogsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.logs.NumberContextLog"
                        },
                        "description": "Collection of logs.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ConversationOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Conversation"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Agent"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationContent"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Status": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                },
                "description": "Indicates whether the message is sent successfully, not sent, delivered, not delivered, waiting for delivery or any other possible status."
            },
            "infobip-ccca.openapi.OptionWithFileOrTtsAudioSource": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "audioSourceType": {
                        "enum": [
                            "TTS",
                            "FILE"
                        ],
                        "type": "string",
                        "description": "Specifies whether the audio is from a file source or text-to-speech"
                    },
                    "ttsAudioSource": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.TtsAudioSource"
                    },
                    "fileAudioSource": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.FileAudioSource"
                    }
                },
                "description": "File audio source or TTS audio source information."
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotSender": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "apiVersion": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ReplyToInstagramMoContent": {
                "type": "object"
            },
            "infobipwhatsappstandaloneapiservice.openapi.AddressContent": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "Street name."
                    },
                    "city": {
                        "type": "string",
                        "description": "City name."
                    },
                    "state": {
                        "type": "string",
                        "description": "State name."
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip code value."
                    },
                    "country": {
                        "type": "string",
                        "description": "Country name."
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code value."
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of the address. Can be `HOME` or `WORK`."
                    }
                },
                "description": "Array of addresses information."
            },
            "infobip-ccaas-conversation-service.openapi.LocationUrlInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ReplyKeyboardRemove": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyMarkup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "selective": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.HeroComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT",
                            "SPAN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BOX": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Box",
                        "BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Button",
                        "FILLER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Filler",
                        "ICON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Icon",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image",
                        "SEPARATOR": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Separator",
                        "SPACER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Spacer",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Text",
                        "SPAN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Span"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.OpenLinkAction": {
                "required": [
                    "content",
                    "type",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "URL which will be opened.",
                                "example": "https://play.google.com/store/apps/details?id=com.my.package"
                            },
                            "content": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string",
                                "description": "Action content.",
                                "example": "Example content"
                            }
                        }
                    }
                ],
                "description": "Action of opening a link."
            },
            "infobipzalozmsgatewayservice.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.ClassNameApplicationDetails": {
                "required": [
                    "action",
                    "className",
                    "packageName",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ApplicationDetails"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "className": {
                                "type": "string",
                                "description": "Android class name.",
                                "example": "com.android.ClassName"
                            }
                        }
                    }
                ],
                "description": "Details of the application to be opened based on a class name."
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.IndiaDltOptions": {
                "title": "IndiaDltOptions",
                "required": [
                    "principalEntityId"
                ],
                "type": "object",
                "properties": {
                    "contentTemplateId": {
                        "type": "string",
                        "description": "Id of your registered DTL content template that matches this message's text."
                    },
                    "principalEntityId": {
                        "type": "string",
                        "description": "Your assigned DTL principal entity id."
                    }
                }
            },
            "infobippushko.openapi.viber.mo.reports.TextMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.viber.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string",
                                "description": "Text of received message.",
                                "writeOnly": true
                            },
                            "trackingData": {
                                "type": "string",
                                "description": "Viber's tracking data from outgoing message that end user replies to. Might be random string of characters if not set explicitly in outgoing message.",
                                "writeOnly": true
                            },
                            "pairedMessageId": {
                                "type": "string",
                                "description": "Message ID of paired outgoing message if matched by Infobip platform.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.DialPhoneSuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "pattern": "\\+?\\d{5,15}",
                                "type": "string",
                                "description": "Valid phone number",
                                "example": "385977666618"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.MobileGeneration": {
                "type": "string",
                "description": "Indicates type of cellular technology that is the preference for those sim cards.<br> Possible values are (3G, 4G,5G, NB-IOT)",
                "example": "3G"
            },
            "infobip-webrtc-amg.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramPostInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "commentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostMoContent"
                            },
                            "instagramSocialData": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramSocialData"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.UnknownInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "raw": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotLocationMoMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "location": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Location"
                            },
                            "trackingData": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.scenarios.Scenario": {
                "title": "Scenario",
                "type": "object",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "Indicates if created scenario should be set as a default."
                    },
                    "flow": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.scenarios.Step"
                        },
                        "description": "Sender used in OMNI scenario’s step for sending message."
                    },
                    "key": {
                        "type": "string",
                        "description": "Key used to uniquely identify OMNI scenario.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "OMNI scenario name."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.bulks.BulkResponse": {
                "title": "BulkResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "sendAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MessageContent": {
                "type": "object",
                "description": "Message content depending on content type."
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.AdvancedBody": {
                "title": "AdvancedBody",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.AdvancedMessage"
                        },
                        "description": "Array of messages to be sent, one object per every message"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    },
                    "pricePerLookup": {
                        "type": "number",
                        "description": "Price per lookup.",
                        "format": "double"
                    },
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per message.",
                        "format": "double"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamReplyButton": {
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string"
                            },
                            "extra": {
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.TextMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TextContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobippushko.openapi.ott.mo.reports.MoReport": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoReport"
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.mo.reports.SimpleReport"
                    }
                ],
                "discriminator": {
                    "propertyName": "integrationType",
                    "mapping": {
                        "WHATSAPP": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoReport",
                        "VIBER": "#/components/schemas/infobippushko.openapi.viber.mo.reports.MoReport",
                        "FACEBOOK": "#/components/schemas/infobippushko.openapi.ott.mo.reports.SimpleReport"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CardContent": {
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Title of the card, displayed as bolded text",
                        "example": "Card title"
                    },
                    "description": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the card, displayed as regular text",
                        "example": "Some supercool, attention-grabbing description"
                    },
                    "media": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardMedia"
                    },
                    "suggestions": {
                        "maxItems": 4,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardSuggestion"
                        },
                        "description": "List of suggestions that will be sent in card"
                    }
                },
                "description": "A list of cards contained within the carousel"
            },
            "infobipmiyuloregatewayservice.openapi.CardMiMtApiContent": {
                "required": [
                    "category",
                    "mainLabel",
                    "text",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message text.",
                        "example": "This is a sample message."
                    },
                    "category": {
                        "type": "string",
                        "description": "Message category.",
                        "example": "E-commerce"
                    },
                    "title": {
                        "maxLength": 9,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message title.",
                        "example": "Delivery"
                    },
                    "mainLabel": {
                        "maxLength": 9,
                        "minLength": 0,
                        "type": "string",
                        "description": "Label for the main button.",
                        "example": "Ordered"
                    },
                    "mainAction": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    "actions": {
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                        },
                        "description": "Actions for additional buttons. Required if mainAction is not provided."
                    },
                    "subtitles": {
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Message subtitles."
                        },
                        "description": "Message subtitles."
                    },
                    "subcategory": {
                        "type": "string",
                        "description": "Message subcategory.",
                        "example": "Delivery status"
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period. Required if 'validityPeriodTimeUnit' is set. Validity period must be between 30 seconds and 1 hour.",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit. Required if 'validityPeriod' is set. Allowed values: SECONDS, MINUTES, HOURS, DAYS.",
                        "example": "MINUTES"
                    }
                },
                "description": "Message content"
            },
            "infobipapimanagementother.openapi.core-acceptor-service.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobip-omni.openapi.SmsData": {
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "transliteration": {
                        "enum": [
                            "NONE",
                            "ALL",
                            "BALTIC",
                            "CENTRAL_EUROPEAN",
                            "COLOMBIAN",
                            "CYRILLIC",
                            "GREEK",
                            "NON_UNICODE",
                            "PORTUGUESE",
                            "SERBIAN_CYRILLIC",
                            "TURKISH"
                        ],
                        "type": "string",
                        "description": "Conversion of a message text from one script to another.",
                        "writeOnly": true
                    },
                    "language": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.Language"
                    },
                    "regional": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.RegionalData"
                    }
                },
                "description": "SMS-specific data used if the message is sent through an SMS channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterSocialData": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "permalinkUrl": {
                        "type": "string"
                    },
                    "extCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamInstagramContact": {
                "title": "IamInstagramContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleQuickReply": {
                "required": [
                    "items",
                    "summaryText"
                ],
                "type": "object",
                "properties": {
                    "summaryText": {
                        "type": "string"
                    },
                    "items": {
                        "maxItems": 5,
                        "minItems": 2,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleQuickReplyItem"
                        }
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PrimaryButtonActionType": {
                "title": "PrimaryButtonActionType",
                "enum": [
                    "WEB_VIEW_URL",
                    "DEEP_LINK",
                    "OPEN_URL_IN_BROWSER"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.PostInstagramPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "attachmentUrls": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MemberJoinEventLineMoContent": {
                "required": [
                    "members",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "members": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamLineContact": {
                "title": "IamLineContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobipamgnumbersapi.openapi.ForwardToIvrActionDetails": {
                "required": [
                    "scenarioKey"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.VoiceActionDetails"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "scenarioKey": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramSocialData": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "postId": {
                        "type": "string"
                    },
                    "permalinkUrl": {
                        "type": "string"
                    },
                    "extCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "gatewayData",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailContent"
                            },
                            "gatewayData": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailInboundGatewayData"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamPhoneContact": {
                "title": "IamPhoneContact",
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "Person's number. Phone numbers must be in international format (https://en.wikipedia.org/wiki/E.164), 50 characters max"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.UriBaseApplicationDetails": {
                "required": [
                    "action",
                    "packageName",
                    "type",
                    "uriBase"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ApplicationDetails"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uriBase": {
                                "type": "string",
                                "description": "URI which will be opened.",
                                "example": "https://www.infobip.com/"
                            }
                        }
                    }
                ],
                "description": "Details of the application to be opened based on a URI."
            },
            "infobip-ccaas-conversation-service.openapi.ViberMoContent": {
                "type": "object",
                "properties": {
                    "trackingData": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "FILE"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextViberMoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileViberMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CardMedia": {
                "required": [
                    "file",
                    "height"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Resource"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Resource"
                    },
                    "height": {
                        "enum": [
                            "SHORT",
                            "MEDIUM",
                            "TALL"
                        ],
                        "type": "string",
                        "description": "Height of the card media",
                        "example": "TALL"
                    },
                    "refresh": {
                        "type": "boolean",
                        "description": "Should refresh image cache",
                        "example": true
                    },
                    "alt": {
                        "type": "string",
                        "description": "Alt text",
                        "example": "Sample alt text"
                    }
                },
                "description": "Object defining display of card media"
            },
            "infobippushko.openapi.whatsapp.dlr.reports.ReportsResponse": {
                "title": "whatsappDlrReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.reports.dlr.Report"
                        },
                        "description": "Collection of reports, one per every message.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "VIDEO",
                            "IMAGE",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextTwitterDmMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoTwitterDmMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageTwitterDmMoContent",
                        "UNKNOWN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnknownTwitterDmMoContent"
                    }
                }
            },
            "infobip-ccca.openapi.TtsAudioSource": {
                "required": [
                    "language",
                    "speechRate",
                    "voice"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text to convert using text-to-speech."
                    },
                    "language": {
                        "type": "string",
                        "description": "If the message is in text format, the language in which the message is written must be defined for correct pronunciation. In the Languages section, you can find the list of languages that we support.`<a href=\"https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast\" target=\"_blank\">Voice Text-To-Speech Languages.</a>"
                    },
                    "voice": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.Voice"
                    },
                    "speechRate": {
                        "maximum": 2.0,
                        "exclusiveMaximum": false,
                        "minimum": 0.5,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "Text-to-speech speech rate.",
                        "format": "double"
                    }
                },
                "description": "Text-to-speech audio source information."
            },
            "infobip-ccaas-conversation-service.openapi.DialPhoneSuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            },
                            "phoneNumber": {
                                "pattern": "\\+?\\d{5,15}",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.ModelSize": {
                "type": "string",
                "description": "Model size description:\n  Indicates SIM card size or format.\n  <br> Possible values are <br> Trio (2FF, 3FF, 4FF) <br> 2FF <br> 3FF <br>\n  4FF <br> MFF <br> MFF2/QFN8 <br> DFN8 <br> DFN6\n",
                "example": "Trio (2FF, 3FF, 4FF)"
            },
            "infobip-ccaas-conversation-service.openapi.FacebookContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "FACEBOOK_SENDER_ACTION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SenderActionFacebookContent",
                        "FACEBOOK_TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateFacebookContent",
                        "COMMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommentFacebookContent",
                        "POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostFacebookContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.NearPlaceContext": {
                "required": [
                    "entryPoint",
                    "placeId",
                    "sendTime",
                    "type",
                    "userDeviceLocale",
                    "userDisplayName"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Context"
                    }
                ]
            },
            "infobip-ccaas-web-froms.openapi.WebFormPostResponse": {
                "type": "object",
                "properties": {
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation ID."
                    }
                },
                "example": {
                    "conversationId": "17CC7DEE60FC79AF3C1A1096AE7E134A"
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageWithCaptionContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoWithCaptionContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "LIVE_CHAT_BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatButtonContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentWithCaptionContent",
                        "SURVEY_REQUEST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SurveyRequestLiveChatContent",
                        "QUICK_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatQuickReplyContent",
                        "CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatCarouselContent"
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.applications.v2.ApplicationResponse": {
                "title": "ApplicationResponse",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "2FA application ID.",
                        "readOnly": true
                    },
                    "configuration": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.applications.v2.ApplicationConfiguration"
                            }
                        ],
                        "description": "Created 2FA application configuration.",
                        "readOnly": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the created application is enabled.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "2FA application name.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.CallTransfer": {
                "title": "CallTransfer",
                "required": [
                    "equals",
                    "if",
                    "transferTo"
                ],
                "type": "object",
                "properties": {
                    "callTransferMaxDuration": {
                        "type": "integer",
                        "description": "Maximum duration of the transferred call, specified in seconds.",
                        "format": "int32"
                    },
                    "equals": {
                        "type": "string",
                        "description": "Criteria for establishing call transfer, if `dtmf` is evaluated."
                    },
                    "if": {
                        "type": "string",
                        "description": "Specifies what to evaluate. Can be `dtmf` or `anyDtmf`."
                    },
                    "transferTo": {
                        "type": "string",
                        "description": "Phone number of the recipient that will receive transferred call. Must be written in E.164 standard (Example: 41793026727)."
                    }
                }
            },
            "infobippushko.openapi.infobip.api.models.MessageCount": {
                "type": "object",
                "properties": {
                    "messageCount": {
                        "type": "number",
                        "description": "Number of returned messages in this request.",
                        "format": "integer",
                        "writeOnly": true
                    },
                    "pendingMessageCount": {
                        "type": "number",
                        "description": "Number of remaining new messages on Infobip servers ready to be returned in the next request.",
                        "format": "integer",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.reports.SMSReport": {
                "title": "SMSReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID.",
                        "readOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through `callbackData` field in fully featured SMS message.",
                        "readOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the SMS was finished processing by Infobip (i.e., delivered to the destination, delivered to the destination network, etc.). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "readOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "readOnly": true
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Price"
                            }
                        ],
                        "description": "Sent SMS price.",
                        "readOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the SMS was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of parts the sent SMS was split into.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobippushko.openapi.email.reports.trackReport.RecipientInfo": {
                "title": "RecipientInfo",
                "type": "object",
                "properties": {
                    "deviceType": {
                        "type": "string",
                        "description": "The type of device used by the recipient to do the user action.",
                        "writeOnly": true
                    },
                    "os": {
                        "type": "string",
                        "description": "The type OS present in the device used by the recipient.",
                        "writeOnly": true
                    },
                    "deviceName": {
                        "type": "string",
                        "description": "Device name of the action originating device.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonMedia": {
                "type": "object",
                "properties": {
                    "imageUrl": {
                        "type": "string"
                    },
                    "imageScaleType": {
                        "enum": [
                            "CROP",
                            "FILL",
                            "FIT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed.",
                        "readOnly": true
                    },
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per message.",
                        "format": "double",
                        "readOnly": true
                    }
                }
            },
            "infobip-email-validation-amg.openapi.org.infobip.email.validation.amg.response.ValidationResponse": {
                "title": "ValidationResponse",
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string"
                    },
                    "validMailbox": {
                        "type": "string"
                    },
                    "validSyntax": {
                        "type": "boolean"
                    },
                    "catchAll": {
                        "type": "boolean"
                    },
                    "didYouMean": {
                        "type": "string"
                    },
                    "disposable": {
                        "type": "boolean"
                    },
                    "roleBased": {
                        "type": "boolean"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ActionsResponse": {
                "title": "ActionsResponse",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ActionsResponse.Companion"
                            }
                        ]
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action"
                        },
                        "description": "List of actions."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramPostContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoMediaTemplateHeaderContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipsc.openapi.ErrorResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.RadioButton": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isRequired": {
                                "type": "boolean"
                            },
                            "isHidden": {
                                "type": "boolean"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InputOption"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatQuickReplyContent": {
                "required": [
                    "source",
                    "suggestedReplies"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "suggestedReplies": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "source": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                            },
                            "reply": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.CheckboxInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "fieldId": {
                                "type": "string",
                                "description": "Field identifier. It must be unique within the form."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            },
                            "personField": {
                                "type": "string",
                                "description": "Connect field to person attribute"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string",
                                "description": "Data type for person attribute"
                            },
                            "personFieldSubItemName": {
                                "type": "string",
                                "description": "Connect field to person attribute sub item name"
                            },
                            "isRequired": {
                                "type": "boolean",
                                "description": "Required field has to be filled with input or end users will not be able to submit the form."
                            },
                            "isHidden": {
                                "type": "boolean",
                                "description": "Hidden field is not visible to end users. The value can be filled by using an API submission. Use for profile attribution."
                            },
                            "staticValue": {
                                "type": "string",
                                "description": "This value is filled on every submit."
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "description": "Date of last element modification, null for old and unmodified data",
                                "format": "date-time"
                            },
                            "checkboxText": {
                                "type": "string",
                                "description": "Text for checkbox field."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.Organization": {
                "title": "Organization",
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string",
                        "description": "Company name.",
                        "writeOnly": true
                    },
                    "department": {
                        "type": "string",
                        "description": "Description name.",
                        "writeOnly": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Title.",
                        "writeOnly": true
                    }
                },
                "description": "Organization information."
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotConversationStartedMoContent": {
                "required": [
                    "messageToken",
                    "timestamp",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "context": {
                                "type": "string"
                            },
                            "conversationType": {
                                "type": "string"
                            },
                            "subscribed": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "user": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotUser"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobip-portal-audit-logs.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "nullable": true
                    },
                    "validationErrors": {
                        "description": "Validation errors.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "infobip-ccaas-conversation-service.openapi.Agent": {
                "type": "object",
                "properties": {
                    "agentId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookPostMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "COMMENT",
                            "POST",
                            "DEAUTHORIZE"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextFacebookPostMoContent",
                        "COMMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommentFacebookPostMoContent",
                        "POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostFacebookPostMoContent",
                        "DEAUTHORIZE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DeauthorizeFacebookPostMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ApplePayRequestContent": {
                "required": [
                    "receivedMessage",
                    "replyMessage",
                    "total"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "images": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Image"
                                }
                            },
                            "receivedMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "replyMessage": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDataMessage"
                            },
                            "lineItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ApplePayLineItem"
                                }
                            },
                            "total": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ApplePayLineItem"
                            },
                            "shippingMethods": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ApplePayShippingMethod"
                                }
                            },
                            "requestIdentifier": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CallsInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.applications.v2.ApplicationRequest": {
                "title": "ApplicationRequest",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "configuration": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.applications.v2.ApplicationConfiguration"
                            }
                        ],
                        "description": "Created 2FA application configuration.",
                        "writeOnly": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the created application is enabled.",
                        "writeOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "2FA application name.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PushRequest": {
                "title": "PushRequest",
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "minLength": 1,
                        "type": "string",
                        "description": "PUSH Application Code you are using to send messages. Application Code is the application identifier which links your mobile application to the application profile created in Infobip Platform. It is required to insert the Application Code in Mobile Messaging SDK configuration once you implement it in your mobile application.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Recipient destination address. [Check examples](https://www.infobip.com/docs/mobile-app-messaging/send-mobile-app-messages-over-api) how to work with recipients",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters.",
                        "writeOnly": true
                    },
                    "customPayload": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Additional data that can be delivered with the Push message. customPayload must be formatted as JSON object.",
                        "writeOnly": true
                    },
                    "notificationOptions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PushRequestNotificationOptions"
                            }
                        ],
                        "description": "JSON object that contains notification options.",
                        "writeOnly": true
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Supported content types: application/json, application/xml.",
                        "writeOnly": true
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your callback server on which the Delivery report will be sent. Additional Information about Delivery reports on Notify URL.",
                        "writeOnly": true
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Used for scheduled Push notifications. Message will be sent at scheduled time.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "targetOnlyPrimaryDevices": {
                        "type": "boolean",
                        "description": "Set to true to only send messages to push devices which are marked as primary devices. By default, messages will be sent to all targeted devices, including both primary and non-primary.",
                        "writeOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in hours. When the period expires, it will not be allowed for the message to be sent or message will be canceled if it's pending in Cloud (APNS or FCM). Default value 48h. Minimum value is 30 sec. Maximum value is 72h.",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.ValidityPeriodTimeUnit"
                            }
                        ],
                        "description": "Time unit for validity period.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamEmailContact": {
                "title": "IamEmailContact",
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Person's email address. Should comply with email format (https://tools.ietf.org/html/rfc2822), 255 characters max"
                    }
                }
            },
            "infobip-email-api-amg.openapi.ApiReportsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-email-api-amg.openapi.ApiReport"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FileOutboundCallsContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 1000,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of the given resource"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.apikeys.Permission": {
                "title": "Permission",
                "enum": [
                    "ALL",
                    "TFA",
                    "PUSH_CLIENT",
                    "PEOPLE_EVENTS_PUBLIC_CLIENT",
                    "ACCOUNT_KIT",
                    "EXTERNAL_INTEGRATIONS"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotCarouselContent": {
                "required": [
                    "buttonGrid"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "heightScale": {
                                "maximum": 100,
                                "minimum": 20,
                                "type": "integer",
                                "format": "int32"
                            },
                            "backgroundColor": {
                                "pattern": "^[#]([A-Fa-f0-9]{6})$",
                                "type": "string"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            },
                            "buttonGrid": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonGrid"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.SmsOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of a contact.",
                        "writeOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of an email. Can be HOME, WORK.",
                        "writeOnly": true
                    }
                },
                "description": "Email information.",
                "writeOnly": true
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.single.SingleBody": {
                "title": "SingleBody",
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "audioFileUrl": {
                        "type": "string",
                        "description": "Your audio file can be delivered as a voice message to the recipient. Audio file must be uploaded online so the existing URL can be available for the file download. Size of the audio file must be below 4 MB. Supported formats are: aac, aiff, m4a, mp2, mp3, ogg, wav, wma."
                    },
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID in E.164 standard format (Example: 41793026727). This is caller ID that will be presented to the end user where applicable."
                    },
                    "language": {
                        "type": "string",
                        "description": "If the message is in text format, the language in which the message is written must be defined for correct pronunciation. More about Text-to-speech functionality and supported TTS languages can be found [here](https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast). If not set, default language is `English [en]`. If voice is not set, then default voice for that specific language is used. In the case of English language, the voice is `[Joanna]`.",
                        "externalDocs": {
                            "description": "Voice Text-To-Speech Languages",
                            "url": "https://www.infobip.com/docs/voice-and-video/outbound-calls#text-to-speech-voice-over-broadcast"
                        }
                    },
                    "text": {
                        "type": "string",
                        "description": "Message to be converted to speech and played to subscribers. Message text can be up to 1400 characters long."
                    },
                    "to": {
                        "type": "string",
                        "description": "Phone number of the recipient. Phone number must be written in E.164 standard format (Example: 41793026727)."
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice"
                            }
                        ],
                        "description": "Used to define voice in which text would be synthesized. It has two parameters: _name_ and _gender_. When only _name_ is provided, then that exact voice with that name will be used to synthesize text. If only _gender_ is provided, then text is synthesized with first voice in given gender. If voice is not set, then default voice is used."
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.SmsFailover": {
                "required": [
                    "from",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Message failover sender",
                        "example": "myFailoverSender"
                    },
                    "text": {
                        "type": "string",
                        "description": "Message failover text",
                        "example": "This message was sent over SMS."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period. Required if 'validityPeriodTimeUnit' is set. Validity period must be between 30 seconds and 2 days.",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit. Required if 'validityPeriod' is set. Allowed values: SECONDS, MINUTES, HOURS, DAYS.",
                        "example": "MINUTES"
                    }
                },
                "description": "SMS to be sent in case a message could not be delivered through the main channel."
            },
            "infobip-ccaas-conversation-service.openapi.Event": {
                "required": [
                    "identifier",
                    "timeslots",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "timeslots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EventTimeslot"
                        }
                    },
                    "locationItem": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationItem"
                    },
                    "imageIdentifier": {
                        "type": "string"
                    },
                    "timezoneOffset": {
                        "maximum": 840,
                        "minimum": -840,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.preview.LanguageConfiguration": {
                "title": "LanguageConfiguration",
                "type": "object",
                "properties": {
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.Language"
                            }
                        ]
                    },
                    "transliteration": {
                        "type": "string",
                        "description": "Conversion of a message text from one script to another. Possible values: `TURKISH`, `GREEK`, `CYRILLIC`, `SERBIAN_CYRILLIC`, `CENTRAL_EUROPEAN`, `BALTIC` and `NON_UNICODE`.",
                        "readOnly": true
                    }
                }
            },
            "infobip-omni.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TelegramMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "AUDIO",
                            "DOCUMENT",
                            "IMAGE",
                            "TEXT",
                            "VIDEO"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioTelegramMoContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentTelegramMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageTelegramMoContent",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextTelegramMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoTelegramMoContent"
                    }
                }
            },
            "infobip-forms.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-forms.openapi.ApiRequestError"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ActionsResponse.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "actionsResponse": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ActionsResponse"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DatetimePickerAction": {
                "required": [
                    "data",
                    "label",
                    "mode"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            },
                            "mode": {
                                "enum": [
                                    "DATE",
                                    "TIME",
                                    "DATETIME"
                                ],
                                "type": "string"
                            },
                            "initial": {
                                "type": "string"
                            },
                            "max": {
                                "type": "string"
                            },
                            "min": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.viber.mo.reports.MoReport": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.viber.IntegrationType"
                    },
                    {
                        "properties": {
                            "message": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.viber.mo.reports.TextMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.viber.mo.reports.FileMessage"
                                    }
                                ],
                                "description": "Message content.",
                                "discriminator": {
                                    "propertyName": "type",
                                    "mapping": {
                                        "TEXT": "#/components/schemas/infobippushko.openapi.viber.mo.reports.TextMessage",
                                        "FILE": "#/components/schemas/infobippushko.openapi.viber.mo.reports.FileMessage"
                                    }
                                },
                                "writeOnly": true
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.MoReportBase"
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.Network": {
                "title": "Network",
                "type": "object",
                "properties": {
                    "countryName": {
                        "type": "string",
                        "description": "Optional name of the country the network operates in.",
                        "readOnly": true
                    },
                    "countryPrefix": {
                        "type": "string",
                        "description": "Country prefix.",
                        "readOnly": true
                    },
                    "networkName": {
                        "type": "string",
                        "description": "Optional human readable name of the network.",
                        "readOnly": true
                    },
                    "networkPrefix": {
                        "type": "string",
                        "description": "Network prefix.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotSubscribedMoContent": {
                "required": [
                    "messageToken",
                    "timestamp",
                    "type",
                    "user"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chatHostname": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "user": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotUser"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ReplyMarkup": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "REPLY_KEYBOARD_MARKUP",
                            "REPLY_KEYBOARD_REMOVE",
                            "FORCE_REPLY"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY_KEYBOARD_MARKUP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyKeyboardMarkup",
                        "REPLY_KEYBOARD_REMOVE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyKeyboardRemove",
                        "FORCE_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ForceReply"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ivr.v1.model.RecordedIvrFile": {
                "title": "RecordedIvrFile",
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Differentiates recordings made by separate Record actions."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent message."
                    },
                    "recordedAt": {
                        "type": "string",
                        "description": "The time the recording took place.",
                        "format": "date-time"
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "Scenario key."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination address."
                    },
                    "url": {
                        "type": "string",
                        "description": "Relative URL path to the recorded file. To download the audio, just perform a GET request using the relative URL of a specific file. The returned audio data is encoded as PCM 16bit 8kHz WAVE audio. The files are available on Infobip servers for 2 months."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailInboundGatewayData": {
                "required": [
                    "emailAddresses",
                    "emailBodies",
                    "fromAddress",
                    "messageId",
                    "totalContentSize"
                ],
                "type": "object",
                "properties": {
                    "fromAddress": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "emailAddresses": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailAddresses"
                    },
                    "emailBodies": {
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailBody"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Attachment"
                        }
                    },
                    "totalContentSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "inReplyTo": {
                        "type": "string"
                    },
                    "preHeaderText": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "referencedConversationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotLocationContent": {
                "required": [
                    "location"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "location": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotOpenMapLocation"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.ApiStatusResponse": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MemberLeaveEventLineMoContent": {
                "required": [
                    "members",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "members": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-email-api-amg.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.ModelGrade": {
                "type": "string",
                "description": "Model grade possible values: <br> Industrial <br> Automotive <br> MIM 85 <br> MIM 105 <br> Quad <br> u-MIM Quad <br> Full Auto Quad\n",
                "example": "Industrial"
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveListTextHeaderContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 60,
                                "minLength": 1,
                                "type": "string",
                                "description": "Text of the message header."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FacebookPostOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "replyToCommentId",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialPage"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser"
                            },
                            "replyToCommentId": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.query.NumberContextRequest": {
                "title": "NumberContextRequest",
                "required": [
                    "to"
                ],
                "type": "object",
                "properties": {
                    "to": {
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of phone numbers to look up. Numbers must be in international format (Example: `41793026727`).",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.UpdateMessageRequest": {
                "title": "UpdateMessageRequest",
                "type": "object",
                "properties": {
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.Language"
                            }
                        ],
                        "description": "Language code of language in which message text is written. It is used for reading the message when it is sent via voice. If no language is set, message will be read in `English`.",
                        "writeOnly": true
                    },
                    "messageText": {
                        "type": "string",
                        "description": "Text of a message that will be sent. Message text must contain `pinPlaceholder`.",
                        "writeOnly": true
                    },
                    "pinLength": {
                        "type": "integer",
                        "description": "PIN code length.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "pinType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.PinType"
                            }
                        ],
                        "description": "Type of PIN code that will be generated and sent as part of 2FA message. You can set PIN type to numeric, alpha, alphanumeric or hex.",
                        "writeOnly": true
                    },
                    "regional": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.api.model.tfa.service.RegionalOptions"
                            }
                        ],
                        "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
                    },
                    "repeatDTMF": {
                        "type": "string",
                        "description": "In case PIN message is sent by Voice, DTMF code will enable replaying the message.",
                        "writeOnly": true
                    },
                    "senderId": {
                        "type": "string",
                        "description": "The name that will appear as the sender of the 2FA message (Example: CompanyName).",
                        "writeOnly": true
                    },
                    "speechRate": {
                        "type": "number",
                        "description": "In case PIN message is sent by Voice, the speed of speech can be set for the message. Supported range is from `0.5` to `2`.",
                        "format": "double",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MoTextContent": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    }
                }
            },
            "infobip-forms.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.LocationMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.LocationContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobippushko.openapi.ott.mo.reports.ottReportResponse": {
                "title": "OTTReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.ott.mo.reports.MoReport"
                                },
                                "description": "Collection of reports, one per every received message."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.MessageCount"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LineUser": {
                "required": [
                    "userId"
                ],
                "type": "object",
                "properties": {
                    "replyToken": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.logs.VoiceLogsResponse": {
                "title": "VoiceLogsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.logs.VoiceLog"
                        },
                        "description": "Array of voice message logs, one object per each message."
                    }
                }
            },
            "infobip-recording-amg.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.BlockComponentStyle": {
                "type": "object",
                "properties": {
                    "backgroundColor": {
                        "type": "string"
                    },
                    "separator": {
                        "type": "boolean"
                    },
                    "separatorColor": {
                        "type": "string"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.SmsFailover": {
                "required": [
                    "from",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Message failover sender",
                        "example": "myFailoverSender"
                    },
                    "text": {
                        "type": "string",
                        "description": "Message failover text",
                        "example": "This message was sent over SMS."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period. Required if 'validityPeriodTimeUnit' is set. Validity period must be between 30 seconds and 2 days.",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit. Required if 'validityPeriod' is set. Allowed values: SECONDS, MINUTES, HOURS, DAYS.",
                        "example": "MINUTES"
                    }
                },
                "description": "SMS to be sent in case a message could not be delivered through the main channel."
            },
            "infobip-ccaas-conversation-service.openapi.ConversationResultPage": {
                "type": "object",
                "properties": {
                    "conversations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Conversation"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "conversations": [
                        {
                            "id": "37B93F4D2BA3C58B58526EAEAA1AB35C",
                            "topic": "Conversation default",
                            "summary": null,
                            "status": "OPEN",
                            "priority": "NORMAL",
                            "queueId": null,
                            "agentId": null,
                            "createdAt": "2019-04-24T11:25:41.0580000+00:00",
                            "updatedAt": "2019-04-24T11:25:41.0580000+00:00"
                        },
                        {
                            "id": "9F1F21C198025CC026956A7E2E9C560F",
                            "topic": "API help",
                            "summary": "API not working properly",
                            "status": "OPEN",
                            "priority": "HIGH",
                            "queueId": "FBDDA7F8B33417374ACC02F5265527E6",
                            "agentId": "F66D67327326FCCB027BEAA916B94542",
                            "createdAt": "2019-04-24T11:25:41.0580000+00:00",
                            "updatedAt": "2019-04-24T11:25:41.0580000+00:00"
                        },
                        {
                            "id": "573711510E1C002E29679B12C7CB48AE",
                            "topic": "Regular purchase",
                            "summary": "Happy customer",
                            "status": "CLOSED",
                            "priority": "NORMAL",
                            "queueId": "FBDDA7F8B33417374ACC02F5265527E6",
                            "agentId": "6298AA7707903A4ED680B436929681AD",
                            "createdAt": "2019-04-24T11:25:41.0580000+00:00",
                            "updatedAt": "2019-04-28T10:21:41.0500000+00:00",
                            "closedAt": "2019-04-28T10:21:41.0500000+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 3,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "pullResponse": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action"
                            }
                        ]
                    },
                    "response": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action"
                            }
                        ]
                    }
                }
            },
            "infobip-mms-service.openapi.MMSMoReport": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the received message."
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric."
                    },
                    "message": {
                        "type": "string",
                        "description": "Full text of the received message."
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when Infobip platform received the message. It has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ"
                    },
                    "mmsCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32"
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Custom callback data can be inserted during the setup phase."
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobip-mms-service.openapi.Price"
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.FormFieldRequest": {
                "required": [
                    "fieldId",
                    "isRequired"
                ],
                "type": "object",
                "properties": {
                    "fieldId": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.FieldConditionRequest"
                        }
                    }
                },
                "description": "Fields attached to a form."
            },
            "infobip-omni.openapi.KakaoAlimUrlButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "buttonUrl": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL to open upon button press. Max 500 characters. This field is deprecated and will be removed in the future, buttonUrlMobile and buttonUrlPc should be used instead to set URL for each destination device.",
                                "writeOnly": true,
                                "deprecated": true
                            },
                            "buttonUrlMobile": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL for mobile devices to open upon button press. This field is mandatory if buttonUrl is not set, can't be used together with buttonUrl. It replaces deprecated buttonUrl field. Max 500 characters.",
                                "writeOnly": true
                            },
                            "buttonUrlPc": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL for PCs to open upon button press. It replaces deprecated buttonUrl field. Max 500 characters.",
                                "writeOnly": true
                            },
                            "target": {
                                "pattern": "^out$",
                                "enum": [
                                    "out"
                                ],
                                "type": "string",
                                "description": "Launches web page in external browser when set to \"out\"",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.IconComponent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BaselineComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL"
                                ],
                                "type": "string"
                            },
                            "aspectRatio": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.SMSResponse": {
                "title": "SMSResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request. Bulk ID will be received only when a message is sent to more than one destination address.",
                        "readOnly": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.SMSResponseDetails"
                        },
                        "description": "Array of sent message objects, one object per every message.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.scenarios.ScenariosResponse": {
                "title": "ScenariosResponse",
                "type": "object",
                "properties": {
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.scenarios.Scenario"
                        },
                        "description": "Array of OMNI scenarios",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationWhatsAppMoContent": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "format": "double"
                            },
                            "address": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.VideoInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallContent"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateButtonContent": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Template buttons. Should be defined in correct order, only if `quick reply` or `dynamic URL` buttons have been registered. It can have up to three `quick reply` buttons or only one `dynamic URL` button.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "QUICK_REPLY": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateQuickReplyButtonContent",
                        "URL": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateUrlButtonContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UnFollowEventLineMoContent": {
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    }
                ]
            },
            "infobiprcsapi.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Spacer": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "size": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-voice-api-amg.openapi.VoiceCallsStatus": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    }
                },
                "description": "Indicates whether the initiated call has been successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
            },
            "infobipwhatsappstandaloneapiservice.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors.",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors.",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors.",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Destination": {
                "title": "Destination",
                "required": [
                    "to"
                ],
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "to": {
                        "type": "string",
                        "description": "Message destination addresses. Destination address must be in the E.164 standard format (Example: `41793026727`)."
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.SingleMessageStatus": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID",
                        "format": "int32",
                        "example": 1
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name",
                        "example": "PENDING"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID",
                        "format": "int32",
                        "example": 7
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name",
                        "example": "PENDING_ENROUTE"
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status",
                        "example": "Message sent to next instance"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error"
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.VerifyPinRequest": {
                "title": "VerifyPinRequest",
                "required": [
                    "pin"
                ],
                "type": "object",
                "properties": {
                    "pin": {
                        "type": "string",
                        "description": "PIN code to verify",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.util.DeliveryDay": {
                "title": "DeliveryDay",
                "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.Area": {
                "required": [
                    "height",
                    "width",
                    "x",
                    "y"
                ],
                "type": "object",
                "properties": {
                    "x": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "y": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "width": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "height": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "URL",
                            "AUDIO",
                            "VIDEO",
                            "FILE",
                            "IMAGE",
                            "FALLBACK",
                            "LOCATION",
                            "LOCATION_URL",
                            "POSTBACK",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextFacebookMoContent",
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UrlFacebookMoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioFacebookMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoFacebookMoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileFacebookMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageFacebookMoContent",
                        "FALLBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FallbackFacebookMoContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationCoordinatesFacebookMoContent",
                        "LOCATION_URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationUrlFacebookMoContent",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackFacebookMoContent",
                        "UNKNOWN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnknownFacebookMoContent"
                    }
                }
            },
            "infobip-omni.openapi.KakaoChinguAppLinkButton": {
                "required": [
                    "androidScheme",
                    "buttonText",
                    "iosScheme"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "androidScheme": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "Scheme to use on Android devices.",
                                "writeOnly": true
                            },
                            "iosScheme": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "Scheme to use on iOS devices.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.QueueRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of the queue."
                    },
                    "isAutoAssignmentEnabled": {
                        "type": "boolean",
                        "description": "Autoassignment of the queue.",
                        "default": false
                    },
                    "workingHoursId": {
                        "type": "string",
                        "description": "Working hours Id queue belongs to"
                    }
                },
                "example": {
                    "name": "Spanish Support"
                }
            },
            "infobip-ccaas-conversation-service.openapi.ReplyKeyboardMarkup": {
                "required": [
                    "keyboard"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyMarkup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "keyboard": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "resizeKeyboard": {
                                "type": "boolean"
                            },
                            "oneTimeKeyboard": {
                                "type": "boolean"
                            },
                            "selective": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "LOCATION"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TypingIndicatorAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "typingIndicatorType"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "typingIndicatorType": {
                                "enum": [
                                    "TYPING_START",
                                    "TYPING_END"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.scenarios.Step": {
                "title": "Step",
                "required": [
                    "channel"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.OmniChannel"
                            }
                        ],
                        "description": "Channel used in scenario’s step for delivering message."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender used in OMNI scenario’s step for sending message."
                    }
                }
            },
            "infobip-ccca.openapi.StatusCodeResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.SurveyResponseGbmMoContent": {
                "required": [
                    "context",
                    "rating",
                    "survey"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "survey": {
                                "type": "string"
                            },
                            "rating": {
                                "enum": [
                                    "VERY_DISSATISFIED",
                                    "SOMEWHAT_DISSATISFIED",
                                    "NEITHER_SATISFIED_NOR_DISSATISFIED",
                                    "SOMEWHAT_SATISFIED",
                                    "VERY_SATISFIED"
                                ],
                                "type": "string"
                            },
                            "feedback": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Message destination.",
                        "example": "385977666618"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of messages required to deliver.",
                        "format": "int32",
                        "example": 1
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageStatus"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.VoiceCallsLog": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the initiated call."
                    },
                    "to": {
                        "type": "string",
                        "description": "The initiated call destination address."
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric."
                    },
                    "text": {
                        "type": "string",
                        "description": "Not valuable for voice calls."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the voice call was initiated. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the voice call was processed by Infobip (ie. delivered to destination, delivered to destination network, etc.)",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Call duration in seconds.",
                        "format": "int32"
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobip-voice-api-amg.openapi.VoiceCallsPrice"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-voice-api-amg.openapi.VoiceCallsStatus"
                    },
                    "error": {
                        "$ref": "#/components/schemas/infobip-voice-api-amg.openapi.VoiceCallsError"
                    }
                },
                "description": "Array of voice calls logs, one object per each call."
            },
            "infobippushko.openapi.number.masking.status.Request": {
                "title": "Number masking status request",
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Requested action (dial or audio)"
                    },
                    "from": {
                        "type": "string",
                        "description": "Caller phone number"
                    },
                    "to": {
                        "type": "string",
                        "description": "Called Voice number"
                    },
                    "transferTo": {
                        "type": "string",
                        "description": "Called party phone number that the call is transferred to"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the outbound call shown in seconds"
                    },
                    "status": {
                        "type": "string",
                        "description": "Call status which can be: answered, busy, no answer, failed or congestion"
                    },
                    "nmCorrelationId": {
                        "type": "string",
                        "description": "Unique identifier for correlation with inbound call, available in Callback and Status requests"
                    },
                    "fileID": {
                        "type": "string",
                        "description": "Identifier of the file played to the caller"
                    },
                    "fileUrl": {
                        "type": "string",
                        "description": "The URL of the file played to the caller"
                    },
                    "ringingTime": {
                        "type": "string",
                        "description": "Date and time when ringing started"
                    },
                    "answeredTime": {
                        "type": "string",
                        "description": "Date and time when the call was answered"
                    },
                    "correlationId": {
                        "type": "string",
                        "description": "Unique identifier of the call record, available for both Callback and Status requests"
                    },
                    "inboundDuration": {
                        "type": "string",
                        "description": "Duration of the inbound call shown in seconds"
                    }
                }
            },
            "infobippushko.openapi.ott.MoReportBase": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Number which sent the message.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Sender provided during the activation process.",
                        "writeOnly": true
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when Infobip platform received the message.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the received message.",
                        "writeOnly": true
                    },
                    "pairedMessageId": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Message price.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.customer.account.freemessages.FreeMessagesResponse": {
                "title": "FreeMessagesResponse",
                "type": "object",
                "properties": {
                    "remainingCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "serialVersionUID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.MonthlyUsageForSimResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page",
                        "example": 1
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page",
                        "example": 20
                    },
                    "iccid": {
                        "type": "string",
                        "description": "Unique ICCID identifier",
                        "example": "8944500204198492000"
                    },
                    "monthlyUsage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.SimUsageResponse"
                        }
                    }
                }
            },
            "infobippushko.openapi.sms.mt.reports.SMSReportResponse": {
                "title": "SMSReportResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.sms.mt.reports.SMSReport"
                        },
                        "description": "The array of objects for your sent messages."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsImageHeaderContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of an image sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported image types are `JPG`, `JPEG`, `PNG`. Maximum image size is 5MB."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FormConditionalFieldRequest": {
                "required": [
                    "fieldId",
                    "isRequired"
                ],
                "type": "object",
                "properties": {
                    "fieldId": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-forms.openapi.DescriptionElement": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormStaticElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "textContent": {
                                "type": "string",
                                "description": "Text content of the element."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.ButtonReplyWhatsAppMoContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "required": [
                            "id",
                            "title"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string",
                                "description": "Identifier of the selected button."
                            },
                            "title": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string",
                                "description": "Title of the selected button."
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.UseCase": {
                "type": "string",
                "description": "Indicates type of use case that is the preference for those sim cards.<br> Possible values are: Connected busses, Wearables, Smart metering/smart grids/smart water,<br> Escooters/ebikes, POS terminals, Food delivery tablets, Connected cars, Connected cameras, <br> Connected truck, Healthcare, Smart retail, Tire monitoring, Connected kiosk/vending machine)",
                "example": "Connected busses"
            },
            "infobip-ccaas-conversation-service.openapi.FacebookPostContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent"
                    }
                }
            },
            "infobip-email-validation-amg.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-email-validation-amg.openapi.ApiRequestError"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.reports.v1.VoiceReport": {
                "title": "VoiceReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through callbackData field in fully featured Voice message."
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example"
                        }
                    },
                    "from": {
                        "type": "string",
                        "description": "Phone number to be presented as caller ID. Only numeric format allowed."
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Price"
                            }
                        ],
                        "description": "Sent voice message price."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination phone number."
                    },
                    "voiceCall": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.reports.v1.VoiceData"
                            }
                        ],
                        "description": "Data about voice call resulted from the message."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TemplateFacebookContent": {
                "required": [
                    "payload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "payload": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookTemplatePayload"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "FACEBOOK_SENDER_ACTION",
                                    "FACEBOOK_TEMPLATE",
                                    "COMMENT",
                                    "POST"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ConfigurationsResponse": {
                "title": "ConfigurationsResponse",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ConfigurationsResponse.Companion"
                            }
                        ]
                    },
                    "configurations$1": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Configuration"
                        },
                        "description": "List of configurations"
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.ApiContent": {
                "required": [
                    "templateCode"
                ],
                "type": "object",
                "properties": {
                    "templateCode": {
                        "type": "string",
                        "description": "Template Code",
                        "example": "my_template"
                    },
                    "templateData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "Template Data. Object defining values for all placeholders of the template used",
                            "example": "{\"name\":\"John Smith\",\"city\":\"New York\"}"
                        },
                        "description": "Template Data. Object defining values for all placeholders of the template used",
                        "example": {
                            "name": "John Smith",
                            "city": "New York"
                        }
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.TextTelegramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.ModelProvisioning": {
                "type": "string",
                "description": "Model provisioning description:\n  <br> UICC\n  <br> eUICC\n",
                "example": "UICC"
            },
            "infobipamgnumbersapi.openapi.NumberPrice": {
                "type": "object",
                "properties": {
                    "pricePerMonth": {
                        "type": "number"
                    },
                    "setupPrice": {
                        "type": "number"
                    },
                    "initialMonthPrice": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FileRcsMoContent": {
                "required": [
                    "contentType",
                    "name",
                    "size",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "contentType": {
                                "type": "string"
                            },
                            "size": {
                                "minimum": 0,
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.DeauthorizeFacebookPostMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostMoContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FacebookUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamChatbotSwitchButton": {
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string"
                            },
                            "event": {
                                "maxLength": 100,
                                "minLength": 0,
                                "pattern": "[A-Za-z0-9_]{1,100}",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.email.tracking.reports.TrackResponse": {
                "title": "EmailTrackResponse",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.email.mo.reports.TrackReport"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.EmailSender": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.ViberData": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "imageURL": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the image sent in the Viber message.",
                        "writeOnly": true
                    },
                    "fileName": {
                        "maxLength": 25,
                        "minLength": 0,
                        "type": "string",
                        "description": "File name of the file sent in the Viber message.",
                        "writeOnly": true
                    },
                    "fileType": {
                        "type": "string",
                        "description": "File type (extension) of the file sent in the Viber message. Has to be one of: doc, docx, rtf, dot, dotx, odt ,odf, fodt, txt, info, pdf, xps, pdax, eps, xls, xlsx, ods, fods, csv, xlsm, xltx",
                        "writeOnly": true
                    },
                    "fileUrl": {
                        "pattern": "^(https?)://.*$",
                        "type": "string",
                        "description": "URL of the file sent in the Viber message. For example: http://example.com/document.docx",
                        "writeOnly": true
                    },
                    "buttonText": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string",
                        "description": "Viber button label. Max 20 characters.",
                        "writeOnly": true
                    },
                    "buttonURL": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Viber Button Call To Action. Should contain URL or telephone number to call. Format for telephone number is tel:.",
                        "writeOnly": true
                    },
                    "trackingData": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Viber tracking data. Enables tracking messages, sent tracking_data value will be passed back with user's reply",
                        "writeOnly": true
                    },
                    "isPromotional": {
                        "type": "boolean",
                        "description": "Indicates if content is of promotional character.",
                        "writeOnly": true
                    },
                    "forcePrimaryDevice": {
                        "type": "boolean",
                        "description": "Defines if Text message will be sent only to the users primary device (smartphone).",
                        "writeOnly": true
                    }
                },
                "description": "Viber-specific data used if the message is sent through a Viber channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.Resource": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the given resource",
                        "example": "https://www.infobip.com/infobip-logo.png"
                    }
                },
                "description": "Resource object describing the thumbnail of the card"
            },
            "infobip-portal-audit-logs.openapi.Action": {
                "enum": [
                    "Enable",
                    "Disable",
                    "Update",
                    "CreateGenerate",
                    "Create",
                    "Activation",
                    "Change",
                    "Successful",
                    "Unsuccessful",
                    "Import",
                    "Add",
                    "Delete",
                    "Export",
                    "Launch",
                    "Cancel",
                    "Finish",
                    "Duplicate",
                    "CreateVersion",
                    "DeleteVersion",
                    "LaunchVersion",
                    "StopVersion",
                    "Schedule",
                    "Pause",
                    "Download",
                    "InviteToMobileDemoApplication",
                    "Buy",
                    "Restore",
                    "Merge",
                    "Request",
                    "Remove",
                    "Assign",
                    "Sent",
                    "Accept",
                    "Login",
                    "Logout",
                    "Lock",
                    "Unlock",
                    "Verify"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.ListPickerAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "listPickerSelectedItems",
                    "requestIdentifier"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "listPickerSelectedItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPickerSelectedItem"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.UrlTwitterDmButton": {
                "required": [
                    "label",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "maxLength": 36,
                                "minLength": 0,
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.HolidayWorkingHours": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Holiday ID.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Holiday name."
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date. Format: yyyy-MM-dd",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date. Format: yyyy-MM-dd",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Holiday enable/disable toggle."
                    }
                },
                "description": "List of working hours holidays.",
                "example": {
                    "name": "New Year's Day",
                    "startDate": "2021-01-01T00:00:00.0000000+01:00",
                    "endDate": "2021-01-01T00:00:00.0000000+01:00",
                    "enabled": true
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailBody": {
                "required": [
                    "emailBodyType",
                    "fileId",
                    "size"
                ],
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "emailBodyType": {
                        "enum": [
                            "TEXT",
                            "HTML"
                        ],
                        "type": "string"
                    },
                    "inlineImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InlineImage"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageTelegramMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.voip.tts.v3.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "pricePerSecond": {
                        "type": "number",
                        "description": "Price per one second of the Voice message.",
                        "format": "double"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.Trigger": {
                "required": [
                    "expression",
                    "formId",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Trigger title."
                    },
                    "expression": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Condition which resolves in destination form."
                        },
                        "description": "Condition which resolves in destination form."
                    },
                    "orderIndex": {
                        "type": "integer",
                        "description": "Trigger order.",
                        "format": "int32"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Is trigger enabled."
                    },
                    "formId": {
                        "type": "string",
                        "description": "Destination form."
                    },
                    "timesTriggered": {
                        "type": "integer",
                        "description": "Number of trigger resolution.",
                        "format": "int32"
                    }
                }
            },
            "infobip-email-api-amg.openapi.ApiReport": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies bulks of request."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent email request."
                    },
                    "to": {
                        "type": "string",
                        "description": "The recipient email address."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the email was initiated. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the email request was processed by Infobip",
                        "format": "date-time"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Email request count.",
                        "format": "int32"
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.Price"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.Status"
                    },
                    "error": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.ReportError"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.web.v1.send.message.WebPushRequestMulti": {
                "title": "WebPushRequestMulti",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.web.v1.send.message.WebPushRequest"
                        },
                        "description": "List of web push requests"
                    }
                }
            },
            "mobile-identity-service.openapi.SimSwapCheckResponseDto": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.ErrorDto"
                    },
                    "requestId": {
                        "type": "string",
                        "description": "Unique request ID",
                        "format": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    "simSwapOccurred": {
                        "type": "boolean",
                        "description": "Indicates whether sim swap occurred in the \"period\" amount of time",
                        "nullable": true,
                        "example": true
                    },
                    "networkInfo": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.SimSwapCheckNetworkInfoDto"
                    }
                },
                "description": "Sim Swap response object"
            },
            "infobip-ccaas-conversation-service.openapi.TextAppleBusinessChatMoContent": {
                "required": [
                    "attachments",
                    "intentGroupLocale",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "attachments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoAttachment"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "stickerId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonAction": {
                "type": "object",
                "properties": {
                    "actionBody": {
                        "type": "string"
                    },
                    "actionType": {
                        "enum": [
                            "REPLY",
                            "OPEN_URL",
                            "OPEN_MAP",
                            "LOCATION_PICKER",
                            "SHARE_PHONE",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "silent": {
                        "type": "boolean"
                    },
                    "openUrlSettings": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotOpenUrlSettings"
                    },
                    "openMapLocation": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotOpenMapLocation"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.nc.logs.NumberContextLog": {
                "title": "NumberContextLog",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "readOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when Infobip finished processing the lookup (e.g. lookup request was delivered to the destination network). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Error"
                            }
                        ]
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes.",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the performed lookup.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Price"
                            }
                        ]
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the lookup was performed. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "description": "The looked up phone number.",
                        "readOnly": true
                    }
                }
            },
            "infobip-email-api-amg.openapi.EmailLog": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent email request."
                    },
                    "to": {
                        "type": "string",
                        "description": "The recipient email address."
                    },
                    "from": {
                        "type": "string",
                        "description": "From email address."
                    },
                    "text": {
                        "type": "string",
                        "description": "The text from email body."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the email was initiated. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time"
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the email request was processed by Infobip",
                        "format": "date-time"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Email request count.",
                        "format": "int32"
                    },
                    "price": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.Price"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.Status"
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request."
                    }
                },
                "description": "Array of email logs, one object per each email request."
            },
            "infobip-ccaas-conversation-service.openapi.FollowEventLineMoContent": {
                "required": [
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-portal-audit-logs.openapi.ApiServiceException": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-portal-audit-logs.openapi.ApiRequestErrorDetails"
                    }
                },
                "additionalProperties": false
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveImageHeaderWhatsAppContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveHeaderWhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.Status": {
                "title": "Status",
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error.",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "readOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LineMoContent": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "AUDIO",
                            "FILE",
                            "LOCATION",
                            "STICKER",
                            "FOLLOW",
                            "UNFOLLOW",
                            "JOIN",
                            "LEAVE",
                            "MEMBER_JOIN",
                            "MEMBER_LEAVE",
                            "POSTBACK",
                            "BEACON",
                            "ACCOUNT_LINK",
                            "THINGS"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextLineMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageLineMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoLineMoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioLineMoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileLineMoContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationLineMoContent",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StickerLineMoContent",
                        "FOLLOW": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FollowEventLineMoContent",
                        "UNFOLLOW": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnFollowEventLineMoContent",
                        "JOIN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.JoinEventLineMoContent",
                        "LEAVE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LeaveEventLineMoContent",
                        "MEMBER_JOIN": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MemberJoinEventLineMoContent",
                        "MEMBER_LEAVE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MemberLeaveEventLineMoContent",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackEventLineMoContent",
                        "BEACON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BeaconEventLineMoContent",
                        "ACCOUNT_LINK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AccountLinkEventLineMoContent",
                        "THINGS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ThingsEventLineMoContent"
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "properties": {
                    "buttonText": {
                        "maxLength": 28,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the button. Max 28 characters.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "URL",
                            "APP_LINK",
                            "DELIVERY_TRACKING",
                            "CHATBOT_SWITCH",
                            "MESSAGE_DELIVERY",
                            "BOT_KEYWORD",
                            "ADD_CHANNEL"
                        ],
                        "type": "string"
                    }
                },
                "description": "Buttons to include in the message. Optional value. Max 5 buttons.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "APP_LINK": "#/components/schemas/infobip-omni.openapi.KakaoAlimAppLinkButton",
                        "URL": "#/components/schemas/infobip-omni.openapi.KakaoAlimUrlButton",
                        "DELIVERY_TRACKING": "#/components/schemas/infobip-omni.openapi.KakaoAlimDeliveryTrackingAlimButton",
                        "CHATBOT_SWITCH": "#/components/schemas/infobip-omni.openapi.KakaoAlimChatbotSwitchButton",
                        "MESSAGE_DELIVERY": "#/components/schemas/infobip-omni.openapi.KakaoAlimMessageDeliveryButton",
                        "BOT_KEYWORD": "#/components/schemas/infobip-omni.openapi.KakaoAlimBotKeywordButton",
                        "ADD_CHANNEL": "#/components/schemas/infobip-omni.openapi.KakaoAlimAddChannelButton"
                    }
                },
                "writeOnly": true
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamLiveChatContact": {
                "title": "IamLiveChatContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.SMSResponseDetails": {
                "title": "SMSResponseDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the sent message.",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the message is sent successfully, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPage"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookUser"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                            },
                            "tag": {
                                "enum": [
                                    "CONFIRMED_EVENT_UPDATE",
                                    "POST_PURCHASE_UPDATE",
                                    "ACCOUNT_UPDATE",
                                    "HUMAN_AGENT"
                                ],
                                "type": "string"
                            },
                            "quickReplies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMtQuickReply"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamOpenApplicationButton": {
                "required": [
                    "name",
                    "schemeAndroid",
                    "schemeIos"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string"
                            },
                            "schemeAndroid": {
                                "type": "string"
                            },
                            "schemeIos": {
                                "type": "string"
                            },
                            "fallbackUrlMobile": {
                                "type": "string"
                            },
                            "fallbackUrlPc": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipomniflowwebhook.openapi.IamPushContactV2": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "registrationId": {
                        "type": "string"
                    },
                    "additionalData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "isPrimary": {
                        "type": "boolean"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamSalesforceV2": {
                "title": "IamSalesforceV2",
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "description": "Salesforce contact id"
                    },
                    "leadId": {
                        "type": "string",
                        "description": "Salesforce lead id"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Salesforce owner"
                    },
                    "status": {
                        "type": "string",
                        "description": "Salesforce status"
                    }
                }
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.ApplicationRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Application description containing up to 160 characters."
                    },
                    "ios": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.IosPushNotificationConfig"
                    },
                    "android": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.AndroidPushNotificationConfig"
                    },
                    "appToApp": {
                        "type": "boolean",
                        "description": "Enable to communicate app to app.",
                        "default": false
                    },
                    "appToConversations": {
                        "type": "boolean",
                        "description": "Enable to forward incoming calls to an agent on Conversations platform.",
                        "default": false
                    },
                    "appToPhone": {
                        "type": "boolean",
                        "description": "Enable to forward incoming calls to a phone number.",
                        "default": false
                    }
                }
            },
            "infobippushko.openapi.whatsapp.MoReportBase": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Number which sent the message.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Sender provided during the activation process.",
                        "writeOnly": true
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when Infobip platform received the message.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the received message.",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Message price.",
                        "writeOnly": true
                    }
                }
            },
            "infobiprcsapi.openapi.SmsFailoverRequest": {
                "required": [
                    "from",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Message failover sender",
                        "example": "myFailoverRcsSender"
                    },
                    "text": {
                        "type": "string",
                        "description": "Message failover text",
                        "example": "This message was sent over SMS."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period",
                        "format": "int32",
                        "example": 15
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit",
                        "example": "MINUTES"
                    }
                },
                "description": "Sms failover message contents"
            },
            "infobipomniflowwebhook.openapi.IamContactV2": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamPhoneContact"
                        }
                    },
                    "email": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamEmailContact"
                        }
                    },
                    "push": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamPushContactV2"
                        }
                    },
                    "facebook": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamFacebookContact"
                        }
                    },
                    "line": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamLineContact"
                        }
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.bulks.BulkRequest": {
                "title": "BulkRequest",
                "required": [
                    "sendAt"
                ],
                "type": "object",
                "properties": {
                    "sendAt": {
                        "type": "string",
                        "description": "Rescheduled timestamp of the bulk.",
                        "format": "date-time"
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimBotKeywordButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.PhoneNumberDestination": {
                "required": [
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.MoMessage": {
                "title": "MoMessage",
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Type"
                    },
                    "context": {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.Context"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextWithImageAndButtonViberContent": {
                "required": [
                    "action",
                    "caption",
                    "text",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "action": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "url": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageLiveChatInboundContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 3000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImagemapAction": {
                "required": [
                    "area"
                ],
                "type": "object",
                "properties": {
                    "area": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Area"
                    },
                    "type": {
                        "enum": [
                            "URI",
                            "MESSAGE"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "URI": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UriImagemapAction",
                        "MESSAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageImagemapAction"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Checkbox": {
                "required": [
                    "checkboxText",
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isRequired": {
                                "type": "boolean"
                            },
                            "isHidden": {
                                "type": "boolean"
                            },
                            "checkboxText": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "BUTTON_LIST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButtonListContent",
                        "TERMINATE_SESSION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamTerminateSessionContent"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.binary.BinaryContent": {
                "title": "BinaryContent",
                "required": [
                    "hex"
                ],
                "type": "object",
                "properties": {
                    "dataCoding": {
                        "type": "integer",
                        "description": "Binary content data coding. The default value is (`0`) for GSM7. Example: (`8`) for  Unicode data.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "esmClass": {
                        "type": "integer",
                        "description": "“Esm_class” parameter. Indicate special message attributes associated with the SMS. Default value is (`0`).",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "hex": {
                        "type": "string",
                        "description": "Hexadecimal string. This is the representation of your binary data. Two hex digits represent one byte. They should be separated by the space character (Example: `0f c2 4a bf 34 13 ba`).",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PostTwitterTweetMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommentOnTwitterTweetMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.WaitingStrategyCli": {
                "required": [
                    "maximumWaitTime",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique id of the waiting strategy.",
                        "readOnly": true
                    },
                    "didNumbers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "DID numbers attached to the waiting strategy."
                        },
                        "description": "DID numbers attached to the waiting strategy."
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Ids of WebRTC applications attached to the waiting strategy."
                        },
                        "description": "Ids of WebRTC applications attached to the waiting strategy."
                    },
                    "name": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Waiting strategy name."
                    },
                    "maximumWaitTime": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.Duration"
                    },
                    "greetingMessage": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.OptionWithFileOrTtsAudioSource"
                    },
                    "musicOnHold": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.OptionWithFileAudioSource"
                    },
                    "announcementMessage": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.OptionWithPeriodicCollectCli"
                    },
                    "maximumWaitTimeMessage": {
                        "$ref": "#/components/schemas/infobip-ccca.openapi.OptionWithFileOrTtsAudioSource"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "version": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "example": {
                    "name": "New Waiting Strategy",
                    "maximumWaitTime": {
                        "unit": "SECONDS",
                        "value": "10000"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.persons.batch.model.BatchOperationRequest": {
                "title": "BatchOperationRequest",
                "type": "object",
                "properties": {
                    "people": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of people"
                    }
                }
            },
            "infobip-recording-amg.openapi.BulkDeleteRequestModel": {
                "required": [
                    "ids"
                ],
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of recording ids."
                        },
                        "description": "List of recording ids."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "Optional field that determines the type of file to be deleted. Possible values are **SOURCE**, **DOWNLOAD**, **BOTH**. If not set, the default value is **BOTH** ."
                    }
                }
            },
            "infobip-omni.openapi.To": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "description": "Destination phone number. Phone numbers must be in international format (example: `41793026727`)."
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "Destination email address."
                    },
                    "pushRegistrationId": {
                        "type": "string",
                        "description": "Unique ID for push registration."
                    }
                },
                "description": "The message destination address."
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveBodyWhatsAppContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.SuggestionResponseGbmMoContent": {
                "required": [
                    "context",
                    "postbackData",
                    "suggestionType",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "postbackData": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "suggestionType": {
                                "enum": [
                                    "ACTION",
                                    "REPLY"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CardRcsContent": {
                "required": [
                    "alignment",
                    "content",
                    "orientation"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "orientation": {
                                "enum": [
                                    "HORIZONTAL",
                                    "VERTICAL"
                                ],
                                "type": "string"
                            },
                            "alignment": {
                                "enum": [
                                    "LEFT",
                                    "RIGHT"
                                ],
                                "type": "string"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.tags.model.BatchTagRequest": {
                "title": "BatchTagRequest",
                "type": "object",
                "properties": {
                    "people": {
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.tags.model.BatchTagEntry"
                        },
                        "description": "List of people. Maximum `1000` entries"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DocumentContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveDataMessage": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "style": {
                        "enum": [
                            "icon",
                            "small",
                            "large"
                        ],
                        "type": "string"
                    },
                    "title": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "subtitle": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "imageIdentifier": {
                        "type": "string"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "text": {
                        "type": "string",
                        "description": "Error description",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.ApiReport": {
                "title": "ApiReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through callbackData field in Send PUSH notifications or Send bulk PUSH notifications API methods."
                    },
                    "channel": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.ipcore.acceptor.model.omni.OMNIChannel"
                            }
                        ],
                        "description": "OMNI Channel."
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the message was finished processing by Infobip (ie. delivered to destination, delivered to destination network, etc.)",
                        "format": "date-time"
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution."
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Information about country and network of the mobile device"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Price"
                            }
                        ],
                        "description": "Sent message price."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent. Has the following format: yyyy-MM-dd'T'HH:mm:ss.SSSZ.",
                        "format": "date-time"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status."
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address."
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.MessageCardMiMtApiContent": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message sender",
                        "example": "mySender"
                    },
                    "to": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message destination",
                        "example": "385977666618"
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.CardMiMtApiContent"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.SmsFailover"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Custom client's data that will be included in Delivery Report"
                    }
                }
            },
            "infobip-ccca.openapi.AgentWrapUp": {
                "required": [
                    "isActive",
                    "wrapUpSeconds"
                ],
                "type": "object",
                "properties": {
                    "wrapUpSeconds": {
                        "type": "integer",
                        "description": "Wrap up duration.",
                        "format": "int64"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Specifies whether the wrap up is activated."
                    }
                },
                "example": {
                    "wrapUpSeconds": 30,
                    "isActive": true
                }
            },
            "infobip-recording-amg.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-recording-amg.openapi.ApiRequestError"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateBodyContent": {
                "required": [
                    "placeholders"
                ],
                "type": "object",
                "properties": {
                    "placeholders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Template's parameters values ordered as registered in the template. The value must not be null, but can be an empty array if the template was registered without placeholders. Values within the array must not be null or empty."
                        },
                        "description": "Template's parameters values ordered as registered in the template. The value must not be null, but can be an empty array if the template was registered without placeholders. Values within the array must not be null or empty."
                    }
                },
                "description": "Template body."
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateQuickReplyButtonContent": {
                "required": [
                    "parameter"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateButtonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parameter": {
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string",
                                "description": "Payload of a `quick reply` button."
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.sms.mo.reports.MoReport": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Unique SMS ID.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The recipient number.",
                        "writeOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Received message content.",
                        "writeOnly": true
                    },
                    "cleanText": {
                        "type": "string",
                        "description": "Text of received message without a keyword (if a keyword was sent).",
                        "writeOnly": true
                    },
                    "keyword": {
                        "type": "string",
                        "description": "Keyword extracted from the message text.",
                        "writeOnly": true
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Date and time when Infobip received the message.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "Long SMS messages have a character limit on how much can be sent over one message.\n\nLonger messages will be split up into multiple messages and sent separately.\n\nThis is the total count of messages one SMS was sent over.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Price of the sent SMS.",
                        "writeOnly": true
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "The callback data sent through the callbackData field in your fully featured SMS message.",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Template header. Should be defined, only if placeholders or media have been registered in the template's header.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateTextHeaderContent",
                        "DOCUMENT": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateDocumentHeaderContent",
                        "IMAGE": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateImageHeaderContent",
                        "VIDEO": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateVideoHeaderContent",
                        "LOCATION": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateLocationHeaderContent"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.CallNumberAction": {
                "required": [
                    "content",
                    "phoneNumber",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "pattern": "\\+?\\d{5,15}",
                                "type": "string",
                                "description": "Phone number.",
                                "example": "+48123456789"
                            },
                            "content": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string",
                                "description": "Action content.",
                                "example": "Example content"
                            }
                        }
                    }
                ],
                "description": "Action of calling a given phone number."
            },
            "infobipamgnumbersapi.openapi.HttpForwardAction": {
                "required": [
                    "httpMethod",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "httpMethod": {
                                "enum": [
                                    "GET",
                                    "POST"
                                ],
                                "type": "string"
                            },
                            "contentType": {
                                "enum": [
                                    "JSON",
                                    "XML"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotOpenUrlSettings": {
                "type": "object",
                "properties": {
                    "actionPredefinedUrl": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "customTitle": {
                        "maxLength": 15,
                        "minLength": 0,
                        "type": "string"
                    },
                    "mediaPlayer": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotOpenUrlSettingsMediaPlayer"
                    },
                    "titleType": {
                        "enum": [
                            "DOMAIN",
                            "DEFAULT"
                        ],
                        "type": "string"
                    },
                    "actionButton": {
                        "enum": [
                            "FORWARD",
                            "SEND",
                            "OPEN_EXTERNALLY",
                            "SEND_TO_BOT",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "browserDisplayMode": {
                        "enum": [
                            "FULLSCREEN",
                            "FULLSCREEN_PORTRAIT",
                            "FULLSCREEN_LANDSCAPE",
                            "PARTIAL_SIZE"
                        ],
                        "type": "string"
                    },
                    "footerType": {
                        "enum": [
                            "DEFAULT",
                            "HIDDEN"
                        ],
                        "type": "string"
                    },
                    "actionReplyData": {
                        "type": "string"
                    },
                    "openUrlType": {
                        "enum": [
                            "INTERNAL",
                            "EXTERNAL"
                        ],
                        "type": "string"
                    },
                    "openUrlMediaType": {
                        "enum": [
                            "BROWSER_MEDIA",
                            "VIDEO",
                            "GIF",
                            "IMAGE"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CameraAction": {
                "required": [
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.VoiceAudioMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "caption": {
                                "type": "string",
                                "description": "Media Caption.",
                                "writeOnly": true
                            },
                            "url": {
                                "type": "string",
                                "description": "Url for media download.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.NotificationOptions": {
                "type": "object",
                "properties": {
                    "vibrationEnabled": {
                        "type": "boolean",
                        "description": "Notification vibration (Android only).",
                        "writeOnly": true
                    },
                    "soundEnabled": {
                        "type": "boolean",
                        "description": "Sound when notification arrives on a device.",
                        "writeOnly": true
                    },
                    "soundName": {
                        "type": "string",
                        "description": "Name of the custom sound played when notification arrives on a device. File should be located in the app with max 30 seconds length. File extension is required for iOS and optional for Android. For custom sound to be played soundEnabled shouldn’t be false (Example: `notification_sound.wav`). Check Android and iOS usage details.",
                        "writeOnly": true
                    },
                    "badge": {
                        "type": "integer",
                        "description": "Badge counter (iOS only).",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "URL of the image displayed in the notification. Rich push notifications are available on devices with iOS 10 and Android 4.1.+. Supported on iOS since MM SDK version 2.5.8. Supported on Android since MM SDK version 1.6.4.",
                        "writeOnly": true
                    },
                    "category": {
                        "type": "string",
                        "description": "Category id for actionable notification. Supported on Android since MM SDK version 1.6.16. Supported on iOS since MM SDK version 2.6.9. Predefined category ids: `mm_accept_decline` - Accept & Decline button actions.",
                        "writeOnly": true
                    },
                    "inAppStyle": {
                        "enum": [
                            "BANNER",
                            "MODAL"
                        ],
                        "type": "string",
                        "description": "Set to `MODAL` to use in app dialog for actionable message, or `BANNER` to show a standard banner view. `MODAL` is supported on iOS from 3.6.0, on Android from 1.13.0 and on Cordova from 0.7.0. `BANNER` is supported from iOS 5.0.0, Android 2.0.0 and Cordova 1.0.0",
                        "writeOnly": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Notification title displayed within notification. Requires iOS 10+ or Android 4.1+ (may depend on Android custom firmware)",
                        "writeOnly": true
                    },
                    "isSilent": {
                        "type": "boolean",
                        "description": "Set to `true` to send silent push message. Such messages aren’t displayed on device lock screen and in the notification center. Silent messages can be used to deliver custom data to your mobile application or to trigger an in-app notification.",
                        "writeOnly": true
                    },
                    "webViewUrl": {
                        "type": "string",
                        "description": "URL to open external web page within the mobile app (web view).",
                        "writeOnly": true
                    }
                },
                "description": "Options on how to alert the user when the Push message is received.",
                "writeOnly": true
            },
            "infobipwhatsappstandaloneapiservice.openapi.ImageMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ImageContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobippushko.openapi.voip.reports.v1.VoiceReport": {
                "title": "VoiceReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID."
                    },
                    "from": {
                        "type": "string",
                        "description": "Phone number to be presented as caller ID. Only numeric format allowed."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination phone number."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the Voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through callbackData field in fully featured Voice message."
                    },
                    "voiceCall": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.reports.v1.VoiceData"
                            }
                        ],
                        "description": "Data about voice call resulted from the message."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Price"
                            }
                        ],
                        "description": "Sent Voice message price."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example"
                        }
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DocumentWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveSectionContent": {
                "required": [
                    "rows"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Title of the section. Required if the message has more than one section."
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveRowContent"
                        },
                        "description": "Array of rows sent in the section. Section must contain at least one row. Message can have up to ten rows."
                    }
                },
                "description": "Array of sections in the list."
            },
            "mobile-identity-service.openapi.ErrorDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "format": "int32",
                        "example": 200
                    },
                    "name": {
                        "type": "string",
                        "description": "Error code",
                        "example": "EC_INVALID_REQUEST"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "example": "Validation failed for requested arguments"
                    }
                },
                "description": "Error object, present only if an error has occurred",
                "nullable": true
            },
            "infobippushko.openapi.voip.reports.v0.VoiceReport": {
                "title": "VoiceReport",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination number."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the Voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the Voice message was processed by Infobip. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was established and started ringing."
                    },
                    "answerTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was answered."
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Tells when the Voice message call was ended."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the Voice message call, in seconds.",
                        "format": "int32"
                    },
                    "fileDuration": {
                        "type": "number",
                        "description": "Duration of the Voice message audio file, in seconds.",
                        "format": "double"
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through callbackData field in fully featured Voice message."
                    },
                    "dtmfCodes": {
                        "type": "string",
                        "description": "DTMF code entered by user. Can be empty string, if user did not press anything, or `null` in case of IVR if user did not participate in Collect action."
                    },
                    "dtmfCodesAsJson": {
                        "type": "string",
                        "description": "DTMF code entered by user, but in JSON form - including DTMF variable names."
                    },
                    "transcribedAudioFileUrl": {
                        "type": "string",
                        "description": "Url to retrieve call transcription that were made by messages with the transcribe feature activated."
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "ID of IVR scenario."
                    },
                    "scenarioName": {
                        "type": "string",
                        "description": "Name of IVR scenario."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Price"
                            }
                        ],
                        "description": "Sent Voice message price."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example"
                        }
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.voip.tts.v3.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example"
                        }
                    }
                }
            },
            "infobippushko.openapi.rcs.mo.reports.LocationMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.Type"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Latitude. The value must be between -180 and 180.",
                        "format": "double",
                        "writeOnly": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude. The value must be between -90 and 90.",
                        "format": "double",
                        "writeOnly": true
                    }
                }
            },
            "infobip-iot-siman-interchange.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-iot-siman-interchange.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ivr.v1.model.IvrMessage": {
                "title": "IvrMessage",
                "required": [
                    "destinations",
                    "scenarioId"
                ],
                "type": "object",
                "properties": {
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters."
                    },
                    "deliveryTimeWindow": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryTimeWindow"
                            }
                        ],
                        "description": "Scheduling object that allows setting up detailed time windows in which the message can be sent. Consists of from, to and days properties. Days property is mandatory. From and to properties should be either both included, to allow finer time window granulation or both omitted, to include whole days in the delivery time window. Note: delivery time window is set in UTC timezone."
                    },
                    "destinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Destination"
                        },
                        "description": "Array of message destination addresses."
                    },
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID length should be between 3 and 14 characters."
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Can be `application/json` or `application/xml`."
                    },
                    "notifyContentVersion": {
                        "type": "integer",
                        "description": "Specifies the version of the report model to be sent. Can be `1` ([deprecated version 1](#programmable-communications/voice/receive-voice-delivery-reports-deprecated)) or `2` ([current version 2](#programmable-communications/voice/receive-voice-delivery-reports)). The default is version 2.",
                        "format": "int32"
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your callback server on which the Delivery report will be sent."
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The parameters that should be passed to the scenario on execution."
                    },
                    "pause": {
                        "type": "integer",
                        "description": "Indicating period of time in seconds between end user answering the call and message starting to be played. Minimal value is `0` and maximum value is `10` seconds. Default value is `0`.",
                        "format": "int32"
                    },
                    "record": {
                        "type": "boolean",
                        "description": "[Early access: Contact your account manager to enable the usage] Record the call and expose it to client as URL inside the delivery report. Can be `true` or `false`."
                    },
                    "retry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Retry"
                            }
                        ],
                        "description": "Used to define if the delivery of the Voice messages should be retried in case the first try doesn't succeed. Additional retries will be made according to the schedule defined by _minPeriod_ and _maxPeriod_ parameters and platform's internal retry logic. If the _minPeriod_ differs _maxPeriod_, delivery will be retried in the following manner: after 1 min, 2 min, 5 min, 10 min, 20 min, 30 min, 1 hour, 2 hours, 4 hours, 8 hours, 16 hours, 24 hours or until maxPeriod is reached.  If the retry attempt for the _maxPeriod_ is reached, the _maxPeriod_ will be used for all subsequent retries. If the _minPeriod_ and the _maxPeriod_ are defined as equal values, the period of time between retries will be equal to this value. Message delivery will be retried until the successful delivery or message validity or _maxCount_ value is reached."
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "Scenario key."
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Used for scheduled Voice messages (message not to be sent immediately, but at scheduled time).",
                        "format": "date-time"
                    },
                    "sendingSpeed": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.SendingSpeed"
                            }
                        ],
                        "description": "Sending rate defined in number of messages sent per second, minute, hour or day. First message will be sent immediately (or at _sendAt_ time if scheduling is used) and subsequent messages will be sent respecting defined speed. For example, if _sendingSpeed_ is defined as 10 messages per hour, messages will be sent every 6 minutes. If this parameter is defined, _validityPeriod_ is ignored."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period shown in minutes. When the period expires, it will not be allowed for the message to be sent. A validity period longer than 48h is not supported (in this case, it will be automatically set to 48h).",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MessageAction": {
                "required": [
                    "label",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsContent": {
                "required": [
                    "action",
                    "body"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveBodyContent"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsActionContent"
                    },
                    "header": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsHeaderContent"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveFooterContent"
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoExpiredSessionContent": {
                "required": [
                    "sentAt",
                    "sessionId"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sessionId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.EmailData": {
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "Message subject.",
                        "writeOnly": true
                    }
                },
                "description": "Email-specific data used if the message is sent through an email channel.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.QuickReplyWhatsAppMoContent": {
                "required": [
                    "payload",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "payload": {
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-forms.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.credentials.CredentialsResponse": {
                "type": "object",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The first part of the generate Authorization header."
                    },
                    "key": {
                        "type": "string",
                        "description": "Used to generate the second part of the Authorization header."
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.OrderIdentifier": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "Unique identifier used to track the status of your order.",
                        "example": "9a5ef974-58f5-4074-be1e-9c18fdb9501e"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent": {
                "type": "object",
                "properties": {
                    "intentGroupLocale": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.IntentGroupLocale"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "TYPING_INDICATOR",
                            "LIST_PICKER_RESPONSE",
                            "TIME_PICKER_RESPONSE",
                            "AUTHENTICATION_RESPONSE",
                            "APPLE_PAY_RESPONSE",
                            "CUSTOM_INTERACTIVE_RESPONSE",
                            "CLOSE_CONVERSATION",
                            "TAPBACK",
                            "QUICK_REPLY"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextAppleBusinessChatMoContent",
                        "TYPING_INDICATOR": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TypingIndicatorAppleBusinessChatMoContent",
                        "LIST_PICKER_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPickerAppleBusinessChatMoContent",
                        "TIME_PICKER_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TimePickerAppleBusinessChatMoContent",
                        "AUTHENTICATION_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AuthAppleBusinessChatMoContent",
                        "APPLE_PAY_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ApplePayAppleBusinessChatMoContent",
                        "CUSTOM_INTERACTIVE_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CustomInteractiveAppleBusinessChatMoContent",
                        "CLOSE_CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CloseConversationAppleBusinessChatMoContent",
                        "TAPBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TapbackAppleBusinessChatMoContent",
                        "QUICK_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.QuickReplyAppleBusinessChatMoContent"
                    }
                }
            },
            "infobippushko.openapi.rcs.mo.reports.TextMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.Type"
                    },
                    "text": {
                        "type": "string",
                        "description": "The text which is sent in an incoming message.",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.tags.IamTagV2": {
                "title": "IamTagV2",
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date and time of creation",
                        "readOnly": true
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "Date and time of last modification",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name, 256 characters max"
                    }
                }
            },
            "infobip-recording-amg.openapi.BulkDownloadResponseModel": {
                "type": "object",
                "properties": {
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-recording-amg.openapi.DownloadResponseModel"
                        },
                        "description": "List of recording download urls."
                    },
                    "failed": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of ids for which url generation failed."
                        },
                        "description": "List of ids for which url generation failed."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveActionButtonReplyWhatsAppContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveActionButtonWhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "title": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.RequestLocationSuggestion": {
                "required": [
                    "postbackData",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Video": {
                "type": "object",
                "properties": {
                    "originalContentUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "previewImageUrl": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "area": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Area"
                    },
                    "externalLink": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ExternalLink"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramUser": {
                "required": [
                    "id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Destination"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveVideoHeaderWhatsAppContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveHeaderWhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextFacebookMtQuickReply": {
                "required": [
                    "payload",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMtQuickReply"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "payload": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "imageUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotFileContent": {
                "required": [
                    "fileName",
                    "size",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fileName": {
                                "maxLength": 120,
                                "minLength": 0,
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "size": {
                                "maximum": 52428800,
                                "type": "integer",
                                "format": "int32"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterAccount"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FieldRequest": {
                "required": [
                    "isEnabled",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Field title."
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "MULTILINE",
                            "CHECKBOX",
                            "DROPDOWN",
                            "INTNUMBER",
                            "DECIMALNUMBER",
                            "REGEX",
                            "DATE",
                            "CARD"
                        ],
                        "type": "string",
                        "description": "Available field types."
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Is field enabled. Mandatory when updating."
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Available field options. Applicable only for DROPDOWN type."
                        },
                        "description": "Available field options. Applicable only for DROPDOWN type."
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regular expression. Applicable only for REGEX type."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmQuickReply": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextTwitterDmQuickReply"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.GenericTemplateElement": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "subtitle": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "defaultAction": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DefaultAction"
                    },
                    "buttons": {
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Button"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CommentOnTwitterTweetMoContent": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mentions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaMention"
                        }
                    },
                    "gif": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterGif"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "COMMENT",
                            "POST",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveReplyButtonContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string",
                                "description": "Unique identifier of the button."
                            },
                            "title": {
                                "maxLength": 20,
                                "minLength": 1,
                                "type": "string",
                                "description": "Unique title of the button. Does not allow emojis or markdown."
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.Address": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "Street name.",
                        "writeOnly": true
                    },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "writeOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State name.",
                        "writeOnly": true
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip value.",
                        "writeOnly": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Country name.",
                        "writeOnly": true
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code value.",
                        "writeOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of an address. Can be HOME, WORK.",
                        "writeOnly": true
                    }
                },
                "description": "Address information.",
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.TextRcsMoContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ListPickerItem": {
                "required": [
                    "identifier",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "imageIdentifier": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "style": {
                        "type": "string"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotUrlContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "senderDisplayInfo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo"
                            },
                            "keyboard": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboard"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ContactsWhatsAppContent": {
                "required": [
                    "contacts"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contacts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MtContact"
                                }
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.rcs.reports.dlr.Report": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.reports.dlr.Report"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "channel": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.api.models.RcsChannel"
                                    }
                                ],
                                "description": "Channel that was used for message delivering.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateLocationHeaderContent": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "description": "Latitude of a location sent in the header.",
                                "format": "double"
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "description": "Longitude of a location sent in the header.",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.ott.dlr.reports.ReportsResponse": {
                "title": "ottDlrReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.ott.reports.dlr.Report"
                        },
                        "description": "Collection of reports, one per every message.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimData": {
                "type": "object",
                "properties": {
                    "text": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the message.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "templateCode": {
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string",
                        "description": "Code of the template. Max 30 characters.",
                        "writeOnly": true
                    },
                    "buttons": {
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                        },
                        "description": "Buttons to include in the message. Optional value. Max 5 buttons.",
                        "writeOnly": true
                    },
                    "title": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Title of the message.",
                        "writeOnly": true
                    }
                },
                "description": "Kakao AlimTalk-specific data used if the message is sent through a Kakao AlimTalk channel.",
                "writeOnly": true
            },
            "infobip-ccaas-disposition.openapi.TriggerResultPage": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Trigger"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Pagination"
                    }
                },
                "example": {
                    "items": [
                        {
                            "id": "b3695d3c-6415-4bdd-82fc-07f9309933ec",
                            "title": "AJ Queue",
                            "expression": {
                                "$neq": {
                                    "queue": "AJ Queue"
                                }
                            },
                            "orderIndex": 5,
                            "isEnabled": true,
                            "formId": "75f57446-1d65-478a-87ed-22d17dc3d077",
                            "timesTriggered": 149
                        },
                        {
                            "id": "bef60d38-98fa-4c14-b40e-34918b399964",
                            "title": "Feedback form triggers",
                            "expression": {
                                "$or": [
                                    {
                                        "$eq": {
                                            "queue": "Default queue"
                                        }
                                    },
                                    {
                                        "$and": [
                                            {
                                                "$eq": {
                                                    "customer.country": "Croatia"
                                                }
                                            },
                                            {
                                                "$eq": {
                                                    "company.name": "AAA Infotek"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "orderIndex": 1,
                            "isEnabled": true,
                            "formId": "90a91386-6e6d-44da-889f-783705cec020",
                            "timesTriggered": 245
                        }
                    ],
                    "pagination": {
                        "totalItems": 2,
                        "page": 0,
                        "limit": 10,
                        "orderBy": {
                            "property": "id",
                            "direction": "ASC"
                        }
                    }
                }
            },
            "infobip-ccaas-web-froms.openapi.StatusCodeResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.BubbleFlexContainer": {
                "required": [
                    "direction"
                ],
                "type": "object",
                "properties": {
                    "direction": {
                        "enum": [
                            "LEFT_TO_RIGHT",
                            "RIGHT_TO_LEFT"
                        ],
                        "type": "string"
                    },
                    "header": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BoxComponent"
                    },
                    "hero": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ImageComponent"
                    },
                    "body": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BoxComponent"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BoxComponent"
                    },
                    "styles": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ComponentStyle"
                    },
                    "type": {
                        "enum": [
                            "BUBBLE",
                            "CAROUSEL"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonGrid": {
                "required": [
                    "buttons"
                ],
                "type": "object",
                "properties": {
                    "buttons": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButton"
                        }
                    },
                    "buttonsGroupColumns": {
                        "maximum": 6,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "buttonsGroupRows": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonsActionContent": {
                "required": [
                    "buttons"
                ],
                "type": "object",
                "properties": {
                    "buttons": {
                        "maxItems": 3,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonContent"
                        },
                        "description": "Array of buttons sent in the message. It can have up to three buttons."
                    }
                },
                "description": "Message action."
            },
            "infobip-ccaas-conversation-service.openapi.DocumentTelegramMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.BoxComponent": {
                "required": [
                    "contents",
                    "layout"
                ],
                "type": "object",
                "properties": {
                    "layout": {
                        "enum": [
                            "HORIZONTAL",
                            "VERTICAL",
                            "BASELINE"
                        ],
                        "type": "string"
                    },
                    "flex": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "spacing": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "margin": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                    },
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT"
                        ],
                        "type": "string"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Component"
                        }
                    }
                },
                "discriminator": {
                    "propertyName": "layout",
                    "mapping": {
                        "HORIZONTAL": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalBoxComponent",
                        "VERTICAL": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalBoxComponent",
                        "BASELINE": "#/components/schemas/infobip-omni.openapi.BaselineBoxComponent"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.UrlButtonApiData": {
                "required": [
                    "text",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ButtonApiData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "URL to which the end-user will be directed when hitting the button. URL is expected to start with `https://` or `http://`. Can be static or dynamic. For dynamic URL registration, add a placeholder {{1}} at the end of the link. Example: `https://www.infobip.com/{{1}}`"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AudioTelegramMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "caption": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramPostMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "POST",
                            "DEAUTHORIZE"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextInstagramPostMoContent",
                        "POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostInstagramPostMoContent",
                        "DEAUTHORIZE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DeauthorizeInstagramPostMoContent"
                    }
                }
            },
            "infobip-recording-amg.openapi.PageInfo": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalResults": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "infobip-omni.openapi.Destination": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "to": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.To"
                    }
                },
                "description": "Destinations to which you are sending a message, such as phone number, email address, or unique ID.",
                "writeOnly": true
            },
            "infobip-omni.openapi.KakaoChinguMessageDeliveryButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguButton"
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.SimStatus": {
                "enum": [
                    "Imported",
                    "Activation Ready",
                    "Active",
                    "Suspended",
                    "Deactivated"
                ],
                "type": "string",
                "description": "SIM card status",
                "example": "Active"
            },
            "infobip-ccaas-conversation-service.openapi.StoryMentionInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.InstagramBusinessAccount": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipamgnumbersapi.openapi.MoConfiguration": {
                "required": [
                    "action"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "keyword": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoAction"
                    },
                    "useConversation": {
                        "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.UseConversation"
                    },
                    "otherActions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of other configured actions on this keyword. Ignored in POST/PUT calls."
                        },
                        "description": "List of other configured actions on this keyword. Ignored in POST/PUT calls."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CallsOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PushRequestNotificationOptions": {
                "title": "PushRequestNotificationOptions",
                "type": "object",
                "properties": {
                    "badge": {
                        "type": "integer",
                        "description": "Badge counter (iOS only).",
                        "format": "int32"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category id for actionable notification. Supported on [Android](https://github.com/infobip/mobile-messaging-sdk-android/wiki/Interactive-notifications) since MM SDK version 1.6.16. Supported on [iOS](https://github.com/infobip/mobile-messaging-sdk-ios/wiki/Interactive-Notifications) since MM SDK version 2.6.9. Predefined category ids: mm_accept_decline - Accept & Decline button actions."
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "URL of the image displayed in the notification. Rich push notifications are available on devices with [iOS](https://github.com/infobip/mobile-messaging-sdk-ios/wiki/Rich-notifications) 10 and [Android](https://github.com/infobip/mobile-messaging-sdk-android/wiki/Rich-notifications) 4.1.+. Supported on iOS since MM SDK version 2.5.8. Supported on Android since MM SDK version 1.6.4."
                    },
                    "inAppDismissTitle": {
                        "type": "string",
                        "description": "Specifies custom title for `Dismiss` button. Supported on Android since version 3.4.0, on iOS since version 8.2.1."
                    },
                    "inAppExpirationPeriod": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Sets validity period for in-app notification. Users will only see in-app if they received it to their device within validity period, which starts from sending time. Time unit for this parameter is set by property of inAppExpirationTimeUnit. Default value is 48h. Supported on Android since version 3.4.0, on iOS since version 8.2.1",
                        "format": "int64"
                    },
                    "inAppExpirationTimeUnit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.InAppExpirationTimeUnit"
                            }
                        ],
                        "description": "Time unit for in-app expiration."
                    },
                    "inAppOpenTitle": {
                        "type": "string",
                        "description": "Specifies custom title for `Open` button. Supported on Android since version 3.4.0, on iOS since version 8.2.1."
                    },
                    "inAppStyle": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.message.InAppStyle"
                            }
                        ],
                        "description": "Set to `MODAL` to use in app dialog for actionable message or `BANNER` to show a standard banner view. `MODAL` is supported on iOS from [3.6.0](https://github.com/infobip/mobile-messaging-sdk-ios/releases/tag/3.6.0), on Android from [1.13.0](https://github.com/infobip/mobile-messaging-sdk-android/releases/tag/1.13.0) and on Cordova from [0.7.0](https://github.com/infobip/mobile-messaging-cordova-plugin/releases/tag/0.7.0). `BANNER` is supported from iOS [5.0.0](https://github.com/infobip/mobile-messaging-sdk-ios/releases/tag/5.0.0), Android [2.0.0](https://github.com/infobip/mobile-messaging-sdk-android/releases/tag/2.0.0) and Cordova [1.0.0](https://github.com/infobip/mobile-messaging-cordova-plugin/releases/tag/1.0.0)"
                    },
                    "isSilent": {
                        "type": "boolean",
                        "description": "Set to true to send silent push message. Such messages aren’t displayed on device lock screen and in the notification center. Silent messages can be used to deliver custom data to your mobile application or to trigger an in-app notification."
                    },
                    "primaryButtonAction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PrimaryButtonAction"
                            }
                        ],
                        "description": "Defines which action to perform on notification tap or on in-app notification primary button tap. More information for [Android](https://github.com/infobip/mobile-messaging-sdk-android/wiki/How-to-define-specific-action-on-notification-or-in-app-primary-button-tap(open-url,-deeplink)%3F), [iOS](https://github.com/infobip/mobile-messaging-sdk-ios/wiki/How-to-define-specific-action-on-notification-or-in-app-primary-button-tap(open-url,-deeplink)%3F), [Cordova](https://github.com/infobip/mobile-messaging-cordova-plugin/wiki/How-to-define-specific-action-on-notification-or-in-app-primary-button-tap(open-url,-deeplink)%3F), [React Native](https://github.com/infobip/mobile-messaging-react-native-plugin/wiki/How-to-define-specific-action-on-notification-or-in-app-primary-button-tap(open-url,-deeplink)%3F)."
                    },
                    "showInApp": {
                        "type": "boolean",
                        "description": "Show notification in application."
                    },
                    "soundEnabled": {
                        "type": "boolean",
                        "description": "Sound when notification arrives on a device."
                    },
                    "soundName": {
                        "type": "string",
                        "description": "Name of the custom sound played when notification arrives on a device. File should be located in the app with max 30 seconds length. File extension is required for [iOS](https://github.com/infobip/mobile-messaging-sdk-ios/wiki/How-to-use-custom-notification-sound%3F) and optional for [Android](https://github.com/infobip/mobile-messaging-sdk-android/wiki/How-to-use-custom-notification-sound%3F). For custom sound to be played soundEnabled shouldn’t be false (Example: notification_sound.wav). Check Android and iOS usage details."
                    },
                    "title": {
                        "type": "string",
                        "description": "Notification title displayed within notification. Requires iOS 10+ or Android 4.1+ (may depend on Android custom firmware)"
                    },
                    "vibrationEnabled": {
                        "type": "boolean",
                        "description": "Notification vibration (Android only)."
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action": {
                "title": "Action",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.Action.Companion"
                            }
                        ]
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "String that will be forwarded alongside the usual fields posted to forwardUrl."
                    },
                    "forwardUrl": {
                        "type": "string",
                        "description": "URL that the received message will be forwarded to."
                    },
                    "key": {
                        "type": "string",
                        "description": "Action key."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionType"
                            }
                        ],
                        "description": "Action type."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ContactsContent": {
                "required": [
                    "contacts"
                ],
                "type": "object",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ContactContent"
                        },
                        "description": "Array of contacts sent in the WhatsApp message."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.VideoContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "properties": {
                    "mediaUrl": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of a video sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported video types are `MP4`, `3GPP`. Maximum video size is 16MB."
                    },
                    "caption": {
                        "maxLength": 3000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Caption of the video."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.ZaloSender": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SendingSpeedLimit": {
                "title": "SendingSpeedLimit",
                "required": [
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "The number of messages to send per time unit. By default, Infobip sends your messages as fast as the infrastructure allows. Use this parameter to reduce the traffic if you find the default sending speed too fast for your use case. Note that boosting this parameter will not result in faster sending speeds beyond infrastructure capabilities.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "timeUnit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SpeedLimitTimeUnit"
                            }
                        ],
                        "description": "The time unit in which the defined message amount will be sent. The default value is `MINUTE`.",
                        "writeOnly": true
                    }
                }
            },
            "infobipwhatsappgatewayservice.openapi.MarkAsReadErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error details"
                    }
                }
            },
            "infobip-omni.openapi.Phone": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string",
                        "description": "Phone of  contact.",
                        "writeOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a phone. Can be CELL, MAIN, IPHONE, HOME, WORK.",
                        "writeOnly": true
                    },
                    "waId": {
                        "type": "string",
                        "description": "WhatsApp ID.",
                        "writeOnly": true
                    }
                },
                "description": "Phone information.",
                "writeOnly": true
            },
            "infobip-forms.openapi.FormDataPayloadMap": {
                "type": "object",
                "additionalProperties": {
                    "type": "object",
                    "description": "Field name and its value"
                },
                "description": "Field name and its value"
            },
            "infobip-ccaas-conversation-service.openapi.AudioFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.BlockStyle": {
                "type": "object",
                "properties": {
                    "backgroundColor": {
                        "type": "string"
                    },
                    "separator": {
                        "type": "boolean"
                    },
                    "separatorColor": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.Organization": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string",
                        "description": "Company name.",
                        "writeOnly": true
                    },
                    "department": {
                        "type": "string",
                        "description": "Department name.",
                        "writeOnly": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Title value",
                        "writeOnly": true
                    }
                },
                "description": "Company information.",
                "writeOnly": true
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobippushko.openapi.infobip.api.models.OmniChannel": {
                "title": "OmniChannel",
                "enum": [
                    "WHATSAPP",
                    "VIBER",
                    "FACEBOOK",
                    "LINE",
                    "VK"
                ],
                "type": "string"
            },
            "infobip-email-api-amg.openapi.Price": {
                "type": "object",
                "properties": {
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per one email request."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    }
                },
                "description": "Sent email price."
            },
            "infobip-ccaas-conversation-service.openapi.BaseSize": {
                "required": [
                    "height",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "width": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "height": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.SimUsageResponse": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "Date of the record creation",
                                "example": "2020-01-30T00:00:00"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.UsageDataResponse"
                    }
                ],
                "description": "Single record in the specified range contains the usage recorded at the point in time given in the date field.\n"
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.StartAuthenticationResponse": {
                "title": "StartAuthenticationResponse",
                "type": "object",
                "properties": {
                    "callStatus": {
                        "type": "string",
                        "description": "Call status."
                    },
                    "ncStatus": {
                        "type": "string",
                        "description": "Status of sent Number Lookup. Number Lookup status can have one of the following values: `NC_DESTINATION_UNKNOWN`, `NC_DESTINATION_REACHABLE`, `NC_DESTINATION_NOT_REACHABLE`, `NC_NOT_CONFIGURED`. If you get the `NC_NOT_CONFIGURED` status, you should contact your Account Manager. SMS will not be sent only if Number Lookup status is `NC_NOT_REACHABLE`."
                    },
                    "pinId": {
                        "type": "string",
                        "description": "Sent PIN code ID."
                    },
                    "smsStatus": {
                        "type": "string",
                        "description": "Sent SMS status. Can have one of the following values: `MESSAGE_SENT`, `MESSAGE_NOT_SENT`."
                    },
                    "to": {
                        "type": "string",
                        "description": "Phone number to which the 2FA message will be sent. Example: `41793026727`."
                    }
                }
            },
            "infobip-forms.openapi.ApiFormDto": {
                "required": [
                    "elements",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Form identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Form name"
                    },
                    "elements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                        },
                        "description": "List of form fields"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time when form was created",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time when form was update last time",
                        "format": "date-time"
                    },
                    "actionAfterSubmission": {
                        "$ref": "#/components/schemas/infobip-forms.openapi.ActionAfterSubmission"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.bulks.status.UpdateStatusRequest": {
                "title": "UpdateStatusRequest",
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.bulks.status.BulkStatus"
                            }
                        ],
                        "description": "New status of the bulk."
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.customAttributes.CustomAttributesResponse": {
                "title": "CustomAttributesResponse",
                "type": "object",
                "properties": {
                    "customAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.customAttributes.IamCustomAttribute"
                        },
                        "description": "List of custom attributes"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Limit how many rows will be returned (but possibly less, if the query itself yields fewer rows)",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Results ordering"
                    },
                    "page": {
                        "type": "integer",
                        "description": "Page number",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total amount of rows",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.GcmData": {
                "title": "GcmData",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Equals true if sending messages via APNS is enabled for this application."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateImageHeaderContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of an image sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported image types are `JPG`, `JPEG`, `PNG`. Maximum image size is 5MB."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CarouselRcsContent": {
                "required": [
                    "cardWidth",
                    "contents"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cardWidth": {
                                "enum": [
                                    "SMALL",
                                    "MEDIUM"
                                ],
                                "type": "string"
                            },
                            "contents": {
                                "maxItems": 10,
                                "minItems": 2,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardContent"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CallContent": {
                "required": [
                    "agentId",
                    "status"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "enum": [
                                    "STARTED",
                                    "ESTABLISHED",
                                    "FINISHED",
                                    "TRANSFERRED",
                                    "INITIALIZED",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "agentId": {
                                "type": "string"
                            },
                            "startedAt": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "establishedAt": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "finishedAt": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "finishedCode": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "queueName": {
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "CALL"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundContent"
                    }
                ]
            },
            "infobippushko.openapi.voip.tts.v3.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error."
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "quickReply": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoQuickReply"
                            },
                            "replyTo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyTo"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TwitterDmMoQuickReply": {
                "type": "object",
                "properties": {
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Conversation": {
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Conversation ID.",
                        "readOnly": true
                    },
                    "topic": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Conversation topic."
                    },
                    "summary": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Short description of the conversation."
                    },
                    "status": {
                        "enum": [
                            "OPEN",
                            "WAITING",
                            "SOLVED",
                            "CLOSED"
                        ],
                        "type": "string",
                        "description": "Conversation status.",
                        "default": "OPEN"
                    },
                    "priority": {
                        "enum": [
                            "URGENT",
                            "HIGH",
                            "NORMAL",
                            "LOW"
                        ],
                        "type": "string",
                        "description": "Conversation priority.",
                        "default": "NORMAL"
                    },
                    "queueId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Id of the queue conversation belongs to."
                    },
                    "agentId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Id of the agent assigned to the conversation."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time stamp when conversation is created.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time stamp when conversation is updated.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "closedAt": {
                        "type": "string",
                        "description": "If conversation is closed, time stamp when is closed.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "pendingSince": {
                        "type": "string",
                        "description": "Time stamp since last customers unanswered message in conversation.",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "example": {
                    "topic": "Demo topic.",
                    "summary": "This is a summary.",
                    "status": "OPEN",
                    "priority": "HIGH",
                    "queueId": "FBDDA7F8B33417374ACC02F5265527E6",
                    "agentId": "97457D13B1FC79AF3C1A1096AE7E77AB"
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationRcsMoContent": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                                "format": "double"
                            },
                            "longitude": {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ListPicker": {
                "required": [
                    "sections"
                ],
                "type": "object",
                "properties": {
                    "sections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListPickerSection"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ContactsWhatsAppMoContent": {
                "required": [
                    "contacts"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contacts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MoContact"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ButtonFacebookTemplatePayload": {
                "required": [
                    "buttons",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "buttons": {
                                "maxItems": 2147483647,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Button"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-web-froms.openapi.WebFormRequest": {
                "required": [
                    "channel",
                    "destination",
                    "enabled",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Web Form name."
                    },
                    "channel": {
                        "enum": [
                            "SMS",
                            "VIBER",
                            "FACEBOOK_MESSENGER",
                            "WHATSAPP",
                            "RCS",
                            "UNKNOWN",
                            "EMAIL",
                            "MULTICHANNEL",
                            "NO_CHANNEL",
                            "LIVE_CHAT",
                            "UNUSED",
                            "VOICE",
                            "VIDEO",
                            "APPLE_BUSINESS_CHAT",
                            "LINE",
                            "GOOGLE_BUSINESS_MESSAGES",
                            "TELEGRAM",
                            "CALLS",
                            "INTERNAL",
                            "FACEBOOK_POST",
                            "INSTAGRAM_POST",
                            "TWITTER_POST",
                            "VIBER_BOT",
                            "INSTAGRAM_MESSAGING",
                            "GOOGLE_PLAY"
                        ],
                        "type": "string",
                        "description": "Web Form channel."
                    },
                    "destination": {
                        "type": "string",
                        "description": "Web Form destination."
                    },
                    "url": {
                        "type": "string",
                        "description": "Web Form URL."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Web Form enable/disable toggle."
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of tag Ids used on the Web Form."
                        },
                        "description": "List of tag Ids used on the Web Form."
                    }
                },
                "example": {
                    "name": "Test WebForm",
                    "channel": "EMAIL",
                    "destination": "destination@email.test",
                    "url": "/ccaas/1/web-form/3c2d1ddf-ef0f-457e-88b1-3477f3e0952b/post",
                    "enabled": true
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SMSResponseDetails": {
                "title": "SMSResponseDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.ErrorInfo": {
                "title": "ErrorInfo",
                "type": "object",
                "properties": {
                    "cloud": {
                        "type": "integer",
                        "description": "Messages not delivered due to errors on APNS or FCM clouds. Happens due to transient errors on cloud services.",
                        "format": "int64"
                    },
                    "expired": {
                        "type": "integer",
                        "description": "Messages undelivered due to expired validity period. Indicates users who have disabled notifications on a specific Push application.",
                        "format": "int64"
                    },
                    "registration": {
                        "type": "integer",
                        "description": "Messages not delivered due to errors with non-valid registrations due to user uninstalling the app.",
                        "format": "int64"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.MultipleAlertResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Requested page number.",
                        "example": 20
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Page size limit.",
                        "example": 1
                    },
                    "alerts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.AlertResponse"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ConfirmLineTemplatePayload": {
                "required": [
                    "actions",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 240,
                                "minLength": 0,
                                "type": "string"
                            },
                            "actions": {
                                "maxItems": 2,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.reports.v1.VoiceData": {
                "title": "VoiceData",
                "type": "object",
                "properties": {
                    "answerTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was answered."
                    },
                    "chargedDuration": {
                        "type": "integer",
                        "description": "Charged duration of the call, in seconds.",
                        "format": "int32"
                    },
                    "dtmfCodes": {
                        "type": "string",
                        "description": "DTMF code entered by user. Can be empty string, if user did not press anything, or `null` in case of IVR if user did not participate in Collect action."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the call, in seconds.",
                        "format": "int32"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was ended."
                    },
                    "feature": {
                        "type": "string",
                        "description": "The name of the Infobip Voice service or feature."
                    },
                    "fileDuration": {
                        "type": "number",
                        "description": "Duration of the Voice message audio file, in seconds.",
                        "format": "double"
                    },
                    "ivr": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.reports.v1.IvrData"
                            }
                        ],
                        "description": "Fields representing details about IVR, if outbound IVR is being used. If the call was not IVR, the field will be null."
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was established and started ringing."
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.expire.UploadBody": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "The byte array of the voice file can be included instead of the file location URL.",
                            "format": "byte"
                        },
                        "description": "The byte array of the voice file can be included instead of the file location URL."
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of your voice file location. Max size of the file is 4MB. The acceptable file format is mp3."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.binary.SMSBinaryMessage": {
                "title": "SMSBinaryMessage",
                "type": "object",
                "properties": {
                    "binary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.binary.BinaryContent"
                            }
                        ]
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters.",
                        "writeOnly": true
                    },
                    "deliveryTimeWindow": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTimeWindow"
                            }
                        ],
                        "description": "Scheduling object that allows setting up detailed time windows in which the message can be sent. Consists of `from`, `to` and `days` properties. `Days` property is mandatory. `From` and `to` properties should be either both included, to allow finer time window granulation or both omitted, to include whole days in the delivery time window.",
                        "writeOnly": true
                    },
                    "destinations": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Destination"
                        }
                    },
                    "flash": {
                        "type": "boolean",
                        "description": "Can be `true` or `false`. If the value is set to `true`, a flash SMS will be sent. Otherwise, a normal SMS will be sent. The default value is `false`.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Represents a sender ID which can be alphanumeric or numeric. Alphanumeric sender ID length should be between 3 and 11 characters (Example: `CompanyName`). Numeric sender ID length should be between 3 and 14 characters.",
                        "writeOnly": true
                    },
                    "intermediateReport": {
                        "type": "boolean",
                        "description": "The real-time Intermediate delivery report that will be sent on your callback server. Can be `true` or `false`.",
                        "writeOnly": true
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Can be `application/json` or `application/xml`.",
                        "writeOnly": true
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your call back server on which the Delivery report will be sent.",
                        "writeOnly": true,
                        "externalDocs": {
                            "description": "Delivery report format",
                            "url": "/#programmable-communications/sms/receive-sent-sms-report"
                        }
                    },
                    "regional": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.RegionalOptions"
                            }
                        ],
                        "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Date and time when the message is to be sent. Used for scheduled SMS (SMS not sent immediately, but at the scheduled time). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period in minutes. When the period expires, it will not be allowed for the message to be sent. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h).",
                        "format": "int64",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookBodyContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "FACEBOOK_SENDER_ACTION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SenderActionFacebookContent",
                        "FACEBOOK_TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateFacebookContent"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.ReportsResponse.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "reportsResponse": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.ReportsResponse"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.TemplateStructureApiData": {
                "required": [
                    "body"
                ],
                "type": "object",
                "properties": {
                    "header": {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    },
                    "body": {
                        "type": "string",
                        "description": "Template body. Can be registered as plain text or text with placeholders. Placeholders have to be correctly formatted and in the correct order, regardless of other sections. Example: {{1}}, {{2}}, {{3}}...",
                        "example": "body {{1}} content"
                    },
                    "footer": {
                        "maxLength": 60,
                        "minLength": 0,
                        "type": "string",
                        "description": "Template footer. Plain text, up to 60 characters.",
                        "example": "footer"
                    },
                    "buttons": {
                        "maxItems": 3,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ButtonApiData"
                        },
                        "description": "Template buttons. Can be either up to 3 `quick reply` buttons or up to 2 `call to action` buttons. Call to action buttons must be unique in type."
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "MEDIA",
                            "UNSUPPORTED"
                        ],
                        "type": "string",
                        "readOnly": true
                    }
                },
                "description": "Template structure."
            },
            "infobip-ccaas-conversation-service.openapi.QuickReplyAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "quickReplySelectedItem",
                    "requestIdentifier"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "quickReplySelectedItem": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.QuickReplySelectedItem"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageLineMoContent": {
                "required": [
                    "moAttachment",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "moAttachment": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoAttachment"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.ICCID": {
                "type": "string",
                "description": "Unique identifier of a profile.",
                "example": "8944501704188849000"
            },
            "infobipapimanagementother.openapi.email.org.infobip.email.v1.send.ipcore.MessageStatus": {
                "title": "MessageStatus",
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.SocialPage": {
                "required": [
                    "externalId"
                ],
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplateApiResponse": {
                "title": "TemplateResponse",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Template ID.",
                        "example": "111"
                    },
                    "businessAccountId": {
                        "type": "integer",
                        "description": "Business account ID to which template belongs.",
                        "format": "int64",
                        "example": 222
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the template.",
                        "example": "template_name"
                    },
                    "language": {
                        "enum": [
                            "af",
                            "sq",
                            "ar",
                            "az",
                            "bn",
                            "bg",
                            "ca",
                            "zh_CN",
                            "zh_HK",
                            "zh_TW",
                            "hr",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "en_GB",
                            "en_US",
                            "et",
                            "fil",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "gu",
                            "ha",
                            "he",
                            "hi",
                            "hu",
                            "id",
                            "ga",
                            "it",
                            "ja",
                            "kn",
                            "kk",
                            "ko",
                            "lo",
                            "lv",
                            "lt",
                            "mk",
                            "ms",
                            "ml",
                            "mr",
                            "nb",
                            "fa",
                            "pl",
                            "pt_BR",
                            "pt_PT",
                            "pa",
                            "ro",
                            "ru",
                            "sr",
                            "sk",
                            "sl",
                            "es",
                            "es_AR",
                            "es_ES",
                            "es_MX",
                            "sw",
                            "sv",
                            "ta",
                            "te",
                            "th",
                            "tr",
                            "uk",
                            "ur",
                            "uz",
                            "vi",
                            "unknown"
                        ],
                        "type": "string",
                        "description": "Template language, one template with same name can have multiple transliterations.",
                        "example": "en"
                    },
                    "status": {
                        "enum": [
                            "APPROVED",
                            "IN_APPEAL",
                            "PENDING",
                            "REJECTED",
                            "PENDING_DELETION",
                            "DELETED",
                            "DISABLED"
                        ],
                        "type": "string",
                        "description": "Status of the template.",
                        "example": "APPROVED"
                    },
                    "category": {
                        "enum": [
                            "ACCOUNT_UPDATE",
                            "PAYMENT_UPDATE",
                            "PERSONAL_FINANCE_UPDATE",
                            "SHIPPING_UPDATE",
                            "RESERVATION_UPDATE",
                            "ISSUE_RESOLUTION",
                            "APPOINTMENT_UPDATE",
                            "TRANSPORTATION_UPDATE",
                            "TICKET_UPDATE",
                            "ALERT_UPDATE",
                            "AUTO_REPLY"
                        ],
                        "type": "string",
                        "description": "Category of the template.",
                        "example": "ACCOUNT_UPDATE"
                    },
                    "structure": {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.TemplateStructureApiData"
                    }
                },
                "description": "List of all templates for given sender."
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.ValidityPeriodTimeUnit": {
                "title": "ValidityPeriodTimeUnit",
                "enum": [
                    "SECONDS",
                    "MINUTES",
                    "HOURS"
                ],
                "type": "string"
            },
            "infobipzalozmsgatewayservice.openapi.MessageApiContent": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message sender.",
                        "example": "mySender"
                    },
                    "to": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message destination.",
                        "example": "385977666618"
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "effcdc6f-6766-485d-856e-3e928a0e23a6"
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.ApiContent"
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobipzalozmsgatewayservice.openapi.SmsFailover"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Custom client's data that will be included in Delivery Report."
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "Message failover validity period. Required if 'validityPeriodTimeUnit' is set. Validity period must be between 30 seconds and 2 days.",
                        "format": "int32",
                        "example": 5
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "Message failover validity period time unit. Required if 'validityPeriod' is set. Allowed values: SECONDS, MINUTES, HOURS, DAYS.",
                        "example": "MINUTES"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CommonContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "AUDIO",
                            "DOCUMENT",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent"
                    }
                }
            },
            "infobip-forms.openapi.SubmitButtonElement": {
                "required": [
                    "component",
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.OmniChannel": {
                "title": "OmniChannel",
                "enum": [
                    "SMS",
                    "EMAIL",
                    "VOICE",
                    "PUSH",
                    "VIBER",
                    "LINE",
                    "VKONTAKTE",
                    "WHATSAPP"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.Bot": {
                "required": [
                    "channel",
                    "destination",
                    "displayName",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "displayName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Bot name to be displayed."
                    },
                    "webhookUrl": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Webhook url the message will be forwarded to."
                    },
                    "destination": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Bot destination phone number, FB messenger ID or live chat widget ID."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Bot enable/disable toggle.",
                        "default": true
                    },
                    "messagePersistencePolicy": {
                        "enum": [
                            "PERSIST_ALL",
                            "PERSIST_NONE"
                        ],
                        "type": "string",
                        "description": "Message persistence policy. If set to PERSIST_NONE, messages exchanged between customers and bot will not be persisted to the database nor visible to agents once they take over the conversation.",
                        "default": "PERSIST_ALL"
                    },
                    "channel": {
                        "enum": [
                            "SMS",
                            "VIBER",
                            "FACEBOOK_MESSENGER",
                            "WHATSAPP",
                            "RCS",
                            "UNKNOWN",
                            "EMAIL",
                            "LIVE_CHAT",
                            "UNUSED",
                            "VOICE",
                            "VIDEO",
                            "APPLE_BUSINESS_CHAT",
                            "LINE",
                            "GOOGLE_BUSINESS_MESSAGES",
                            "TELEGRAM",
                            "CALLS",
                            "INTERNAL",
                            "VIBER_BOT",
                            "FACEBOOK_POST",
                            "INSTAGRAM_POST",
                            "TWITTER_POST",
                            "INSTAGRAM_MESSAGING",
                            "GOOGLE_PLAY",
                            "KAKAO_SANGDAM",
                            "TWITTER_DM"
                        ],
                        "type": "string"
                    },
                    "sessionTimeoutInSec": {
                        "maximum": 86400,
                        "minimum": 60,
                        "type": "integer",
                        "description": "Time elapsed from last client message, after which conversation will be closed. If not set, conversation will be closed after 24 hours.",
                        "format": "int64",
                        "default": 86400
                    },
                    "webhookHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "deprecated": true
                    },
                    "webhookEventUrl": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "webhookEventHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "example": {
                    "displayName": "My Whatsapp Bot",
                    "webhookUrl": "www.webhookurl.com/link1",
                    "destination": "447492263897",
                    "channel": "WHATSAPP",
                    "messagePersistencePolicy": "PERSIST_ALL",
                    "enabled": true,
                    "sessionTimeoutInSec": 120
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.common.PushResponse": {
                "title": "PushResponse",
                "type": "object",
                "properties": {
                    "bulks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.common.PushBulkResponse"
                        },
                        "description": "Array of push bulk responses"
                    }
                }
            },
            "infobip-push-services-helper.openapi.ContactInformationPhone": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ContactContent": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.AddressContent"
                        },
                        "description": "Array of addresses information."
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Date of birth in `YYYY-MM-DD` format."
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.EmailContent"
                        },
                        "description": "Array of emails information."
                    },
                    "name": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.NameContent"
                    },
                    "org": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.OrganizationContent"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.PhoneContent"
                        },
                        "description": "Array of phones information."
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.UrlContent"
                        },
                        "description": "Array of urls information."
                    }
                },
                "description": "Array of contacts sent in the WhatsApp message."
            },
            "infobipapimanagementother.openapi.accounts.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Box": {
                "required": [
                    "contents",
                    "layout"
                ],
                "type": "object",
                "properties": {
                    "layout": {
                        "enum": [
                            "HORIZONTAL",
                            "VERTICAL",
                            "BASELINE"
                        ],
                        "type": "string"
                    },
                    "backgroundColor": {
                        "type": "string"
                    },
                    "borderColor": {
                        "type": "string"
                    },
                    "borderWidth": {
                        "enum": [
                            "NONE",
                            "LIGHT",
                            "NORMLA",
                            "MEDIUM",
                            "SEMI_BOLD",
                            "BOLD"
                        ],
                        "type": "string"
                    },
                    "cornerRadius": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "width": {
                        "type": "string"
                    },
                    "height": {
                        "type": "string"
                    },
                    "flex": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "spacing": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "margin": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "paddingAll": {
                        "type": "string"
                    },
                    "paddingTop": {
                        "type": "string"
                    },
                    "paddingBottom": {
                        "type": "string"
                    },
                    "paddingStart": {
                        "type": "string"
                    },
                    "paddingEnd": {
                        "type": "string"
                    },
                    "position": {
                        "enum": [
                            "RELATIVE",
                            "ABSOLUTE"
                        ],
                        "type": "string"
                    },
                    "offsetTop": {
                        "type": "string"
                    },
                    "offsetBottom": {
                        "type": "string"
                    },
                    "offsetStart": {
                        "type": "string"
                    },
                    "offsetEnd": {
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                        }
                    },
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT",
                            "SPAN"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.accounts.CreateAccountRequest": {
                "title": "CreateAccountRequest",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the account to be created."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LineTemplatePayload": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BUTTONS",
                            "CONFIRM",
                            "CAROUSEL",
                            "IMAGE_CAROUSEL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BUTTONS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ButtonsLineTemplatePayload",
                        "CONFIRM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConfirmLineTemplatePayload",
                        "CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CarouselLineTemplatePayload",
                        "IMAGE_CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageCarouselLineTemplatePayload"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ButtonReplyWhatsAppMoContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "title": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.accounts.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Image": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "flex": {
                                "maximum": 10,
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "position": {
                                "enum": [
                                    "RELATIVE",
                                    "ABSOLUTE"
                                ],
                                "type": "string"
                            },
                            "offsetTop": {
                                "type": "string"
                            },
                            "offsetBottom": {
                                "type": "string"
                            },
                            "offsetStart": {
                                "type": "string"
                            },
                            "offsetEnd": {
                                "type": "string"
                            },
                            "align": {
                                "enum": [
                                    "START",
                                    "END",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "gravity": {
                                "enum": [
                                    "TOP",
                                    "BOTTOM",
                                    "CENTER"
                                ],
                                "type": "string"
                            },
                            "size": {
                                "enum": [
                                    "XXS",
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "XXXL",
                                    "XXXXL",
                                    "XXXXXL",
                                    "FULL"
                                ],
                                "type": "string"
                            },
                            "aspectRatio": {
                                "type": "string"
                            },
                            "aspectMode": {
                                "enum": [
                                    "COVER",
                                    "FIT"
                                ],
                                "type": "string"
                            },
                            "backgroundColor": {
                                "type": "string"
                            },
                            "action": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MoPhone": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waId": {
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.ListReplyWhatsAppMoContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "required": [
                            "id",
                            "title"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 200,
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the selected row."
                            },
                            "title": {
                                "maxLength": 24,
                                "minLength": 0,
                                "type": "string",
                                "description": "Title of the selected row."
                            },
                            "description": {
                                "maxLength": 72,
                                "minLength": 0,
                                "type": "string",
                                "description": "Description of the selected row."
                            }
                        }
                    }
                ]
            },
            "infobipwhatsapptemplatemanagement.openapi.ImageHeaderApiData": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    }
                ]
            },
            "infobipmiyuloregatewayservice.openapi.CopyStringAction": {
                "required": [
                    "content",
                    "textToCopy",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "textToCopy": {
                                "type": "string",
                                "description": "Text which will be copied.",
                                "example": "Example text to copy"
                            },
                            "content": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string",
                                "description": "Action content.",
                                "example": "Example content"
                            }
                        }
                    }
                ],
                "description": "Action of copying text to clipboard."
            },
            "infobipzalozmsgatewayservice.openapi.Status": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                }
            },
            "infobip-forms.openapi.PlainInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "fieldId": {
                                "type": "string",
                                "description": "Field identifier. It must be unique within the form."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            },
                            "personField": {
                                "type": "string",
                                "description": "Connect field to person attribute"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string",
                                "description": "Data type for person attribute"
                            },
                            "personFieldSubItemName": {
                                "type": "string",
                                "description": "Connect field to person attribute sub item name"
                            },
                            "isRequired": {
                                "type": "boolean",
                                "description": "Required field has to be filled with input or end users will not be able to submit the form."
                            },
                            "isHidden": {
                                "type": "boolean",
                                "description": "Hidden field is not visible to end users. The value can be filled by using an API submission. Use for profile attribution."
                            },
                            "staticValue": {
                                "type": "string",
                                "description": "This value is filled on every submit."
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "description": "Date of last element modification, null for old and unmodified data",
                                "format": "date-time"
                            },
                            "placeholder": {
                                "type": "string",
                                "description": "Input placeholder."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobip-push-services-helper.openapi.PushApiErrorResponse": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "infobip-email-validation-amg.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionRequest": {
                "title": "ActionRequest",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionRequest.Companion"
                            }
                        ]
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Optional. String that will be forwarded alongside the usual fields posted to forwardUrl."
                    },
                    "forwardUrl": {
                        "type": "string",
                        "description": "URL that the received message will be forwarded to."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.requests.ActionType"
                            }
                        ],
                        "description": "Constant value `HTTP_FORWARD` or `PULL`"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.OpenApplicationAction": {
                "required": [
                    "applicationDetails",
                    "content",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "applicationDetails": {
                                "maxItems": 3,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ApplicationDetails"
                                },
                                "description": "Details of the application to be opened. Each subsequent item is a fallback used in case the previous application opening attempt fails."
                            },
                            "content": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string",
                                "description": "Action content.",
                                "example": "Example content"
                            }
                        }
                    }
                ],
                "description": "Action of opening an Android application."
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateButtonContent": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "enum": [
                            "QUICK_REPLY",
                            "URL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "QUICK_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateQuickReplyButtonContent",
                        "URL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateDynamicUrlButtonContent"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.SimAlertResponse": {
                "type": "object",
                "properties": {
                    "iccid": {
                        "type": "string",
                        "description": "Unique ICCID identifier.",
                        "example": "8944501704188849000"
                    },
                    "limit": {
                        "type": "number",
                        "description": "SIM usage threshold for the alert trigger.",
                        "example": 500
                    }
                },
                "description": "Single record in the specified range contains the usage recorded at the point in time given in the date field.\n"
            },
            "infobip-ccaas-conversation-service.openapi.WorkingHours": {
                "required": [
                    "id",
                    "message",
                    "name",
                    "timezone",
                    "workWeek"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Working Hours ID.",
                        "readOnly": true
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone in which working hours apply.\n\n`TZ database name` from [IANA time zone database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                    },
                    "message": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Message to be sent as an auto-reply message to the customer."
                    },
                    "workWeek": {
                        "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                        ],
                        "type": "object",
                        "properties": {
                            "startTime": {
                                "maximum": 1440,
                                "minimum": 0,
                                "type": "integer",
                                "description": "Start time of the day in minutes after midnight.",
                                "format": "int32"
                            },
                            "endTime": {
                                "maximum": 1440,
                                "minimum": 0,
                                "type": "integer",
                                "description": "End time of the day in minutes before midnight.",
                                "format": "int32"
                            },
                            "enabled": {
                                "type": "boolean",
                                "description": "Daily working hours enable/disable toggle."
                            }
                        },
                        "description": "List of working hours work days.\n\nIt must contain all days of the week with 3 parameters each: `startTime`, `endTime` and `enabled`."
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Working hours name."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Working hours enable/disable toggle."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Default working hours."
                    },
                    "closeConversations": {
                        "type": "boolean",
                        "description": "Close conversation created outside of working hours toggle."
                    },
                    "holidays": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.HolidayWorkingHours"
                        },
                        "description": "List of working hours holidays."
                    }
                },
                "example": {
                    "id": "5C0F728E0BAC5EAA52B890336C969EAF",
                    "timezone": "Etc/UTC",
                    "message": "We're out of office, come back another time, thank you!",
                    "workWeek": {
                        "MONDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "TUESDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "WEDNESDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "THURSDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "FRIDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "SATURDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        },
                        "SUNDAY": {
                            "startTime": 0,
                            "endTime": 1440,
                            "enabled": true
                        }
                    },
                    "name": "My Working Hours",
                    "enabled": true,
                    "isDefault": true,
                    "closeConversations": false,
                    "holidays": [
                        {
                            "id": "B70BC38F59EAF2410D1FB329B847D463",
                            "workingHoursId": "5C0F728E0BAC5EAA52B890336C969EAF",
                            "name": "New Year's Day",
                            "startDate": "2021-01-01T00:00:00.0000000+01:00",
                            "endDate": "2021-01-01T00:00:00.0000000+01:00",
                            "enabled": true
                        },
                        {
                            "id": "316FD14C77CDE5EEE742E9C61DC46A19",
                            "workingHoursId": "5C0F728E0BAC5EAA52B890336C969EAF",
                            "name": "My Holiday",
                            "startDate": "2021-06-09T00:00:00.0000000+02:00",
                            "endDate": "2021-06-09T00:00:00.0000000+02:00",
                            "enabled": false
                        }
                    ]
                }
            },
            "infobipwhatsappgatewayservice.openapi.UrlDeletionRequest": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "URL of the WhatsApp media to be deleted.",
                        "example": "https://www.infobip.com/infobip-logo.png"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.NetworkMapResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page",
                        "example": 1
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page",
                        "example": 20
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.NetworkInformationResponse"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MoName": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "nameSuffix": {
                        "type": "string"
                    },
                    "namePrefix": {
                        "type": "string"
                    },
                    "formattedName": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.BubbleContainer": {
                "type": "object",
                "properties": {
                    "size": {
                        "enum": [
                            "NANO",
                            "MICRO",
                            "KILO",
                            "MEGA",
                            "GIGA"
                        ],
                        "type": "string"
                    },
                    "direction": {
                        "enum": [
                            "LEFT_TO_RIGHT",
                            "RIGHT_TO_LEFT"
                        ],
                        "type": "string"
                    },
                    "header": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Box"
                    },
                    "hero": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.HeroComponent"
                    },
                    "body": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Box"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Box"
                    },
                    "styles": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Style"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    "type": {
                        "enum": [
                            "BUBBLE",
                            "CAROUSEL"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.VideoLiveChatInboundContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            },
                            "caption": {
                                "maxLength": 3000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.EventTimeslot": {
                "required": [
                    "duration",
                    "identifier",
                    "startTime"
                ],
                "type": "object",
                "properties": {
                    "duration": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "identifier": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.Language": {
                "type": "object",
                "properties": {
                    "languageCode": {
                        "enum": [
                            "NONE",
                            "TR",
                            "ES",
                            "PT",
                            "AUTODETECT"
                        ],
                        "type": "string",
                        "description": "Code for language character set of a message text.",
                        "writeOnly": true
                    }
                },
                "description": "By setting the `languageCode` parameter you can send your language specific characters",
                "writeOnly": true
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateContent": {
                "required": [
                    "language",
                    "templateData",
                    "templateName"
                ],
                "type": "object",
                "properties": {
                    "templateName": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string",
                        "description": "Template name. Should contain only lowercase alphanumeric characters and underscores."
                    },
                    "templateData": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateDataContent"
                    },
                    "language": {
                        "type": "string",
                        "description": "The code of language or locale to use. It must be the same code with which the template was registered with."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.TextViberMoContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.AgentRecordingConfigCli": {
                "required": [
                    "agentId",
                    "mediaType"
                ],
                "type": "object",
                "properties": {
                    "agentId": {
                        "type": "string",
                        "description": "ID of the agent to which the recording configuration belongs.",
                        "readOnly": true
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Inbound record call direction enabled. At least one of the parameters 'inbound' or 'outbound' must be set to true. ",
                        "default": false
                    },
                    "outbound": {
                        "type": "boolean",
                        "description": "Outbound record call direction enabled. At least one of the parameters 'inbound' or 'outbound' must be set to true. ",
                        "default": false
                    },
                    "mediaType": {
                        "enum": [
                            "AUDIO",
                            "AUDIO_AND_VIDEO"
                        ],
                        "type": "string",
                        "description": "Specifies whether the recording should be done on audio or both audio and video."
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Use account recording config as default.",
                        "default": false
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "enabledChangedAt": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "example": {
                    "inbound": true,
                    "outbound": false,
                    "mediaType": "AUDIO",
                    "enabled": true
                }
            },
            "infobip-omni.openapi.FlexContainer": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BUBBLE",
                            "CAROUSEL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BUBBLE": "#/components/schemas/infobip-omni.openapi.BubbleFlexContainer",
                        "CAROUSEL": "#/components/schemas/infobip-omni.openapi.CarouselFlexContainer"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.IamGender": {
                "title": "IamGender",
                "enum": [
                    "MALE",
                    "FEMALE"
                ],
                "type": "string"
            },
            "infobip-ccaas-disposition.openapi.DispositionBasic": {
                "type": "object",
                "properties": {
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation id."
                    },
                    "formId": {
                        "type": "string",
                        "description": "Form id."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.DispositionFieldBasic"
                        },
                        "description": "A list of fields with values."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveRowContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifier of the row. It must be unique across all sections."
                    },
                    "title": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Title of the row."
                    },
                    "description": {
                        "maxLength": 72,
                        "minLength": 0,
                        "type": "string",
                        "description": "Description of the row."
                    }
                },
                "description": "Array of rows sent in the section. Section must contain at least one row. Message can have up to ten rows."
            },
            "infobip-omni.openapi.MediaTemplateBodyContent": {
                "required": [
                    "placeholders"
                ],
                "type": "object",
                "properties": {
                    "placeholders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Media template body placeholders. The value must not be null, but can be an empty array. Values within the array must not be null or empty.",
                            "writeOnly": true
                        },
                        "description": "Media template body placeholders. The value must not be null, but can be an empty array. Values within the array must not be null or empty.",
                        "writeOnly": true
                    }
                },
                "description": "Media template body",
                "writeOnly": true
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.textual.SMSTextualMessage": {
                "title": "SMSTextualMessage",
                "type": "object",
                "properties": {
                    "callbackData": {
                        "type": "string",
                        "description": "Additional client's data that will be sent on the notifyUrl. The maximum value is 200 characters.",
                        "writeOnly": true
                    },
                    "deliveryTimeWindow": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTimeWindow"
                            }
                        ],
                        "description": "Scheduling object that allows setting up detailed time windows in which the message can be sent. Consists of `from`, `to` and `days` properties. `Days` property is mandatory. `From` and `to` properties should be either both included, to allow finer time window granulation or both omitted, to include whole days in the delivery time window.",
                        "writeOnly": true
                    },
                    "destinations": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Destination"
                        }
                    },
                    "flash": {
                        "type": "boolean",
                        "description": "Can be `true` or `false`. If the value is set to `true`, a flash SMS will be sent. Otherwise, a normal SMS will be sent. The default value is `false`.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Represents a sender ID which can be alphanumeric or numeric. Alphanumeric sender ID length should be between 3 and 11 characters (Example: `CompanyName`). Numeric sender ID length should be between 3 and 14 characters.",
                        "writeOnly": true
                    },
                    "intermediateReport": {
                        "type": "boolean",
                        "description": "The real-time Intermediate delivery report that will be sent on your callback server. Can be `true` or `false`.",
                        "writeOnly": true
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.Language"
                            }
                        ]
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Can be `application/json` or `application/xml`.",
                        "writeOnly": true
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your call back server on which the Delivery report will be sent.",
                        "writeOnly": true,
                        "externalDocs": {
                            "description": "Delivery report format",
                            "url": "#channels/sms/receive-sent-sms-report"
                        }
                    },
                    "regional": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.RegionalOptions"
                            }
                        ],
                        "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
                    },
                    "sendAt": {
                        "type": "string",
                        "description": "Date and time when the message is to be sent. Used for scheduled SMS (SMS not sent immediately, but at the scheduled time). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "transliteration": {
                        "type": "string",
                        "description": "Conversion of a message text from one script to another. Possible values: `TURKISH`, `GREEK`, `CYRILLIC`, `SERBIAN_CYRILLIC`, `CENTRAL_EUROPEAN`, `BALTIC` and `NON_UNICODE`.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period in minutes. When the period expires, it will not be allowed for the message to be sent. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h).",
                        "format": "int64",
                        "writeOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryDay": {
                "title": "DeliveryDay",
                "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                ],
                "type": "string"
            },
            "infobippushko.openapi.whatsapp.Context": {
                "title": "Context",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "MessageId of the message that was quoted.",
                        "writeOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Number that sent quoted message.",
                        "writeOnly": true
                    }
                },
                "description": "Quoted message."
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatButtonContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            },
                            "buttonPayloads": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatButtonPayload"
                                }
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "VIDEO",
                                    "AUDIO",
                                    "LIVE_CHAT_BUTTON",
                                    "DOCUMENT",
                                    "SURVEY_REQUEST",
                                    "QUICK_REPLY",
                                    "CAROUSEL"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FormField": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Field"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "description": "Is a field mandatory"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.FieldCondition"
                        },
                        "description": "List of conditions"
                    }
                },
                "description": "List of fields attached to a form"
            },
            "infobip-ccaas-conversation-service.openapi.Dropdown": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isRequired": {
                                "type": "boolean"
                            },
                            "isHidden": {
                                "type": "boolean"
                            },
                            "placeholder": {
                                "type": "string"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InputOption"
                                }
                            },
                            "isMultipleSelect": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.send.response.VoiceResponse": {
                "title": "VoiceResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.response.VoiceResponseDetails"
                        },
                        "description": "Array of sent messages, one object per every message."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.ContactsMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.ContactsContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextInstagramMessagingQuickReply": {
                "required": [
                    "payload",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingQuickReply"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "title": {
                                "maxLength": 30,
                                "minLength": 0,
                                "type": "string"
                            },
                            "payload": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FacebookMoQuickReply": {
                "type": "object",
                "properties": {
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Action": {
                "required": [
                    "label"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "URI",
                            "POSTBACK",
                            "MESSAGE",
                            "DATETIMEPICKER",
                            "CAMERA",
                            "CAMERAROLL",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "URI": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UriAction",
                        "POSTBACK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PostbackAction",
                        "MESSAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageAction",
                        "DATETIMEPICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DatetimePickerAction",
                        "CAMERA": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CameraAction",
                        "CAMERAROLL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CameraRollAction",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationAction"
                    }
                }
            },
            "infobipapimanagementother.openapi.chat.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                            }
                        }
                    }
                ]
            },
            "infobip-forms.openapi.RadioButtonInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElementWithOptions"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "fieldId": {
                                "type": "string",
                                "description": "Field identifier. It must be unique within the form."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            },
                            "personField": {
                                "type": "string",
                                "description": "Connect field to person attribute"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string",
                                "description": "Data type for person attribute"
                            },
                            "personFieldSubItemName": {
                                "type": "string",
                                "description": "Connect field to person attribute sub item name"
                            },
                            "isRequired": {
                                "type": "boolean",
                                "description": "Required field has to be filled with input or end users will not be able to submit the form."
                            },
                            "isHidden": {
                                "type": "boolean",
                                "description": "Hidden field is not visible to end users. The value can be filled by using an API submission. Use for profile attribution."
                            },
                            "staticValue": {
                                "type": "string",
                                "description": "This value is filled on every submit."
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "description": "Date of last element modification, null for old and unmodified data",
                                "format": "date-time"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-forms.openapi.FormElementOption"
                                },
                                "description": "List of options for multiple select."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FacebookSocialData": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "postId": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "permalinkUrl": {
                        "type": "string"
                    },
                    "extCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamReplyWithTextButton": {
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string"
                            },
                            "extra": {
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotKeyboard": {
                "required": [
                    "buttonGrid"
                ],
                "type": "object",
                "properties": {
                    "buttonGrid": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonGrid"
                    },
                    "backgroundColor": {
                        "pattern": "^[#]([A-Fa-f0-9]{6})$",
                        "type": "string"
                    },
                    "keyboardDisplay": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotKeyboardDisplay"
                    },
                    "actionBarState": {
                        "enum": [
                            "REGULAR",
                            "MINIMIZED",
                            "HIDDEN"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.token.TokenRequestModel": {
                "required": [
                    "identity"
                ],
                "type": "object",
                "properties": {
                    "identity": {
                        "pattern": "^[\\p{L}\\p{N}\\-_+=/.]{3,64}$",
                        "type": "string",
                        "description": "The identity used to present user on Infobip WebRTC platform. Must be unique. Must contain at least 3 and at most 64 unicode characters including -, _, .."
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID to be used for calls. Web and In-App application represents one-stop place for all your configuration, including push notifications, dynamic destination resolving and all other Web and In-App Calls features."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Optional. A human-readable name for a given identity. Does not have to be unique. If set, it will be presented to all other users communicating with the identified user, along with identity. Must contain at least 5 and at most 50 characters."
                    },
                    "capabilities": {
                        "$ref": "#/components/schemas/infobip-webrtc-amg.openapi.Capabilities"
                    },
                    "timeToLive": {
                        "type": "integer",
                        "description": "Optional. This field represents a number of seconds until the token expires. If not set, the token will last 8 hours. The maximum value is 24 hours.",
                        "format": "int64"
                    }
                }
            },
            "infobip-iot-siman-interchange.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-iot-siman-interchange.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.MultipleSimResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Requested page number.",
                        "example": 20
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Page size limit.",
                        "example": 1
                    },
                    "sims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.SimResponse"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.StickerWhatsAppMoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobip-omni.openapi.MediaTemplateHeaderContent": {
                "required": [
                    "documentFilename",
                    "documentUrl",
                    "imageUrl",
                    "latitude",
                    "longitude",
                    "textPlaceholder",
                    "videoUrl"
                ],
                "type": "object",
                "properties": {
                    "textPlaceholder": {
                        "type": "string",
                        "description": "Text placeholder. Required for templates that contain a text header.",
                        "writeOnly": true
                    },
                    "documentUrl": {
                        "type": "string",
                        "description": "Document URL. Required for templates that contain a document header.Supported document types are PDF, DOC(X), PPT(X), XLS(X). Maximum document size is 100MB.",
                        "writeOnly": true
                    },
                    "documentFilename": {
                        "type": "string",
                        "description": "Document name. Required for templates that contain a document header.",
                        "writeOnly": true
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "Image URL. Required for templates that contain an image header. Supported image types: JPG, JPEG, PNG. Maximum image size is 5MB.",
                        "writeOnly": true
                    },
                    "videoUrl": {
                        "type": "string",
                        "description": "Video URL. Required for templates that contain a video header. Supported video types are MP4, 3GPP. Maximum video size is 16MB.",
                        "writeOnly": true
                    },
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Location latitude. The value must be between -90 and 90. Required for templates that contain a location header.",
                        "format": "double",
                        "writeOnly": true
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Location longitude. The value must be between -180 and 180. Required for templates that contain a location header.",
                        "format": "double",
                        "writeOnly": true
                    }
                },
                "description": "Media template header. Required for media templates which contain headers",
                "writeOnly": true
            },
            "infobipwhatsappstandaloneapiservice.openapi.StickerContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "properties": {
                    "mediaUrl": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of a sticker sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported sticker type is `WebP`. Sticker file should be 512x512 pixels. Maximum sticker size is 100KB."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobipapimanagement.openapi.customer.financeservice.account.balance.lib.model.CurrencyInfo": {
                "title": "CurrencyInfo",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "currencyName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "symbol": {
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.rcs.dlr.reports.ReportsResponse": {
                "title": "rcsDlrReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.rcs.reports.dlr.Report"
                        },
                        "description": "Collection of reports, one per every message.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MoContact": {
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MoAddress"
                        }
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date"
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Email"
                        }
                    },
                    "name": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MoName"
                    },
                    "org": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Organization"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MoPhone"
                        }
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Url"
                        }
                    }
                }
            },
            "infobip-ccaas-web-froms.openapi.WebFormPost": {
                "required": [
                    "content",
                    "from"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Sender of the submission."
                    },
                    "subject": {
                        "type": "string",
                        "description": "Submission subject."
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "List of web form submission carbon copy recipients."
                        },
                        "description": "List of web form submission carbon copy recipients."
                    },
                    "content": {
                        "type": "string",
                        "description": "Web form submission body content."
                    },
                    "attachmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Web form submission attachment IDs."
                        },
                        "description": "Web form submission attachment IDs."
                    }
                },
                "example": {
                    "from": "from.testmail@email.test",
                    "subject": "Test Subject",
                    "cc": [
                        "cc1@email.test",
                        "cc2@email.test"
                    ],
                    "content": "Example text file.",
                    "attachmentIds": [
                        "97457D13B1FC79AF3C1A1096AE7E77AB"
                    ]
                }
            },
            "infobip-ccaas-conversation-service.openapi.LocationItem": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "radius": {
                        "type": "number",
                        "format": "double"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "infobip-omni.openapi.KakaoChinguData": {
                "required": [
                    "imageUrl",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "buttons": {
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.KakaoChinguButton"
                        },
                        "description": "Buttons to include in the message. Optional value. Max 5 buttons.",
                        "writeOnly": true
                    },
                    "imageUrl": {
                        "maxLength": 250,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of the image sent in the message. Optional value. Max 250 characters.",
                        "writeOnly": true
                    },
                    "imageLink": {
                        "maxLength": 250,
                        "minLength": 1,
                        "type": "string",
                        "description": "Link of the image sent in the message. Optional value. Max 250 characters.",
                        "writeOnly": true
                    },
                    "isPromotional": {
                        "type": "boolean",
                        "description": "Flag that defines the message as promotional or not. Optional value.",
                        "writeOnly": true
                    }
                },
                "description": "Kakao ChinguTalk-specific data used if the message is sent through a Kakao ChinguTalk channel.",
                "writeOnly": true
            },
            "infobip-iot-siman-interchange.openapi.Status": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status."
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                },
                "description": "Indicates whether the message is sent successfully, not sent, delivered, not delivered, waiting for delivery or any other possible status."
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveListContent": {
                "required": [
                    "action",
                    "body"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveBodyContent"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListActionContent"
                    },
                    "header": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveListHeaderContent"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveFooterContent"
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-ccaas-conversation-service.openapi.InstagramComment": {
                "required": [
                    "id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Destination"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AppleInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleAccount"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.WhatsAppMoContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Context"
                    },
                    "type": {
                        "enum": [
                            "UNSUPPORTED",
                            "TEXT",
                            "LOCATION",
                            "IMAGE",
                            "DOCUMENT",
                            "AUDIO",
                            "VIDEO",
                            "VOICE",
                            "CONTACT",
                            "INFECTED_CONTENT",
                            "BUTTON",
                            "STICKER",
                            "INTERACTIVE_BUTTON_REPLY",
                            "INTERACTIVE_LIST_REPLY"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "UNSUPPORTED": "#/components/schemas/infobip-ccaas-conversation-service.openapi.UnsupportedWhatsAppMoContent",
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextWhatsAppMoContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationWhatsAppMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageWhatsAppMoContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentWhatsAppMoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioWhatsAppMoContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoWhatsAppMoContent",
                        "VOICE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VoiceWhatsAppMoContent",
                        "CONTACT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ContactsWhatsAppMoContent",
                        "INFECTED_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InfectedWhatsAppMoContent",
                        "BUTTON": "#/components/schemas/infobip-ccaas-conversation-service.openapi.QuickReplyWhatsAppMoContent",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StickerWhatsAppMoContent",
                        "INTERACTIVE_BUTTON_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ButtonReplyWhatsAppMoContent",
                        "INTERACTIVE_LIST_REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ListReplyWhatsAppMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AltUri": {
                "type": "object",
                "properties": {
                    "desktop": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.whatsapp.Address": {
                "title": "Address",
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "Street name.",
                        "writeOnly": true
                    },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "writeOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State name.",
                        "writeOnly": true
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip value.",
                        "writeOnly": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Country name.",
                        "writeOnly": true
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code value.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of an address.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-recording-amg.openapi.NumberConfigurationModel": {
                "type": "object",
                "properties": {
                    "numberKey": {
                        "type": "string",
                        "description": "*numberKey* - available through number configuration"
                    },
                    "recording": {
                        "$ref": "#/components/schemas/infobip-recording-amg.openapi.RecordingBody"
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimChatbotSwitchButton": {
                "required": [
                    "buttonText",
                    "chatEvent",
                    "chatExtra"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chatExtra": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Meta information passed when switching chat bots. Max 50 characters.",
                                "writeOnly": true
                            },
                            "chatEvent": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "Chat bot event name to connect when switching chat bots. Max 50 characters.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamOpenUrlButton": {
                "required": [
                    "name",
                    "urlMobile",
                    "urlPc"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 28,
                                "minLength": 0,
                                "type": "string"
                            },
                            "urlMobile": {
                                "type": "string"
                            },
                            "urlPc": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.email.mo.reports.TrackReport": {
                "type": "object",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "description": "Tells the type of user event that took place. Possible events: `OPENED`, `CLICKED`.",
                        "writeOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "The sending domain used to send the email to the recipient.",
                        "writeOnly": true
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of the email.",
                        "writeOnly": true
                    },
                    "url": {
                        "type": "string",
                        "description": "The link the recipient has clicked. This attribute will only be present only if the event is of the type `CLICKED`.",
                        "writeOnly": true
                    },
                    "sendDateTime": {
                        "type": "string",
                        "description": "The time at which the email was sent. Time is in milliseconds.",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent to the recipient.",
                        "writeOnly": true
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies a list of email messages. This is either defined by user in the request or auto generated.",
                        "writeOnly": true
                    },
                    "recipientInfo": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.email.reports.trackReport.RecipientInfo"
                            }
                        ],
                        "description": "Recipient information such as device type, OS, device name.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoTextContent": {
                "required": [
                    "sentAt",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 4000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "attachmentUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.mms.mt.reports.MMSReportResponse": {
                "title": "MMSReportResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.mms.mt.reports.MMSReport"
                        }
                    }
                }
            },
            "infobip-omni.openapi.ButtonComponent": {
                "required": [
                    "action"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "action": {
                                "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                            },
                            "flex": {
                                "maximum": 10,
                                "minimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "height": {
                                "enum": [
                                    "SM",
                                    "MD"
                                ],
                                "type": "string"
                            },
                            "style": {
                                "enum": [
                                    "LINK",
                                    "PRIMARY",
                                    "SECONDARY"
                                ],
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "gravity": {
                                "enum": [
                                    "TOP",
                                    "BOTTOM",
                                    "CENTER"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.KakaoAlimAddChannelButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    }
                ]
            },
            "infobipapimanagementother.openapi.accounts.infobip.api.models.accounts.UpdateAccountRequest": {
                "title": "UpdateAccountRequest",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enable or disable account"
                    },
                    "name": {
                        "type": "string",
                        "description": "New name for account"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailTextContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramDestination": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PHONE_NUMBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination",
                        "FACEBOOK_MESSENGER_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookUser",
                        "APPLE_BUSINESS_CHAT_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleUser",
                        "LINE_OFFICIAL_ACCOUNT_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineUser",
                        "LIVE_CHAT_REGISTRATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatRegistration",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailDestination",
                        "GOOGLE_CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleConversation",
                        "TELEGRAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramChat",
                        "AGENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Agent",
                        "VIBER_BOT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotDestination",
                        "SOCIAL_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SocialUser",
                        "INSTAGRAM_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramUser",
                        "INSTAGRAM_COMMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramComment",
                        "KAKAO_SANGDAM_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamUser",
                        "TWITTER_USER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterUser"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleQuickReplyContent": {
                "required": [
                    "quickReply"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "quickReply": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleQuickReply"
                            },
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "type": {
                                "enum": [
                                    "TEXT",
                                    "IMAGE",
                                    "LOCATION",
                                    "VIDEO",
                                    "AUDIO",
                                    "DOCUMENT",
                                    "APPLE_TYPING_INDICATOR_CONTENT",
                                    "APPLE_LIST_PICKER_CONTENT",
                                    "APPLE_TIME_PICKER_CONTENT",
                                    "APPLE_AUTH_REQUEST_CONTENT",
                                    "APPLE_RICH_LINK_CONTENT",
                                    "APPLE_PAY_REQUEST_CONTENT",
                                    "APPLE_CUSTOM_INTERACTIVE_CONTENT",
                                    "APPLE_QUICK_REPLY_CONTENT"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.QuickReplyWhatsAppMoContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoMessage"
                    },
                    {
                        "required": [
                            "payload",
                            "text"
                        ],
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string",
                                "description": "Text of the selected button."
                            },
                            "payload": {
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string",
                                "description": "Payload of the selected button."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CarouselGoogleContent": {
                "required": [
                    "cardWidth",
                    "contents",
                    "representative"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contents": {
                                "maxItems": 10,
                                "minItems": 2,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardContent"
                                },
                                "description": "A list of cards contained within the carousel"
                            },
                            "cardWidth": {
                                "enum": [
                                    "SMALL",
                                    "MEDIUM"
                                ],
                                "type": "string",
                                "description": "Width of a single card contained within the carousel",
                                "example": "MEDIUM"
                            },
                            "representative": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Representative"
                            },
                            "fallback": {
                                "type": "string"
                            },
                            "suggestions": {
                                "maxItems": 13,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Separator": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "margin": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LineContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageLineContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoLineContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioLineContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "LINE_STICKER_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StickerLineContent",
                        "LINE_IMAGEMAP_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImagemapLineContent",
                        "LINE_TEMPLATE_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateLineContent",
                        "LINE_FLEX_CONTENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FlexLineContent"
                    }
                }
            },
            "infobip-forms.openapi.CheckboxGroupInputElement": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElementWithOptions"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "component": {
                                "enum": [
                                    "TEXT",
                                    "TEXTAREA",
                                    "NUMBER",
                                    "DROPDOWN",
                                    "CHECKBOX",
                                    "CHECKBOX_GROUP",
                                    "RADIOBUTTON",
                                    "DATE",
                                    "DATETIME",
                                    "EMAIL",
                                    "MSISDN",
                                    "SUBMIT_BUTTON",
                                    "TITLE",
                                    "DESCRIPTION"
                                ],
                                "type": "string",
                                "description": "Component type."
                            },
                            "fieldId": {
                                "type": "string",
                                "description": "Field identifier. It must be unique within the form."
                            },
                            "label": {
                                "type": "string",
                                "description": "Field label."
                            },
                            "personField": {
                                "type": "string",
                                "description": "Connect field to person attribute"
                            },
                            "personFieldDataType": {
                                "enum": [
                                    "STRING",
                                    "DECIMAL",
                                    "INTEGER",
                                    "BOOLEAN",
                                    "DATE",
                                    "DATE_TIME",
                                    "JSON",
                                    "GENDER",
                                    "PLACEHOLDER_ENTITY",
                                    "PLACEHOLDER_DATA_TYPE",
                                    "PLACEHOLDER_TYPE",
                                    "DESTINATION_TYPE",
                                    "SERVICE_TYPE",
                                    "PERSON_ORIGIN",
                                    "PERSON_TYPE",
                                    "EVENTS_SEGMENT_RELATION",
                                    "PLACEHOLDER_VALUE_SCHEMA",
                                    "LIST_OF_OBJECTS"
                                ],
                                "type": "string",
                                "description": "Data type for person attribute"
                            },
                            "personFieldSubItemName": {
                                "type": "string",
                                "description": "Connect field to person attribute sub item name"
                            },
                            "isRequired": {
                                "type": "boolean",
                                "description": "Required field has to be filled with input or end users will not be able to submit the form."
                            },
                            "isHidden": {
                                "type": "boolean",
                                "description": "Hidden field is not visible to end users. The value can be filled by using an API submission. Use for profile attribution."
                            },
                            "staticValue": {
                                "type": "string",
                                "description": "This value is filled on every submit."
                            },
                            "lastModifiedDate": {
                                "type": "string",
                                "description": "Date of last element modification, null for old and unmodified data",
                                "format": "date-time"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-forms.openapi.FormElementOption"
                                },
                                "description": "List of options for multiple select."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-forms.openapi.FormElement"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MessageImagemapAction": {
                "required": [
                    "area",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImagemapAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 400,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobiprcsapi.openapi.CardMedia": {
                "required": [
                    "file",
                    "height"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Resource"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.Resource"
                    },
                    "height": {
                        "enum": [
                            "SHORT",
                            "MEDIUM",
                            "TALL"
                        ],
                        "type": "string",
                        "description": "Height of the card media",
                        "example": "TALL"
                    }
                },
                "description": "Object defining display of card media"
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.ipcore.acceptor.model.omni.OMNIChannel": {
                "title": "OMNIChannel",
                "enum": [
                    "SMS",
                    "EMAIL",
                    "VOICE",
                    "PARSECO",
                    "PUSH",
                    "VIBER",
                    "FACEBOOK",
                    "LINE"
                ],
                "type": "string"
            },
            "infobippushko.openapi.whatsapp.Url": {
                "title": "Url",
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "Contact URL.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "HOME",
                            "WORK"
                        ],
                        "type": "string",
                        "description": "Type of a URL.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.credentials.CredentialsBody": {
                "required": [
                    "apiId",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The first part of the generate Authorization header."
                    },
                    "key": {
                        "type": "string",
                        "description": "Used to generate the second part of the Authorization header."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveDocumentHeaderWhatsAppContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveHeaderWhatsAppContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "filename": {
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateVideoHeaderContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of a video sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported video types are `MP4`, `3GPP`. Maximum video size is 16MB."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ListReplyWhatsAppMoContent": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "maxLength": 200,
                                "minLength": 0,
                                "type": "string"
                            },
                            "title": {
                                "maxLength": 24,
                                "minLength": 0,
                                "type": "string"
                            },
                            "description": {
                                "maxLength": 72,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent."
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.waDeletedReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.SeenDeletedBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deletedAt": {
                                "type": "string",
                                "description": "Tells when the message was deleted.",
                                "format": "date-time",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ImageMediaTemplateHeaderContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.MessageButtonAction": {
                "required": [
                    "label",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "text": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.reports.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable [description](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example) of the error."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Error [group ID](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example).",
                        "format": "int32"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error [group name](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example)."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error [ID](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example).",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Error [name](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example)."
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error [is permanent](https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example)."
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ctc.v1.model.ClickToCallMessage": {
                "title": "ClickToCallMessage",
                "required": [
                    "destinationA",
                    "destinationB"
                ],
                "type": "object",
                "properties": {
                    "anonymization": {
                        "type": "boolean",
                        "description": "If set, same numeric sender (defined in _from_) is used for both calls (towards _destinationA_ and _destinationB_). If not set, _destinationA_ will be shown to _destinationB_. If _fromB_ is set up, _anonymization_ will not be applied; _from_ will be shown to _destinationA_ and _fromB_ will be shown to _destinationB_. Default value is `false`. "
                    },
                    "audioFileUrl": {
                        "type": "string",
                        "description": "Besides the text format of the message, audio recording (format like: aac, aiff, m4a, mp2, mp3, ogg, wav, wma) can also be delivered as a voice message to the recipient. Audio file must be uploaded online so the existing URL can be available for the file download. Size of the audio file must be below 4 MB."
                    },
                    "deliveryTimeWindow": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryTimeWindow"
                            }
                        ],
                        "description": "Scheduling object that allows setting up detailed time windows in which the message can be sent. Consists of from, to and days properties. Days property is mandatory. From and to properties should be either both included, to allow finer time window granulation or both omitted, to include whole days in the delivery time window. Note: delivery time window is set in UTC timezone."
                    },
                    "destinationA": {
                        "type": "string",
                        "description": "Original destination address. Address must be in the international format (Example: `41793026727`)."
                    },
                    "destinationB": {
                        "type": "string",
                        "description": "Destination address to which the call will be transferred after successful answering. Address must be in the international format (Example: `41793026727`)."
                    },
                    "from": {
                        "type": "string",
                        "description": "Numeric sender ID in E.164 format. Will be shown to _destinationA_."
                    },
                    "fromB": {
                        "type": "string",
                        "description": "Numeric sender ID in E.164 format. If set, it will be shown to _destinationB_. If not set, _from_ or _destinationA_ will be shown to _destinationB_, depending on the value of _anonymization_."
                    },
                    "language": {
                        "type": "string",
                        "description": "If the message is in text format, language in which the message is written must be defined for correct pronunciation. In the Languages section, you can find the list of languages that we support. If not set, default language is `English [en].`",
                        "externalDocs": {
                            "description": "Voice Text-To-Speech Languages",
                            "url": "https://www.infobip.com/docs/voice-and-video/text-to-speech-languages"
                        }
                    },
                    "machineDetection": {
                        "type": "string",
                        "description": "Used for enabling detection of answering machine after the call has been answered. It can be set to `hangup` or `continue`. When set to `hangup`, if a machine is detected call is hung up. When set to `continue`, if a machine is detected, then voice message starts playing into voice mail after the answering message is finished with its greeting. If machineDetection is used, there is a minimum of 4 seconds detection time, which can result in delay of playing the message. Answering machine detection is additionally charged. For more information please contact your account manager.",
                        "externalDocs": {
                            "description": "Answering Machine Detection",
                            "url": "https://www.infobip.com/docs/voice-and-video/answering-machine-detection"
                        }
                    },
                    "maxDuration": {
                        "type": "integer",
                        "description": "Maximum duration of transferred call in seconds. If set, when _maxDuration_ is reached call will be terminated.",
                        "format": "int32"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent. It can be defined by you or Infobip will generate unique message ID for this specific call. The field is not mandatory."
                    },
                    "notifyContentType": {
                        "type": "string",
                        "description": "Preferred Delivery report content type. Can be `application/json` or `application/xml`."
                    },
                    "notifyContentVersion": {
                        "type": "integer",
                        "description": "Specifies the version of the report model to be sent. Can be `1` ([deprecated version 1](#programmable-communications/voice/receive-voice-delivery-reports-deprecated)) or `2` ([current version 2](#programmable-communications/voice/receive-voice-delivery-reports)). The default is version 2.",
                        "format": "int32"
                    },
                    "notifyUrl": {
                        "type": "string",
                        "description": "The URL on your callback server on which the Delivery report will be sent."
                    },
                    "record": {
                        "type": "boolean",
                        "description": "[Early access: Contact your account manager to enable the usage] Record the call and expose it to client as URL inside the delivery report. Can be `true` or `false`."
                    },
                    "retry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.send.advanced.Retry"
                            }
                        ],
                        "description": "Used to define if the delivery of the Voice messages should be retried in case the first try doesn't succeed. Additional retries will be made according to the schedule defined by _minPeriod_ and _maxPeriod_ parameters and platform's internal retry logic. If the _minPeriod_ differs _maxPeriod_, delivery will be retried in the following manner: after 1 min, 2 min, 5 min, 10 min, 20 min, 30 min, 1 hour, 2 hours, 4 hours, 8 hours, 16 hours, 24 hours or until maxPeriod is reached.  If the retry attempt for the _maxPeriod_ is reached, the _maxPeriod_ will be used for all subsequent retries. If the _minPeriod_ and the _maxPeriod_ are defined as equal values, the period of time between retries will be equal to this value. Message delivery will be retried until the successful delivery or message validity or _maxCount_ value is reached."
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be played before call transfer."
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.lang.Voice"
                            }
                        ],
                        "description": "Used to define voice in which text would be synthesized. It has two parameters: _name_ and _gender_. When only _name_ is provided, then that exact voice with that name will be used to synthesize text. If only _gender_ is provided, then text is synthesized with first voice in given gender. If voice is not set, then default voice is used."
                    },
                    "warningTime": {
                        "type": "integer",
                        "description": "Time before the end of the transferred call, in seconds, when warning beep sound will be played. For example, if _maxDuration_ is set to `60` and warningTime is set to `5`, this means that warning beep will be played on `55.` second of the transferred call, or `5` seconds before it's end.",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InputOption": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CardOpenUrlSuggestion": {
                "required": [
                    "postbackData",
                    "text",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardSuggestion"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 25,
                                "minLength": 0,
                                "type": "string",
                                "description": "Suggestion text",
                                "example": "Pick one!"
                            },
                            "postbackData": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "Value which is going to be sent as a reply to a suggestion",
                                "example": "REPLY"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipmiyuloregatewayservice.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.ApiRequestError"
                    }
                }
            },
            "infobipomniflowwebhook.openapi.FlowPersonRequest": {
                "type": "object",
                "properties": {
                    "personData": {
                        "$ref": "#/components/schemas/infobipomniflowwebhook.openapi.IamPersonV2"
                    },
                    "flowVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "description": "Contains the data used for person creation (if it does not exist) or partial update (if it exists)",
                "example": {
                    "personData": {
                        "externalId": "1",
                        "firstName": "Jane",
                        "lastName": "Smith",
                        "address": "67 Farringdon Road",
                        "city": "London",
                        "country": "United Kingdom",
                        "gender": "FEMALE",
                        "birthDate": "1966-01-15T00:00:00.0000000+01:00",
                        "middleName": "Janie",
                        "profilePicture": "http://profile.com",
                        "tags": [
                            "VIP Customers",
                            "New Customers"
                        ],
                        "customAttributes": {
                            "Contract Expiry": "2018-06-01T00:00:00.0000000+02:00",
                            "Company": "Acme"
                        },
                        "contactInformation": {
                            "phone": [
                                {
                                    "number": "41793026727"
                                },
                                {
                                    "number": "41793026728"
                                }
                            ],
                            "email": [
                                {
                                    "address": "jane@acme.com"
                                },
                                {
                                    "address": "janesmith@acme.com"
                                }
                            ]
                        }
                    },
                    "flowVariables": {
                        "orderDate": "2021-09-01",
                        "orderDetails": "Extended Weight, Discount",
                        "orderNumber": "1234567"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.StickerLineContent": {
                "required": [
                    "packageId",
                    "stickerId"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "packageId": {
                                "type": "string"
                            },
                            "stickerId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.SurveyResponseLiveChatContent": {
                "required": [
                    "surveySatisfaction"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "surveySatisfaction": {
                                "enum": [
                                    "SATISFIED",
                                    "UNSATISFIED"
                                ],
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.KakaoAlimAppLinkButton": {
                "required": [
                    "androidScheme",
                    "buttonText",
                    "iosScheme"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "androidScheme": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "Scheme to use on Android devices. Max 500 characters.",
                                "writeOnly": true
                            },
                            "iosScheme": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string",
                                "description": "Scheme to use on iOS devices. Max 500 characters.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors.",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors.",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors.",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobip-recording-amg.openapi.RecordingBody": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "True or False. Default is *false*.\nIf *true* then each call made toward this number will be recorded."
                    }
                },
                "description": "Recording Configuration object"
            },
            "infobipapimanagement.openapi.voip.voip.ivr.v1.model.ScenarioResponse": {
                "title": "ScenarioResponse",
                "type": "object",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Creation timestamp.",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "description": "Scenario description."
                    },
                    "id": {
                        "type": "string",
                        "description": "Scenario key. It is used for launching IVR scenario."
                    },
                    "name": {
                        "type": "string",
                        "description": "Scenario name."
                    },
                    "script": {
                        "type": "object",
                        "description": "The list of scenario actions."
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Update timestamp",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookPage": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Error": {
                "title": "Error",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the error..",
                        "readOnly": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Error group ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Error group name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "Error ID.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Error name.",
                        "readOnly": true
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Tells if the error is permanent.",
                        "readOnly": true
                    }
                }
            },
            "infobippushko.openapi.rcs.mo.reports.SuggestionMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.Type"
                    },
                    "text": {
                        "type": "string",
                        "description": "Incoming suggestion test.",
                        "writeOnly": true
                    },
                    "postbackData": {
                        "type": "string",
                        "description": "postbackData of incoming suggestion.",
                        "writeOnly": true
                    }
                }
            },
            "infobipzalozmsgatewayservice.openapi.SingleMessageStatus": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "example": 1
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "example": "PENDING"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "example": 7
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "example": "PENDING_ENROUTE"
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "example": "Message sent to next instance"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                }
            },
            "infobipamgnumbersapi.openapi.MoConfigurations": {
                "type": "object",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.MoConfiguration"
                        }
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatRegistration": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamMoImageContent": {
                "required": [
                    "sentAt",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.DeliveryTime": {
                "title": "DeliveryTime",
                "required": [
                    "hour",
                    "minute"
                ],
                "type": "object",
                "properties": {
                    "hour": {
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Hour when the time window opens when used in from property or closes when used into the property.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "minute": {
                        "maximum": 59,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Minute when the time window opens when used in from property or closes when used into the property.",
                        "format": "int32",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Context": {
                "required": [
                    "entryPoint",
                    "placeId",
                    "sendTime",
                    "type",
                    "userDeviceLocale",
                    "userDisplayName"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "NEAR_PLACE",
                            "PLACE"
                        ],
                        "type": "string"
                    },
                    "sendTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "userDisplayName": {
                        "type": "string"
                    },
                    "placeId": {
                        "type": "string"
                    },
                    "userDeviceLocale": {
                        "type": "string"
                    },
                    "entryPoint": {
                        "enum": [
                            "ENTRY_POINT_UNSPECIFIED",
                            "PLACESHEET",
                            "MAPS",
                            "FEATURED_SNIPPETS",
                            "SITELINKS",
                            "WEB_WIDGET",
                            "PHONE",
                            "URL",
                            "LOCAL_PACK",
                            "ADS"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PLACE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PlaceContext",
                        "NEAR_PLACE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.NearPlaceContext"
                    }
                }
            },
            "infobipomniflowwebhook.openapi.IamFacebookContact": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "infobipomniflowwebhook.openapi.IamLineContact": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed."
                    },
                    "pricePerSecond": {
                        "type": "number",
                        "description": "Price per one second of the voice message.",
                        "format": "double"
                    }
                }
            },
            "mobile-identity-service.openapi.SmvVerifyRequestDto": {
                "required": [
                    "callbackUrl",
                    "consentGranted",
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "consentGranted": {
                        "type": "boolean",
                        "description": "Indicates whether you have consent from mobile phone number's owner to perform this request. All requests that do not have this property set to \"true\" will be rejected",
                        "default": false,
                        "example": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Mobile phone number (MSISDN) to verify. The number must be in international format",
                        "example": "441134961234"
                    },
                    "deviceIp": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address of the mobile device that will be verified with operator",
                        "format": "xxx.xxx.xxx.xxx|xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx",
                        "example": "10.20.30.100|1111:22222:3333:4444:AAAA:BBBB:CCCC:DDDD"
                    },
                    "devicePort": {
                        "type": "integer",
                        "description": "Port of the mobile device that will be verified with operator. Can be used only when \"deviceIp\" is also provided",
                        "format": "int32",
                        "example": 54321
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "Your URL that will be called to provide verification result when the process is complete.\nCallback request will be sent using HTTP <code>POST</code> method\nand it only expects <code>200 OK</code> status with <code>no content</code> in response.<br>\nExample of successful verification request:\n<br>\n<pre><code>\n{\n    \"result\": \"VALID\",\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"error\": \"null\"\n}\n</code></pre>\nExample of unsuccessful verification request:\n<br>\n<pre><code>\n{\n    \"result\": \"null\",\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"error\": {\n        \"id\": 202,\n        \"name\": \"EC_CONSENT_NOT_GRANTED\",\n        \"description\": \"User consent not granted\"\n    },\n}\n</code></pre>\n",
                        "example": "https://my-site.com/my-path"
                    },
                    "returnUrl": {
                        "type": "string",
                        "description": "An URL to which the mobile device will be redirected to when verification is complete.",
                        "example": "https://my-site.com/my-shop.html"
                    }
                },
                "description": "Silent Mobile Verification request object"
            },
            "infobip-iot-siman-service.iot.openapi.MultipleOrderResponse": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page.",
                        "example": 1
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page.",
                        "example": 20
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.OrderResponse"
                        }
                    }
                },
                "description": "Contains all created SIM card orders owned by requester in paginated format.\n"
            },
            "infobipsc.openapi.TokenRequest": {
                "required": [
                    "client_id",
                    "client_secret",
                    "grant_type"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string",
                        "description": "Your unique username, obtained by signup (user creation) on Infobip portal."
                    },
                    "client_secret": {
                        "type": "string",
                        "description": "Your password, obtained by signup (user creation) on Infobip portal."
                    },
                    "grant_type": {
                        "enum": [
                            "client_credentials"
                        ],
                        "type": "string",
                        "description": "Grant type as defined by the OAuth framework."
                    }
                }
            },
            "infobip-portal-audit-logs.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-portal-audit-logs.openapi.ApiServiceException"
                    }
                },
                "additionalProperties": false
            },
            "infobip-ccaas-conversation-service.openapi.ImagemapLineContent": {
                "required": [
                    "actions",
                    "altText",
                    "baseSize",
                    "baseUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "baseUrl": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "altText": {
                                "maxLength": 400,
                                "minLength": 0,
                                "type": "string"
                            },
                            "baseSize": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BaseSize"
                            },
                            "actions": {
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImagemapAction"
                                }
                            },
                            "video": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Video"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.ReportsResponse": {
                "title": "ReportsResponse",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.ReportsResponse.Companion"
                            }
                        ]
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of recipients for targeted segment.",
                        "format": "int32"
                    },
                    "pendingMessageCount": {
                        "type": "integer",
                        "description": "Count of pending messages.",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.pull.reports.MoResponse"
                        },
                        "description": "List of MoResponses."
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.IndiaDltOptions": {
                "title": "IndiaDltOptions",
                "required": [
                    "principalEntityId"
                ],
                "type": "object",
                "properties": {
                    "contentTemplateId": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string",
                        "description": "Id of your registered DTL content template that matches this message's text."
                    },
                    "principalEntityId": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string",
                        "description": "Your assigned DTL principal entity id."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.PhoneNumberSender": {
                "required": [
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.FieldConditionRequest": {
                "required": [
                    "conditionalFields",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "conditionalFields": {
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.FormConditionalFieldRequest"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveButtonWhatsAppContent": {
                "required": [
                    "action",
                    "body"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContentBody"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "header": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveHeaderWhatsAppContent"
                            },
                            "body": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveBodyWhatsAppContent"
                            },
                            "footer": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveFooterWhatsAppContent"
                            },
                            "action": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppActionContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.VerifyPinResponse": {
                "title": "VerifyPinResponse",
                "type": "object",
                "properties": {
                    "attemptsRemaining": {
                        "type": "integer",
                        "description": "Number of remaining PIN attempts.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "msisdn": {
                        "type": "string",
                        "description": "Phone number (`MSISDN`) to which the 2FA message was sent.",
                        "readOnly": true
                    },
                    "pinError": {
                        "type": "string",
                        "description": "Indicates if any error occurs during PIN verification.",
                        "readOnly": true
                    },
                    "pinId": {
                        "type": "string",
                        "description": "Sent PIN code ID.",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Indicates if the phone number (`MSISDN`) was successfully verified.",
                        "readOnly": true
                    }
                }
            },
            "infobiprcsapi.openapi.SingleMessageInfo": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Message destination.",
                        "example": "385977666618"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of messages required to deliver.",
                        "format": "int32",
                        "example": 1
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.SingleMessageStatus"
                    }
                }
            },
            "infobip-omni.openapi.SpacerComponent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "size": {
                                "enum": [
                                    "XS",
                                    "SM",
                                    "MD",
                                    "LG",
                                    "XL",
                                    "XXL",
                                    "NONE"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BaselineComponent"
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.ApplicationsResponse": {
                "title": "ApplicationsResponse",
                "type": "object",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.application.ApplicationResponse"
                        },
                        "description": "List of applications"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ProductInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.PostbackInstagramMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "payload": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.AgentRequest": {
                "required": [
                    "displayName",
                    "role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "displayName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Agent name to be displayed."
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "BUSY",
                            "INVISIBLE",
                            "AWAY"
                        ],
                        "type": "string",
                        "description": "Agent status.",
                        "default": "INVISIBLE"
                    },
                    "role": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR"
                        ],
                        "type": "string",
                        "description": "Agent role.",
                        "default": "AGENT"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Agent enabled/disabled toggle.",
                        "default": true
                    }
                },
                "example": {
                    "displayName": "Angus Young",
                    "status": "ACTIVE",
                    "role": "SUPERVISOR",
                    "enabled": true
                }
            },
            "infobipapimanagementother.openapi.accounts.org.infobip.api.ApiRequestErrorDetails": {
                "title": "ApiRequestErrorDetails",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error."
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description."
                    }
                }
            },
            "infobippushko.openapi.voip.reports.v0.VoiceReportsResponse": {
                "title": "VoiceReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.voip.reports.v0.VoiceReport"
                        },
                        "description": "Arrays of delivery reports, one object for every message."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SpeedLimitTimeUnit": {
                "title": "SpeedLimitTimeUnit",
                "enum": [
                    "MINUTE",
                    "HOUR",
                    "DAY"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.CloseConversationAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    }
                ]
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PrimaryButtonAction": {
                "title": "PrimaryButtonAction",
                "type": "object",
                "properties": {
                    "resource": {
                        "type": "string",
                        "description": "Defines which URL or path should be opened."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v2.send.message.PrimaryButtonActionType"
                            }
                        ],
                        "description": "`WEB_VIEW_URL` - opening of the external web content in webView, `OPEN_URL_IN_BROWSER` - opening of the external web content in device browser, `DEEP_LINK` - opening of particular mobile app screen over deep link."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ZaloOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ZaloSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ZaloContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotOpenMapLocation": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatButtonPayload": {
                "required": [
                    "payload",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "URL",
                            "POSTBACK"
                        ],
                        "type": "string"
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "infobip-forms.openapi.FormElementOption": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "description": "List of options for multiple select."
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingStickerContent",
                        "TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingTemplateContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioLineContent": {
                "required": [
                    "duration",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "duration": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "nano": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "negative": {
                                        "type": "boolean"
                                    },
                                    "zero": {
                                        "type": "boolean"
                                    },
                                    "units": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "dateBased": {
                                                    "type": "boolean"
                                                },
                                                "timeBased": {
                                                    "type": "boolean"
                                                },
                                                "duration": {
                                                    "type": "object",
                                                    "properties": {
                                                        "seconds": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "nano": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "negative": {
                                                            "type": "boolean"
                                                        },
                                                        "zero": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                },
                                                "durationEstimated": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextLiveChatInboundContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 1,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TemplateVkContent": {
                "required": [
                    "data",
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "data": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotOpenUrlSettingsMediaPlayer": {
                "type": "object",
                "properties": {
                    "thumbnailUrl": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "loop": {
                        "type": "boolean"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ConfigurationsResponse.Companion": {
                "title": "Companion",
                "type": "object",
                "properties": {
                    "configurations": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.configuration.models.responses.ConfigurationsResponse"
                            }
                        ]
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveButtonContent": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Array of buttons sent in the message. It can have up to three buttons.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveReplyButtonContent"
                    }
                }
            },
            "infobip-omni.openapi.MediaTemplateButtonContent": {
                "type": "object",
                "properties": {
                    "urlPlaceholder": {
                        "maxLength": 1500,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL placeholder. Required for URL buttons that have a parameterized URL.",
                        "writeOnly": true
                    },
                    "quickReplyPayload": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "QuickReply payload. Required for quick reply buttons.",
                        "writeOnly": true
                    }
                },
                "description": "Media template buttons",
                "writeOnly": true
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse": {
                "title": "StatisticsResponse",
                "type": "object",
                "properties": {
                    "Companion": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.Companion"
                            }
                        ]
                    },
                    "delivered": {
                        "type": "integer",
                        "description": "Total number of delivered messages.",
                        "format": "int64"
                    },
                    "delivery": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.DeliveryInfo"
                            }
                        ],
                        "description": "Delivery information about the bulk sending of messages."
                    },
                    "errors": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.mobile.v1.statistics.StatisticsResponse.ErrorInfo"
                            }
                        ],
                        "description": "Messages not delivered to users."
                    },
                    "seen": {
                        "type": "integer",
                        "description": "Total number of seen messages.",
                        "format": "int64"
                    },
                    "totalSent": {
                        "type": "integer",
                        "description": "Total number of sent messages.",
                        "format": "int64"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoAttachment": {
                "required": [
                    "downloadId",
                    "fileName",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "downloadId": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "infobip-email-api-amg.openapi.BulkStatus": {
                "enum": [
                    "PENDING",
                    "PAUSED",
                    "PROCESSING",
                    "CANCELED",
                    "FINISHED",
                    "FAILED"
                ],
                "type": "string"
            },
            "infobip-iot-siman-service.iot.openapi.Location": {
                "type": "object",
                "properties": {
                    "longitude": {
                        "type": "number",
                        "description": "Number representing SIM Card longitude.",
                        "example": 90
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Number representing SIM Card latitude.",
                        "example": 90
                    }
                },
                "description": "Contains information about SIM Card latitude and longitude."
            },
            "infobip-ccaas-conversation-service.openapi.SurveyRequestLiveChatContent": {
                "required": [
                    "followUpQuestionEnabled",
                    "question"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "question": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            },
                            "followUpQuestion": {
                                "type": "string"
                            },
                            "positiveAnswer": {
                                "type": "string"
                            },
                            "negativeAnswer": {
                                "type": "string"
                            },
                            "followUpQuestionEnabled": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "infobip-ccca.openapi.StatusResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.RouterResultPage": {
                "type": "object",
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Rule"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "routes": [
                        {
                            "id": "A2B628471EFE3576F8673B820B0693E3",
                            "name": "English Support",
                            "queueId": "8772F93BC855D00A1036B771ACA7EC40",
                            "queueName": "English Support queue",
                            "priority": "NORMAL",
                            "enabled": true,
                            "expression": {
                                "$or": [
                                    {
                                        "$eq": {
                                            "customer.country": "United Kindom"
                                        }
                                    },
                                    {
                                        "$eq": {
                                            "customer.country": "Australia"
                                        }
                                    }
                                ]
                            },
                            "order": 0,
                            "createdAt": "2020-04-06T12:58:55.4770000+00:00",
                            "updatedAt": "2020-04-06T12:58:55.4770000+00:00"
                        },
                        {
                            "id": "B0693E3A2B628471EFE3576F8673B820",
                            "name": "Spanish Support",
                            "queueId": "A1C93E138A8D831F49D047BC0A5B1D0D",
                            "queueName": "Spanish Support queue",
                            "priority": "NORMAL",
                            "enabled": true,
                            "expression": {
                                "$in": {
                                    "customer.country": [
                                        "Spain",
                                        "Columbia",
                                        "Mexico"
                                    ]
                                }
                            },
                            "order": 1,
                            "createdAt": "2020-04-06T12:58:55.4770000+00:00",
                            "updatedAt": "2020-04-06T12:58:55.4770000+00:00"
                        },
                        {
                            "id": "76F8673B820B0693E3A2B628471EFE35",
                            "name": "Croatian Support",
                            "queueId": "04FAFF86C252478D324CF3F980799C9E",
                            "queueName": "Croatian Support queue",
                            "priority": "NORMAL",
                            "enabled": true,
                            "expression": {
                                "$and": [
                                    {
                                        "$starts_with": {
                                            "message.customerNumber": "385"
                                        }
                                    },
                                    {
                                        "$neq": {
                                            "message.channel": "FACEBOOK_MESSENGER"
                                        }
                                    }
                                ]
                            },
                            "order": 2,
                            "createdAt": "2020-04-06T12:58:55.4770000+00:00",
                            "updatedAt": "2020-04-06T12:58:55.4770000+00:00"
                        },
                        {
                            "id": "673B820B0693E3A2B628471EFE3576F8",
                            "name": "Keyword STOP",
                            "queueId": "1E54701F74BD86A070B43DB49478D82C",
                            "queueName": "STOP",
                            "priority": "NORMAL",
                            "enabled": true,
                            "expression": {
                                "$starts_with": {
                                    "message.content": "STOP"
                                }
                            },
                            "order": 3,
                            "createdAt": "2020-04-06T12:58:55.4770000+00:00",
                            "updatedAt": "2020-04-06T12:58:55.4770000+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 4,
                        "page": 0,
                        "limit": 999,
                        "orderBy": "order:ASC"
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.masking.SetupResponse": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Use to connect masking configuration with Voice-enabled number."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique configuration name. Alphanumeric, max length 100."
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "Client's URL that will be called on each inbound call to related Number masking Voice number in order to get instructions of how to handle incoming calls. Instructions are a result of mapping logic implemented on your side according to your business case."
                    },
                    "statusUrl": {
                        "type": "string",
                        "description": "Client's URL for status report delivery after the call is finished."
                    },
                    "backupCallbackUrl": {
                        "type": "string",
                        "description": "If callbackUrl is unavailable this one will be called instead."
                    },
                    "backupStatusUrl": {
                        "type": "string",
                        "description": "If statusUrl is unavailable this one will be called instead."
                    },
                    "description": {
                        "type": "string",
                        "description": "Masking configuration description"
                    },
                    "insertDateTime": {
                        "type": "string",
                        "description": "Date and time when masking configuration is created.",
                        "format": "date-time"
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Date and time when masking configuration was last modified.",
                        "format": "date-time"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.MessageResultPage": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.org.infobip.ccaas.connector.model.message.Message"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "messages": [
                        {
                            "id": "81D8E15634FCBC40E1779C44C7554A00",
                            "channel": "SMS",
                            "from": "447492263899",
                            "to": "447496389711",
                            "direction": "INBOUND",
                            "conversationId": "9F1F21C198025CC026956A7E2E9C560F",
                            "createdAt": "2019-04-11T10:40:38.0590000+00:00",
                            "content": {
                                "text": "Please help, it is dark here"
                            },
                            "contentType": "TEXT"
                        },
                        {
                            "id": "870118E54C33E290B533F29A74FD52EA",
                            "channel": "VIBER",
                            "from": "447492263898",
                            "to": "447492289763",
                            "direction": "OUTBOUND",
                            "conversationId": "9F1F21C198025CC026956A7E2E9C560F",
                            "createdAt": "2019-05-14T11:05:41.7500000+00:00",
                            "content": {
                                "text": "Ciao da viber"
                            },
                            "contentType": "TEXT"
                        }
                    ],
                    "pagination": {
                        "totalItems": 2,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ImageGbmMoContent": {
                "required": [
                    "context",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GbmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                            }
                        }
                    }
                ]
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SMSResponse": {
                "title": "SMSResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "readOnly": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SMSResponseDetails"
                        },
                        "description": "Array of sent message objects, one object per every message.",
                        "readOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.EmailDestination": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.customer.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.customer.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "peev-webapi.iam.openapi.EventResourceResponse": {
                "type": "object",
                "properties": {
                    "DefinitionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonId": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonIdentifierType": {
                        "$ref": "#/components/schemas/peev-webapi.iam.openapi.PersonIdentifierType"
                    },
                    "OccurredTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "Properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "nullable": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Location": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "address": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.tts.v3.reports.VoiceReport": {
                "title": "VoiceReport",
                "type": "object",
                "properties": {
                    "answerTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was answered."
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "Bulk ID."
                    },
                    "callbackData": {
                        "type": "string",
                        "description": "Callback data sent through callbackData field in fully featured Voice message."
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the voice message was processed by Infobip (ie. delivered to destination, delivered to destination network, etc.)."
                    },
                    "dtmfCodes": {
                        "type": "string",
                        "description": "DTMF code entered by user. Can be empty string, if user did not press anything, or `null` in case of IVR if user did not participate in Collect action."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the call, in seconds.",
                        "format": "int32"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was ended."
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#error-object-example"
                        }
                    },
                    "fileDuration": {
                        "type": "number",
                        "description": "Duration of the Voice message audio file.",
                        "format": "double"
                    },
                    "mccMnc": {
                        "type": "string",
                        "description": "Mobile country and network codes."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Message ID."
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Price"
                            }
                        ],
                        "description": "Sent voice message price."
                    },
                    "recordedAudioFileUrl": {
                        "type": "string",
                        "description": "Url to retrieve recorded calls that were made by messages with the record feature activated.  Using that URL with GET method will initiate the download of the recorded file. If using a REST testing client, make sure to save the downloaded data instead of displaying it in the client’s response area. Recordings are encoded as PCM WAVE signed little-endian 16bit 8kHz audio files."
                    },
                    "scenarioId": {
                        "type": "string",
                        "description": "ID of IVR scenario."
                    },
                    "scenarioName": {
                        "type": "string",
                        "description": "Name of IVR scenario."
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`."
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Tells when the voice message call was established and started ringing."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.tts.v3.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "externalDocs": {
                            "description": "Response status and error codes",
                            "url": "https://dev.infobip.com/getting-started/response-status-and-error-codes#status-object-example"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination address."
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed.",
                        "readOnly": true
                    },
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per one SMS.",
                        "format": "double",
                        "readOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.AudioContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "properties": {
                    "mediaUrl": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of an audio sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported audio types are `AAC`, `AMR`, `MP3`, `MP4`, `OPUS`. Maximum audio size is 16MB."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobippushko.openapi.email.reports.deliveryReport.Price": {
                "title": "Price",
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the price is expressed.",
                        "writeOnly": true
                    },
                    "pricePerMessage": {
                        "type": "number",
                        "description": "Price per message.",
                        "format": "double",
                        "writeOnly": true
                    }
                }
            },
            "infobip-omni.openapi.RegionalData": {
                "required": [
                    "indiaDlt"
                ],
                "type": "object",
                "properties": {
                    "indiaDlt": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.IndiaDltOptions"
                    }
                },
                "description": "Region specific parameters, often specified by local laws. Use this if country or region that you are sending SMS to requires some extra parameters."
            },
            "infobip-ccaas-conversation-service.openapi.TagResultPage": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.org.infobip.ccaas.connector.model.tag.Tag"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": "{\n    \"tags\": [\n        {\n            \"name\": \"This is demo TAG1\",\n            \"createdAt\": \"2020-03-26T13:33:51.165+0000\"            \"updatedAt\": \"2020-03-26T13:33:51.165+0000\"        },\n        {\n            \"name\": \"This is demo TAG2\",\n            \"createdAt\": \"2020-03-24T22:21:53.132+0000\"            \"updatedAt\": \"2020-03-26T13:33:51.165+0000\"        }\n    ],\n    \"pagination\": {\n        \"totalItems\": 2,\n        \"page\": 0,\n        \"limit\": 10,\n        \"orderBy\": \"id:ASC\"\n    }\n}"
            },
            "infobip-ccaas-conversation-service.openapi.Container": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BUBBLE",
                            "CAROUSEL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "BUBBLE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.BubbleContainer",
                        "CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CarouselContainer"
                    }
                }
            },
            "infobip-omni.openapi.KakaoAlimMessageDeliveryButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.KakaoAlimButton"
                    }
                ]
            },
            "infobippushko.openapi.whatsapp.mo.reports.waDeletedReportResponse": {
                "title": "WhatsAppDeletedReportResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.waDeletedReport"
                        },
                        "description": "Collection of reports, one per every received message."
                    }
                }
            },
            "infobippushko.openapi.whatsapp.Name": {
                "title": "Name",
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of a contact. Mandatory value.",
                        "writeOnly": true
                    },
                    "formattedName": {
                        "type": "string",
                        "description": "Full name as it normally appears. Mandatory value.",
                        "writeOnly": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of a contact.",
                        "writeOnly": true
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Middle name of a contact.",
                        "writeOnly": true
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "Name suffix of a contact.",
                        "writeOnly": true
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "Name prefix of a contact.",
                        "writeOnly": true
                    }
                },
                "description": "Full contact name."
            },
            "infobip-ccaas-conversation-service.openapi.MediaMention": {
                "type": "object",
                "properties": {
                    "startPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "externalCreatedBy": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveHeaderWhatsAppContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "DOCUMENT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveTextHeaderWhatsAppContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveImageHeaderWhatsAppContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveVideoHeaderWhatsAppContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveDocumentHeaderWhatsAppContent"
                    }
                }
            },
            "infobipapimanagementother.openapi.tfa.api.model.tfa.service.v2.ResendPinRequest": {
                "title": "ResendPinRequest",
                "type": "object",
                "properties": {
                    "placeholders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key value pairs that will be replaced during message sending. Placeholder keys should NOT contain curly brackets and should NOT contain a `pin` placeholder. Valid example: `\"placeholders\":{\"firstName\":\"John\"}`",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveActionButtonWhatsAppContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "REPLY"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "REPLY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveActionButtonReplyWhatsAppContent"
                    }
                }
            },
            "infobip-email-api-amg.openapi.BulkStatusInfo": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.BulkStatus"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateDocumentHeaderContent": {
                "required": [
                    "filename",
                    "mediaUrl"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mediaUrl": {
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string",
                                "description": "URL of a document sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported document type is `PDF`. Maximum document size is 100MB."
                            },
                            "filename": {
                                "maxLength": 240,
                                "minLength": 1,
                                "type": "string",
                                "description": "Filename of the document."
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.FileFacebookMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TextTwitterTweetMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "mentions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaMention"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-recording-amg.openapi.Recording": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fileFormat": {
                        "type": "string"
                    },
                    "fileSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "transferTo": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "bulkId": {
                        "type": "string"
                    },
                    "communicationName": {
                        "type": "string"
                    },
                    "featureType": {
                        "type": "string"
                    },
                    "featureName": {
                        "type": "string"
                    },
                    "scenarioId": {
                        "type": "string"
                    },
                    "scenarioName": {
                        "type": "string"
                    },
                    "recordActionIdentifier": {
                        "type": "string"
                    },
                    "agentId": {
                        "type": "string"
                    },
                    "transferToAgentId": {
                        "type": "string"
                    },
                    "transferFromAgentId": {
                        "type": "string"
                    },
                    "correlationId": {
                        "type": "string"
                    },
                    "conversationId": {
                        "type": "string"
                    },
                    "callId": {
                        "type": "string"
                    },
                    "shippingStatus": {
                        "enum": [
                            "NONE",
                            "IN_PROGRESS",
                            "SHIPPED",
                            "FAILED_NOT_DELETED",
                            "FAILED_DELETED"
                        ],
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "contentId": {
                        "type": "string"
                    },
                    "videoCompositionStatus": {
                        "type": "string"
                    },
                    "availableForDownload": {
                        "type": "boolean"
                    },
                    "sourceStatus": {
                        "enum": [
                            "RECORDED",
                            "DELETED"
                        ],
                        "type": "string"
                    },
                    "downloadStatus": {
                        "enum": [
                            "NONE",
                            "DELETED",
                            "PENDING",
                            "PREPARING",
                            "FAILED",
                            "READY",
                            "SFTP",
                            "UPLOADING_SFTP"
                        ],
                        "type": "string"
                    },
                    "fileType": {
                        "type": "string"
                    },
                    "actions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "PREPARE_DOWNLOAD",
                                "DOWNLOAD",
                                "DELETE_DOWNLOAD",
                                "DELETE_SOURCE",
                                "STREAM"
                            ],
                            "type": "string"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TwitterTweetContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotSenderDisplayInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 28,
                        "minLength": 0,
                        "type": "string"
                    },
                    "avatarUrl": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TelegramOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramSender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramChat"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramContent"
                            },
                            "parseMode": {
                                "enum": [
                                    "MARKDOWN_V2",
                                    "HTML",
                                    "MARKDOWN"
                                ],
                                "type": "string"
                            },
                            "replyMarkup": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyMarkup"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.PostbackAction": {
                "required": [
                    "data",
                    "label"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            },
                            "displayText": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            },
                            "text": {
                                "maxLength": 300,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.FormResultPage": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Form"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-disposition.openapi.Pagination"
                    }
                },
                "example": {
                    "items": [
                        {
                            "id": "75f57446-1d65-478a-87ed-22d17dc3d077",
                            "title": "Granulation",
                            "isEnabled": true,
                            "isDefault": false,
                            "fields": null,
                            "createdAt": "2021-03-29T14:04:48.4683460+00:00",
                            "updatedAt": "2021-03-29T14:04:48.4683490+00:00"
                        },
                        {
                            "id": "269757a0-38a6-4226-a8db-cc27930f6a2f",
                            "title": "Demo form",
                            "isEnabled": false,
                            "isDefault": false,
                            "fields": null,
                            "createdAt": "2021-04-17T07:54:44.4017720+00:00",
                            "updatedAt": "2021-04-17T07:54:44.4017730+00:00"
                        }
                    ],
                    "pagination": {
                        "totalItems": 2,
                        "page": 0,
                        "limit": 10,
                        "orderBy": {
                            "property": "id",
                            "direction": "ASC"
                        }
                    }
                }
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.reports.OMNIReportsResponse": {
                "title": "OMNIReportsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.reports.OMNIReport"
                        },
                        "description": "Collection of reports, one per every message.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.customAttributes.IamCustomAttribute": {
                "title": "IamCustomAttribute",
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date and time of creation",
                        "readOnly": true
                    },
                    "dataType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.IamAdditionalFieldDataType"
                            }
                        ],
                        "description": "Custom attribute type."
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "Date and time of last modification",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom attribute name, 256 characters max. Invalid characters: `{}[]`."
                    },
                    "objectSchema": {
                        "type": "object",
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.IamAdditionalFieldDataType"
                                }
                            ]
                        },
                        "description": "Object schema for `LIST_OF_OBJECTS` type. Defines the shape of the list items."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.CheckboxGroup": {
                "required": [
                    "component",
                    "fieldId",
                    "isHidden",
                    "isRequired",
                    "options"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInputElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isRequired": {
                                "type": "boolean"
                            },
                            "isHidden": {
                                "type": "boolean"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InputOption"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamViberBotsContact": {
                "title": "IamViberBotsContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobip-voice-api-amg.openapi.org.infobip.voice.api.calls.log.VoiceCallsLogResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-voice-api-amg.openapi.VoiceCallsLog"
                        },
                        "description": "Array of voice calls logs, one object per each call."
                    }
                }
            },
            "infobip-omni.openapi.ImageComponent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "flex": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "margin": {
                        "enum": [
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "NONE"
                        ],
                        "type": "string"
                    },
                    "align": {
                        "enum": [
                            "START",
                            "END",
                            "CENTER"
                        ],
                        "type": "string"
                    },
                    "gravity": {
                        "enum": [
                            "TOP",
                            "BOTTOM",
                            "CENTER"
                        ],
                        "type": "string"
                    },
                    "size": {
                        "enum": [
                            "XXS",
                            "XS",
                            "SM",
                            "MD",
                            "LG",
                            "XL",
                            "XXL",
                            "XXXL",
                            "XXXXL",
                            "XXXXXL",
                            "FULL"
                        ],
                        "type": "string"
                    },
                    "aspectRatio": {
                        "type": "string"
                    },
                    "aspectMode": {
                        "enum": [
                            "COVER",
                            "FIT"
                        ],
                        "type": "string"
                    },
                    "backgroundColor": {
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                    },
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mo.reports.MOReport": {
                "title": "MOReport",
                "type": "object",
                "properties": {
                    "callbackData": {
                        "type": "string",
                        "description": "Custom callback data can be inserted during the setup phase.",
                        "readOnly": true
                    },
                    "cleanText": {
                        "type": "string",
                        "description": "Text of received message without a keyword (if a keyword was sent).",
                        "readOnly": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Sender ID that can be alphanumeric or numeric.",
                        "readOnly": true
                    },
                    "keyword": {
                        "type": "string",
                        "description": "Keyword extracted from the message text.",
                        "readOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the received message.",
                        "readOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.Price"
                            }
                        ]
                    },
                    "receivedAt": {
                        "type": "string",
                        "description": "Tells when Infobip platform received the message. It has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Full text of the received message.",
                        "readOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "readOnly": true
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.BulkMessageInfo": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.SingleMessageInfo"
                        },
                        "description": "Array of sent message objects, one object per every message."
                    },
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "example": "2034072219640523073"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.LocationHeaderApiData": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.HeaderApiData"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LineInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.GoogleAgent": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Contact": {
                "required": [
                    "name",
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 28,
                        "minLength": 0,
                        "type": "string"
                    },
                    "phoneNumber": {
                        "maxLength": 18,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobip-email-validation-amg.openapi.ApiRequestError": {
                "type": "object",
                "properties": {
                    "serviceException": {
                        "$ref": "#/components/schemas/infobip-email-validation-amg.openapi.ApiRequestErrorDetails"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.ButtonApiData": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "URL",
                            "QUICK_REPLY"
                        ],
                        "type": "string"
                    },
                    "text": {
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string",
                        "description": "Button text."
                    }
                },
                "description": "Template buttons. Can be either up to 3 `quick reply` buttons or up to 2 `call to action` buttons. Call to action buttons must be unique in type.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PHONE_NUMBER": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.PhoneNumberButtonApiData",
                        "URL": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.UrlButtonApiData",
                        "QUICK_REPLY": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.QuickReplyButtonApiData"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InboundMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageObject"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Destination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Sender"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "channel",
                    "mapping": {
                        "SMS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SmsInboundMessage",
                        "RCS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsInboundMessage",
                        "VIBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberInboundMessage",
                        "WHATSAPP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppInboundMessage",
                        "FACEBOOK_MESSENGER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookInboundMessage",
                        "APPLE_BUSINESS_CHAT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleInboundMessage",
                        "LINE_OFFICIAL_ACCOUNT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineInboundMessage",
                        "LIVE_CHAT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundMessage",
                        "VOICE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VoiceInboundMessage",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoInboundMessage",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailInboundMessage",
                        "GOOGLE_BUSINESS_MESSAGES": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleInboundMessage",
                        "TELEGRAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramInboundMessage",
                        "CALLS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsInboundMessage",
                        "CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationInboundMessage",
                        "VIBER_BOT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotInboundMessage",
                        "FACEBOOK_POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostInboundMessage",
                        "INSTAGRAM_POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostInboundMessage",
                        "TWITTER_TWEET": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetInboundMessage",
                        "INSTAGRAM_MESSAGING": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingInboundMessage",
                        "KAKAO_SANGDAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamInboundMessage",
                        "TWITTER_DM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmInboundMessage"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.TemplateDataContent": {
                "required": [
                    "body"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateBodyContent"
                    },
                    "header": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateHeaderContent"
                    },
                    "buttons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateButtonContent"
                        },
                        "description": "Template buttons. Should be defined in correct order, only if `quick reply` or `dynamic URL` buttons have been registered. It can have up to three `quick reply` buttons or only one `dynamic URL` button."
                    }
                },
                "description": "Template data. Values have to be set as registered in the template."
            },
            "infobip-ccaas-conversation-service.openapi.OutboundMessage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MessageObject"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Sender"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Destination"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "channel",
                    "mapping": {
                        "SMS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SmsOutboundMessage",
                        "RCS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsOutboundMessage",
                        "VIBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberOutboundMessage",
                        "WHATSAPP": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppOutboundMessage",
                        "VK": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkOutboundMessage",
                        "FACEBOOK_MESSENGER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookOutboundMessage",
                        "APPLE_BUSINESS_CHAT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleOutboundMessage",
                        "LINE_OFFICIAL_ACCOUNT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineOutboundMessage",
                        "LIVE_CHAT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatOutboundMessage",
                        "VOICE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VoiceOutboundMessage",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoOutboundMessage",
                        "ZALO_NOTIFICATION_SERVICE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ZaloOutboundMessage",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EmailOutboundMessage",
                        "GOOGLE_BUSINESS_MESSAGES": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleOutboundMessage",
                        "TELEGRAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TelegramOutboundMessage",
                        "CALLS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundMessage",
                        "CONVERSATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ConversationOutboundMessage",
                        "VIBER_BOT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotOutboundMessage",
                        "FACEBOOK_POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPostOutboundMessage",
                        "INSTAGRAM_POST": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramPostOutboundMessage",
                        "TWITTER_TWEET": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterTweetOutboundMessage",
                        "INSTAGRAM_MESSAGING": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingOutboundMessage",
                        "KAKAO_SANGDAM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamOutboundMessage",
                        "TWITTER_DM": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmOutboundMessage"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.KakaoSangdamOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamChannel"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamUser"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.KakaoSangdamContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.HangUpOutboundCallsContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CallsOutboundContent"
                    }
                ]
            },
            "infobip-email-api-amg.openapi.BulkScheduleResponse": {
                "type": "object",
                "properties": {
                    "externalBulkId": {
                        "type": "string"
                    },
                    "bulks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-email-api-amg.openapi.BulkInfo"
                        }
                    }
                }
            },
            "infobipamgnumbersapi.openapi.NumbersResponse": {
                "type": "object",
                "properties": {
                    "numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipamgnumbersapi.openapi.NumberResponse"
                        }
                    },
                    "numberCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InteractiveListWhatsAppContent": {
                "required": [
                    "action",
                    "body"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContentBody"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "header": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveTextHeaderWhatsAppContent"
                            },
                            "body": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveBodyWhatsAppContent"
                            },
                            "footer": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveFooterWhatsAppContent"
                            },
                            "action": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveListActionWhatsAppContent"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.FailoverMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Registered WhatsApp sender number. Must be in international format."
                    },
                    "to": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "Message recipient number. Must be in international format."
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent."
                    },
                    "content": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.TemplateContent"
                    },
                    "callbackData": {
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Custom client data that will be included in Delivery Report."
                    },
                    "smsFailover": {
                        "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.Failover"
                    }
                },
                "description": "Array of messages that will be sent."
            },
            "infobip-iot-siman-service.iot.openapi.AddressV3": {
                "required": [
                    "address",
                    "city",
                    "country",
                    "firstName",
                    "lastName",
                    "phoneNumber",
                    "postalCode"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Street and street number of the shipping address.",
                        "example": "67 Tunnel Street"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name of the shipping address.",
                        "example": "New York"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal code of the shipping address.",
                        "example": "11375"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the shipping address.",
                        "example": "United States of America"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the shipping address.",
                        "example": "NY"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of person who is recieveing the package.",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of person who is recieveing the package.",
                        "example": "Doe"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number of person who is recieveing the package.",
                        "example": "+1 3143601890"
                    }
                },
                "description": "Shipping address of the ordered SIM cards.\n"
            },
            "infobip-omni.openapi.HorizontalVerticalBoxComponent": {
                "required": [
                    "contents",
                    "layout"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BoxComponent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contents": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                                }
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.viber.Type": {
                "title": "Type",
                "enum": [
                    "TEXT",
                    "FILE"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.TwitterAccount": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_PAGE",
                            "APPLE_BUSINESS_CHAT_ACCOUNT",
                            "LINE_OFFICIAL_ACCOUNT_SENDER",
                            "LIVE_CHAT_APPLICATION",
                            "ZALO_NOTIFICATION_SERVICE_SENDER",
                            "EMAIL",
                            "GOOGLE_AGENT",
                            "TELEGRAM",
                            "CONVERSATION",
                            "VIBER_BOT_SENDER",
                            "SOCIAL_PAGE",
                            "INSTAGRAM_BUSINESS_ACCOUNT",
                            "KAKAO_SANGDAM_CHANNEL",
                            "TWITTER_ACCOUNT"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatButtonResponseContent": {
                "required": [
                    "payloadType",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "payloadType": {
                                "enum": [
                                    "URL",
                                    "POSTBACK"
                                ],
                                "type": "string"
                            },
                            "payload": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.DocumentContent": {
                "required": [
                    "mediaUrl"
                ],
                "type": "object",
                "properties": {
                    "mediaUrl": {
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string",
                        "description": "URL of a document sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Maximum document size is 100MB."
                    },
                    "caption": {
                        "maxLength": 3000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Caption of the document."
                    },
                    "filename": {
                        "maxLength": 240,
                        "minLength": 0,
                        "type": "string",
                        "description": "Filename of the document."
                    }
                },
                "description": "Content of the message that will be sent."
            },
            "infobip-omni.openapi.Url": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "Url of a contact.",
                        "writeOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a url. Can be HOME, WORK.",
                        "writeOnly": true
                    }
                },
                "description": "Url information.",
                "writeOnly": true
            },
            "infobip-ccca.openapi.AccountWrapUp": {
                "required": [
                    "isActive",
                    "wrapUpSeconds"
                ],
                "type": "object",
                "properties": {
                    "wrapUpSeconds": {
                        "type": "integer",
                        "description": "Wrap up duration.",
                        "format": "int64"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Specifies whether the wrap up is activated."
                    }
                },
                "example": {
                    "wrapUpSeconds": 30,
                    "isActive": true
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextGoogleContent": {
                "required": [
                    "representative",
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string",
                                "description": "Message text"
                            },
                            "representative": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Representative"
                            },
                            "fallback": {
                                "type": "string"
                            },
                            "suggestions": {
                                "maxItems": 13,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.TemplateLineContent": {
                "required": [
                    "altText",
                    "template"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "altText": {
                                "maxLength": 400,
                                "minLength": 0,
                                "type": "string"
                            },
                            "template": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineTemplatePayload"
                            }
                        }
                    }
                ]
            },
            "infobipwhatsappstandaloneapiservice.openapi.SingleMessageStatus": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int32",
                        "example": 1
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name.",
                        "example": "PENDING"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int32",
                        "example": 7
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name.",
                        "example": "PENDING_ENROUTE"
                    },
                    "description": {
                        "type": "string",
                        "description": "Human-readable description of the status.",
                        "example": "Message sent to next instance"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action that should be taken to eliminate the error."
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.OrganizationContent": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string",
                        "description": "Company name."
                    },
                    "department": {
                        "type": "string",
                        "description": "Department name."
                    },
                    "title": {
                        "type": "string",
                        "description": "Title value."
                    }
                },
                "description": "Contains information about contact's company."
            },
            "infobip-ccaas-conversation-service.openapi.VideoContent": {
                "required": [
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CommonContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 800,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RcsContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VkContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookBodyContent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Filler": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Component"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.GoogleConversation": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "PHONE_NUMBER",
                            "FACEBOOK_MESSENGER_USER",
                            "APPLE_BUSINESS_CHAT_USER",
                            "LINE_OFFICIAL_ACCOUNT_USER",
                            "LIVE_CHAT_REGISTRATION",
                            "EMAIL",
                            "GOOGLE_CONVERSATION",
                            "TELEGRAM",
                            "AGENT",
                            "VIBER_BOT",
                            "SOCIAL_USER",
                            "INSTAGRAM_USER",
                            "INSTAGRAM_COMMENT",
                            "KAKAO_SANGDAM_USER",
                            "TWITTER_USER"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramBusinessAccount"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramDestination"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingContent"
                            },
                            "tag": {
                                "enum": [
                                    "HUMAN_AGENT"
                                ],
                                "type": "string"
                            },
                            "quickReplies": {
                                "maxItems": 13,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InstagramMessagingQuickReply"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.UriButtonAction": {
                "required": [
                    "label",
                    "uri"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.ButtonAction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "label": {
                                "maxLength": 20,
                                "minLength": 0,
                                "type": "string"
                            },
                            "uri": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-iot-siman-service.iot.openapi.OrderResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SIM cards order unique identifier.",
                        "example": "6a775ecd-1e83-4479-b7fc-6c3765abb595"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Unique account identifier of the SIM cards order owner.",
                        "example": "7a935aa4-589b-401f-a039-bd4d0e5c10bd"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of ordered SIM cards.",
                        "example": 100
                    },
                    "size": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.ModelSize"
                    },
                    "useCase": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.UseCase"
                    },
                    "mobileGeneration": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.MobileGeneration"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country in which the SIM cards will be used.",
                        "example": "United States of America"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.AddressV3"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.OrderStatus"
                    },
                    "createdAt": {
                        "type": "integer",
                        "description": "Orders creation timestamp.",
                        "format": "int64",
                        "example": 1591793700
                    },
                    "trialOrder": {
                        "type": "boolean",
                        "description": "Shows if ordered sims should be trial or not",
                        "example": true
                    }
                },
                "description": "Contains the details of the created SIM cards order.\n"
            },
            "infobipapimanagementother.openapi.tfa.org.infobip.api.ApiException": {
                "title": "ApiException",
                "type": "object",
                "properties": {
                    "requestError": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.tfa.org.infobip.api.ApiRequestError"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FormInfoElement": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "textContent": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.Url": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.api.v2.persons.model.PersonDestinationRequest": {
                "title": "PersonDestinationRequest",
                "required": [
                    "contactInformation"
                ],
                "type": "object",
                "properties": {
                    "contactInformation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.contactInformation.IamContactV2"
                            }
                        ],
                        "description": "Person's contact information"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AuthError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v1.persons.contacts.IamFacebookContact": {
                "title": "IamFacebookContact",
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application Id on which the user is subscribed",
                        "readOnly": true
                    },
                    "systemData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "System data collected from the user's profile",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique user ID for a person",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.binary.SMSAdvancedBinaryRequest": {
                "title": "SMSAdvancedBinaryRequest",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "writeOnly": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.binary.SMSBinaryMessage"
                        }
                    },
                    "sendingSpeedLimit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.send.v2.SendingSpeedLimit"
                            }
                        ],
                        "description": "Limit the sending speed for message bulks. In some use cases, you might want to reduce message sending speed if your message call to action involves visiting a website, calling your contact center or similar recipient activity, in which you can handle a limited amount of load. This setting helps you to spread the delivery of the messages over a longer period, allowing your systems or agents to handle incoming traffic in real-time, resulting in better customer satisfaction.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Title": {
                "required": [
                    "component",
                    "textContent"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormInfoElement"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FormElement"
                    }
                ]
            },
            "infobip-mms-service.openapi.MMSReportResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-mms-service.openapi.MMSReport"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingDefaultAction": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.ctc.v1.model.ClickToCallMessageBody": {
                "title": "ClickToCallMessageBody",
                "required": [
                    "messages"
                ],
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.ctc.v1.model.ClickToCallMessage"
                        },
                        "description": "Array of click to call messages to be sent."
                    }
                }
            },
            "infobipapimanagementother.openapi.email.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementother.openapi.email.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TimePickerAppleBusinessChatMoContent": {
                "required": [
                    "intentGroupLocale",
                    "requestIdentifier",
                    "selectedDuration",
                    "selectedTime",
                    "selectedTimeslotIdentifier"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleBusinessChatMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "requestIdentifier": {
                                "type": "string"
                            },
                            "selectedTime": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "selectedDuration": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "timezoneOffset": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "selectedTimeslotIdentifier": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatPreChatFormContentItem": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "DESCRIPTION",
                            "EMAIL",
                            "PHONE_NUMBER",
                            "PLAIN_TEXT",
                            "CHECKBOX",
                            "DROPDOWN"
                        ],
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "variableName": {
                        "type": "string"
                    }
                }
            },
            "infobipwhatsappstandaloneapiservice.openapi.InteractiveListActionContent": {
                "required": [
                    "sections",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "Title of the list. Does not allow emojis or markdown."
                    },
                    "sections": {
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsappstandaloneapiservice.openapi.InteractiveSectionContent"
                        },
                        "description": "Array of sections in the list."
                    }
                },
                "description": "Message action."
            },
            "infobippushko.openapi.number.masking.AudioCommand": {
                "title": "Audio command",
                "type": "object",
                "properties": {
                    "command": {
                        "enum": [
                            "dial",
                            "audio"
                        ],
                        "type": "string",
                        "description": "Command description"
                    },
                    "fileUrl": {
                        "type": "string",
                        "description": "Url of the audio file to be played to the caller"
                    },
                    "fileId": {
                        "type": "string",
                        "description": "Identification of the audio file to be played to the caller"
                    }
                }
            },
            "infobiprcsapi.openapi.TextRcsMtContent": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.RcsMtContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "maxLength": 1000,
                                "minLength": 1,
                                "type": "string",
                                "description": "Message text"
                            },
                            "suggestions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobiprcsapi.openapi.Suggestion"
                                },
                                "description": "List of suggestions"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ExternalLink": {
                "type": "object",
                "properties": {
                    "linkUri": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "label": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-disposition.openapi.OrderBy": {
                "type": "object",
                "properties": {
                    "property": {
                        "type": "string"
                    },
                    "direction": {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.BotResultPage": {
                "type": "object",
                "properties": {
                    "bots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Bot"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Pagination"
                    }
                },
                "example": {
                    "bots": [
                        {
                            "id": "309BB921757DEAC9BE79EC6259B31C8A",
                            "webhookUrl": "www.webhookurl.com/link1",
                            "displayName": "My Whatsapp Bot",
                            "channel": "WHATSAPP",
                            "destination": "447492263897",
                            "messagePersistencePolicy": "PERSIST_ALL",
                            "enabled": true,
                            "sessionTimeoutInSec": 120
                        },
                        {
                            "id": "6988D4642270FD8EF9EA833DCD972BB1",
                            "webhookUrl": "www.webhookurl.com/link2",
                            "displayName": "My Secret Bot",
                            "channel": "WHATSAPP",
                            "destination": "447492263899",
                            "messagePersistencePolicy": "PERSIST_NONE",
                            "enabled": true,
                            "sessionTimeoutInSec": 120
                        }
                    ],
                    "pagination": {
                        "totalItems": 2,
                        "page": 0,
                        "limit": 10,
                        "orderBy": "id:ASC"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMoQuickReply": {
                "type": "object",
                "properties": {
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-voice.openapi.OutboundCallCli": {
                "required": [
                    "agentId",
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "DID number that is used to originate the call. DID numbers can be configured through the portal, or using the 'Purchase a number' endpoint."
                    },
                    "to": {
                        "type": "string",
                        "description": "Destination number."
                    },
                    "conversationId": {
                        "type": "string",
                        "description": "Id of the created conversation",
                        "readOnly": true
                    },
                    "agentId": {
                        "type": "string",
                        "description": "Id of the agent originating the call."
                    }
                },
                "example": {
                    "from": "385998779621",
                    "to": "38761123123",
                    "agentId": "2010EA93ABC142E812C19F529BCBD22F"
                }
            },
            "infobip-webrtc-amg.openapi.Capabilities": {
                "type": "object",
                "properties": {
                    "recording": {
                        "enum": [
                            "ALWAYS",
                            "ON_DEMAND",
                            "DISABLED"
                        ],
                        "type": "string",
                        "description": "Whether to allow recording calls during the session. Possible values are `ALWAYS`, `ON_DEMAND` and `DISABLED`. If want to set `ALWAYS` or `ON_DEMAND`, the capability must be enabled on account level (please contact your account manager for this)."
                    }
                },
                "description": "Optional. The object containing permission for certain actions during the session."
            },
            "infobip-ccaas-conversation-service.openapi.WhatsAppInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberDestination"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberSender"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.WhatsAppMoContent"
                            },
                            "contact": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Profile"
                            }
                        }
                    }
                ]
            },
            "infobipzalozmsgatewayservice.openapi.ApiRequestErrorDetails": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "Identifier of the error.",
                        "example": "BAD_REQUEST"
                    },
                    "text": {
                        "type": "string",
                        "description": "Detailed error description.",
                        "example": "Bad request"
                    },
                    "validationErrors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Map of validation errors.",
                                "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                            },
                            "description": "Map of validation errors.",
                            "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                        },
                        "description": "Map of validation errors.",
                        "example": "\"request.message.content.media.file.url\": [\"is not a valid url\"]"
                    }
                }
            },
            "infobippushko.openapi.number.masking.DialCommand": {
                "title": "Dial command",
                "type": "object",
                "properties": {
                    "command": {
                        "enum": [
                            "dial",
                            "audio"
                        ],
                        "type": "string",
                        "description": "Command description"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Destination phone number to call"
                    },
                    "callerId": {
                        "type": "string",
                        "description": "Caller id that should be displayed to called party"
                    }
                }
            },
            "infobipapimanagement.openapi.customer.financeservice.account.balance.lib.AccountBalance": {
                "title": "AccountBalance",
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "number",
                        "format": "double"
                    },
                    "currency": {
                        "type": "string"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.PaginatedUsageForAccountResponse": {
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Number of the returned page"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Size of the returned page"
                    },
                    "sims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-iot-siman-service.iot.openapi.AccountUsageResponse"
                        }
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.common.PushBulkResponse": {
                "title": "PushBulkResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request."
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of recipients for targeted segment.",
                        "format": "int64"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagementmobile.openapi.push.org.infobip.push.common.PushStatusResponse"
                            }
                        ],
                        "description": "Message status."
                    },
                    "to": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "Recipient destination address."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.DocumentMediaTemplateHeaderContent": {
                "required": [
                    "filename",
                    "url"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "filename": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-voice.openapi.StatusResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "SUCCESS",
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "infobippushko.openapi.email.reports.DLRReportResponse": {
                "title": "EmailReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.email.reports.DeliveryReport"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-push-services-helper.openapi.ContactInformation": {
                "type": "object",
                "properties": {
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-push-services-helper.openapi.ContactInformationPhone"
                        }
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-push-services-helper.openapi.ContactInformationEmail"
                        }
                    }
                }
            },
            "infobip-omni.openapi.KakaoChinguButton": {
                "required": [
                    "buttonText"
                ],
                "type": "object",
                "properties": {
                    "buttonText": {
                        "maxLength": 28,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of the button. Max 28 characters.",
                        "writeOnly": true
                    },
                    "type": {
                        "enum": [
                            "URL",
                            "APP_LINK",
                            "BOT_KEYWORD",
                            "MESSAGE_DELIVERY"
                        ],
                        "type": "string"
                    }
                },
                "description": "Buttons to include in the message. Optional value. Max 5 buttons.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "APP_LINK": "#/components/schemas/infobip-omni.openapi.KakaoChinguAppLinkButton",
                        "URL": "#/components/schemas/infobip-omni.openapi.KakaoChinguUrlButton",
                        "MESSAGE_DELIVERY": "#/components/schemas/infobip-omni.openapi.KakaoChinguMessageDeliveryButton",
                        "BOT_KEYWORD": "#/components/schemas/infobip-omni.openapi.KakaoChinguBotKeywordButton"
                    }
                },
                "writeOnly": true
            },
            "infobip-ccaas-conversation-service.openapi.FacebookMtQuickReply": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "PHONE_NUMBER",
                            "EMAIL"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextFacebookMtQuickReply",
                        "PHONE_NUMBER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.PhoneNumberFacebookMtQuickReply",
                        "EMAIL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMtEmailQuickReply"
                    }
                }
            },
            "infobip-omni.openapi.FillerComponent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.HorizontalVerticalComponent"
                    },
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.BaselineComponent"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.MtContact": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MtAddress"
                        }
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date"
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Email"
                        }
                    },
                    "name": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MtName"
                    },
                    "org": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Organization"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MtPhone"
                        }
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Url"
                        }
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "infobip-push-services-helper.openapi.PushUserPersonalizationResponse": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Id of a user in external system"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User last name"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "User middle name"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "gender": {
                        "enum": [
                            "MALE",
                            "FEMALE"
                        ],
                        "type": "string",
                        "description": "User gender"
                    },
                    "customAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Set of custom key-value pairs where value can be any of `string`, `number`, `boolean`"
                        },
                        "description": "Set of custom key-value pairs where value can be any of `string`, `number`, `boolean`"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Set of string labels attached to the user"
                        },
                        "description": "Set of string labels attached to the user"
                    },
                    "contactInformation": {
                        "$ref": "#/components/schemas/infobip-push-services-helper.openapi.ContactInformation"
                    }
                }
            },
            "infobippushko.openapi.rcs.mo.reports.MoReport": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.MoReportBase"
                    },
                    {
                        "properties": {
                            "integrationType": {
                                "enum": [
                                    "RCS"
                                ],
                                "type": "string",
                                "description": "RCS integration type",
                                "writeOnly": true
                            },
                            "message": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.TextMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.FileMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.LocationMessage"
                                    },
                                    {
                                        "$ref": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.SuggestionMessage"
                                    }
                                ],
                                "description": "Message content.",
                                "discriminator": {
                                    "propertyName": "type",
                                    "mapping": {
                                        "TEXT": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.TextMessage",
                                        "FILE": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.FileMessage",
                                        "LOCATION": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.LocationMessage",
                                        "SUGGESTION": "#/components/schemas/infobippushko.openapi.rcs.mo.reports.SuggestionMessage"
                                    }
                                },
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-disposition.openapi.DispositionFieldBasic": {
                "type": "object",
                "properties": {
                    "fieldId": {
                        "type": "string",
                        "description": "Field id."
                    },
                    "dispositionId": {
                        "type": "string",
                        "description": "Disposition id."
                    },
                    "dispositionValue": {
                        "type": "string",
                        "description": "Value of the field."
                    }
                },
                "description": "A list of fields with values."
            },
            "infobip-ccaas-conversation-service.openapi.LiveChatInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatRegistration"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatApplication"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LiveChatInboundContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ApplePayShippingMethod": {
                "required": [
                    "amount",
                    "detail",
                    "identifier",
                    "label"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "infobipapimanagement.openapi.voip.voip.util.DeliveryTimeWindow": {
                "title": "DeliveryTimeWindow",
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryDay"
                        }
                    },
                    "from": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryTime"
                            }
                        ]
                    },
                    "to": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.voip.voip.util.DeliveryTime"
                            }
                        ]
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonBackground": {
                "type": "object",
                "properties": {
                    "color": {
                        "pattern": "^[#]([A-Fa-f0-9]{6})$",
                        "type": "string"
                    },
                    "frame": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotButtonBackgroundFrame"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "mediaType": {
                        "enum": [
                            "IMAGE",
                            "GIF"
                        ],
                        "type": "string"
                    },
                    "mediaScaleType": {
                        "enum": [
                            "CROP",
                            "FILL",
                            "FIT"
                        ],
                        "type": "string"
                    },
                    "gifLoop": {
                        "type": "boolean"
                    }
                }
            },
            "infobip-iot-siman-service.iot.openapi.Address": {
                "required": [
                    "address",
                    "city",
                    "country",
                    "postalCode"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Street and street number of the shipping address.",
                        "example": "67 Tunnel Street"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name of the shipping address.",
                        "example": "New York"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal code of the shipping address.",
                        "example": "11375"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the shipping address.",
                        "example": "United States of America"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the shipping address.",
                        "example": "NY"
                    }
                },
                "description": "Shipping address of the ordered SIM cards.\n"
            },
            "infobip-omni.openapi.WhatsAppData": {
                "required": [
                    "mediaTemplateData",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text of the message that will be sent.",
                        "writeOnly": true
                    },
                    "validityPeriod": {
                        "type": "integer",
                        "description": "The message validity period. Unless specified differently in validityPeriodTimeUnit, it is expressed in minutes. When the period expires, the message will be automatically sent using the next OMNI step. Validity period longer than 48h is not supported (in this case, it will be automatically set to 48h). Additionally, period should be longer than 30 seconds.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "validityPeriodTimeUnit": {
                        "enum": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                        ],
                        "type": "string",
                        "description": "The message validity period time unit, allowing finer time granulation.",
                        "default": "MINUTES",
                        "writeOnly": true
                    },
                    "templateNamespace": {
                        "type": "string",
                        "description": "Template namespace",
                        "writeOnly": true
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name",
                        "writeOnly": true
                    },
                    "templateData": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Template parameters values ordered as registered in template",
                            "writeOnly": true
                        },
                        "description": "Template parameters values ordered as registered in template",
                        "writeOnly": true
                    },
                    "mediaTemplateData": {
                        "$ref": "#/components/schemas/infobip-omni.openapi.MediaTemplateData"
                    },
                    "language": {
                        "type": "string",
                        "description": "The code of the language or locale to use. Needs to be exactly the code with which the template was registered.",
                        "writeOnly": true
                    },
                    "fileUrl": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the file sent in the WhatsApp message. Max 2048 characters. Supported file types are PDF, DOC(X), PPT(X), XLS(X). Maximum file size is 100MB.",
                        "writeOnly": true
                    },
                    "imageUrl": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the image sent in the WhatsApp message. Max 2048 characters. Supported image types: JPG, JPEG, PNG. Maximum image size is 5MB.",
                        "writeOnly": true
                    },
                    "audioUrl": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the audio file sent in the WhatsApp message. Max 2048 characters. Supported audio types are AAC, AMR, MP3, OPUS. Maximum audio size is 16MB.",
                        "writeOnly": true
                    },
                    "videoUrl": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "description": "URL of the video sent in the WhatsApp message. Max 2048 characters. Supported video types are MP4, 3GPP. Maximum video size is 16MB.",
                        "writeOnly": true
                    },
                    "locationName": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of the location. Optional value. ",
                        "writeOnly": true
                    },
                    "address": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Address location. Optional value.",
                        "writeOnly": true
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Longitude of a coordinate. The value must be between -180 and 180",
                        "format": "double",
                        "writeOnly": true
                    },
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Latitude of a coordinate. The value must be between -90 and 90.",
                        "format": "double",
                        "writeOnly": true
                    },
                    "previewUrl": {
                        "type": "boolean",
                        "description": "`Options`: false (default), true <br/>Specifying previewUrl in the request is optional when not including a URL in your message. <br/>To include a URL preview, set previewUrl to true in the message body and make sure that URL begins with http:// or https:/",
                        "writeOnly": true
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.Contact"
                        }
                    }
                },
                "description": "WhatsApp-specific data used if the message is sent through a WhatsApp channel."
            },
            "infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.logs.SMSLogsResponse": {
                "title": "SMSLogsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagementother.openapi.core-acceptor-service.infobip.api.models.sms.mt.logs.SMSLog"
                        },
                        "description": "Collection of logs.",
                        "readOnly": true
                    }
                }
            },
            "infobip-omni.openapi.BaselineComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "BOX",
                            "BUTTON",
                            "FILLER",
                            "ICON",
                            "IMAGE",
                            "SEPARATOR",
                            "SPACER",
                            "TEXT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "FILLER": "#/components/schemas/infobip-omni.openapi.FillerComponent",
                        "TEXT": "#/components/schemas/infobip-omni.openapi.TextComponent",
                        "ICON": "#/components/schemas/infobip-omni.openapi.IconComponent",
                        "SPACER": "#/components/schemas/infobip-omni.openapi.SpacerComponent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.FacebookInboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookUser"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookPage"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookMoContent"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.ott.SeenReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.SeenDeletedBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "seenAt": {
                                "type": "string",
                                "description": "Tells when the message was seen.",
                                "format": "date-time",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.NsResolveRequestDto": {
                "required": [
                    "callbackUrl",
                    "consentGranted",
                    "deviceIp"
                ],
                "type": "object",
                "properties": {
                    "consentGranted": {
                        "type": "boolean",
                        "description": "Indicates whether you have consent from mobile phone number's owner to perform this request. All requests that do not have this property set to \"true\" will be rejected",
                        "default": false,
                        "example": true
                    },
                    "deviceIp": {
                        "type": "string",
                        "description": "IPv4 or IPv6 address of the mobile device that will be verified with operator",
                        "format": "xxx.xxx.xxx.xxx|xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx",
                        "example": "10.20.30.100|1111:22222:3333:4444:AAAA:BBBB:CCCC:DDDD"
                    },
                    "devicePort": {
                        "type": "integer",
                        "description": "Port of the mobile device that will be verified with operator. Can be used only when \"deviceIp\" is also provided",
                        "format": "int32",
                        "example": 54321
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "Your URL that will be called to provide resolve result when the process is complete. \nCallback request will be sent using HTTP <code>POST</code> method\nand it only expects <code>200 OK</code> status with <code>no content</code> in response.<br>\nExample of successful resolve request:\n<br>\n<pre><code>\n{\n    \"msisdn\": \"441134961234\",\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"error\": \"null\"\n}\n</code></pre>\nExample of unsuccessful resolve request:\n<br>\n<pre><code>\n{\n    \"msisdn\": \"null\",\n    \"token\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"error\": {\n        \"id\": 202,\n        \"name\": \"EC_CONSENT_NOT_GRANTED\",\n        \"description\": \"User consent not granted\"\n    },\n}\n</code></pre>",
                        "example": "https://my-site.com/my-path"
                    },
                    "returnUrl": {
                        "type": "string",
                        "description": "An URL to which the mobile device will be redirected to when number share resolve is complete.",
                        "example": "https://my-site.com/my-shop.html"
                    }
                },
                "description": "Number share resolve request object"
            },
            "infobipapimanagement.openapi.omni.infobip.api.models.omni.logs.OmniLogsResponse": {
                "title": "OmniLogsResponse",
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.infobip.api.models.omni.logs.OmniLog"
                        },
                        "description": "Collection of logs.",
                        "readOnly": true
                    }
                }
            },
            "infobipapimanagement.openapi.omni.org.infobip.api.ApiRequestError": {
                "title": "ApiRequestError",
                "type": "object",
                "properties": {
                    "serviceException": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobipapimanagement.openapi.omni.org.infobip.api.ApiRequestErrorDetails"
                            }
                        ]
                    }
                }
            },
            "infobippushko.openapi.whatsapp.mo.reports.whatsappReportResponse": {
                "title": "WhatsappReportResponse",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobippushko.openapi.whatsapp.mo.reports.MoReport"
                                },
                                "description": "Collection of reports, one per every received message."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.MessageCount"
                    }
                ]
            },
            "infobippushko.openapi.ott.mo.reports.SimpleReport": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.IntegrationType"
                    },
                    {
                        "properties": {
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "enum": [
                                            "TEXT"
                                        ],
                                        "type": "string",
                                        "description": "Message type.",
                                        "writeOnly": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "Incoming message text.",
                                        "writeOnly": true
                                    }
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.ott.MoReportBase"
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.CardGoogleContent": {
                "required": [
                    "content",
                    "representative"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GoogleContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardContent"
                            },
                            "representative": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Representative"
                            },
                            "fallback": {
                                "type": "string"
                            },
                            "suggestions": {
                                "maxItems": 13,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Suggestion"
                                }
                            }
                        }
                    }
                ]
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.v2.persons.IamTypeV2": {
                "title": "IamTypeV2",
                "enum": [
                    "CUSTOMER",
                    "LEAD"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.DefaultAction": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.TextTwitterDmMoContent": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mid": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "quickReply": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TwitterDmMoQuickReply"
                            },
                            "replyTo": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ReplyToTwitterDmMoContent"
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.GbmMoContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Context"
                    },
                    "type": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "SUGGESTION_RESPONSE",
                            "SURVEY_RESPONSE",
                            "REQUESTED_LIVE_AGENT"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextGbmMoContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageGbmMoContent",
                        "SUGGESTION_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SuggestionResponseGbmMoContent",
                        "SURVEY_RESPONSE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SurveyResponseGbmMoContent",
                        "REQUESTED_LIVE_AGENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.RequestedLiveAgentGbmMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AudioLineMoContent": {
                "required": [
                    "duration",
                    "moAttachment",
                    "replyToken",
                    "timestamp"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "replyToken": {
                                "type": "string"
                            },
                            "moAttachment": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LineMoAttachment"
                            },
                            "duration": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-push-services-helper.openapi.PushApiInstanceSystemData": {
                "type": "object",
                "properties": {
                    "cloudType": {
                        "enum": [
                            "GCM",
                            "APNS",
                            "HMS",
                            "WEB"
                        ],
                        "type": "string",
                        "description": "Push registration id of the instance",
                        "readOnly": true
                    },
                    "registrationEnabled": {
                        "type": "boolean",
                        "description": "State of the device registration"
                    },
                    "notificationsEnabled": {
                        "type": "boolean",
                        "description": "Set to `true` if notifications are enabled on a device",
                        "readOnly": true
                    },
                    "geofencingSdk": {
                        "type": "boolean",
                        "description": "Set to `true` if geo fencing is enabled on a device",
                        "readOnly": true
                    },
                    "sdkVersion": {
                        "type": "string",
                        "description": "SDK version that is running on a device",
                        "readOnly": true
                    },
                    "appVersion": {
                        "type": "string",
                        "description": "The version of the application which SDK is embedded into",
                        "readOnly": true
                    },
                    "os": {
                        "enum": [
                            "Android",
                            "iOS"
                        ],
                        "type": "string",
                        "description": "Operating system type can be `Android` or `iOS`",
                        "readOnly": true
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "The version of the operating system",
                        "readOnly": true
                    },
                    "deviceManufacturer": {
                        "type": "string",
                        "description": "The manufacturer of the device as detected by the SDK",
                        "readOnly": true
                    },
                    "deviceModel": {
                        "type": "string",
                        "description": "The model of the device",
                        "readOnly": true
                    },
                    "deviceSecure": {
                        "type": "boolean",
                        "description": "Set to `true` if the device has any type of secure screen lock set up",
                        "readOnly": true
                    },
                    "osLanguage": {
                        "type": "string",
                        "description": "An identifier of the language used on a device",
                        "readOnly": true
                    },
                    "deviceTimezoneOffset": {
                        "type": "string",
                        "description": "UTC-related timezone offset that identifies a current timezone of a device",
                        "readOnly": true
                    },
                    "deviceName": {
                        "type": "string",
                        "description": "The name of the device as configured by a user",
                        "readOnly": true
                    }
                },
                "description": "Set of push-specific attributes"
            },
            "infobipwhatsapptemplatemanagement.openapi.HeaderApiData": {
                "type": "object",
                "properties": {
                    "format": {
                        "enum": [
                            "TEXT",
                            "IMAGE",
                            "VIDEO",
                            "DOCUMENT",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "description": "Template header. Can be `image`, `document`, `video`, `location` or `text`.",
                "discriminator": {
                    "propertyName": "format",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.TextHeaderApiData",
                        "IMAGE": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ImageHeaderApiData",
                        "VIDEO": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.VideoHeaderApiData",
                        "DOCUMENT": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.DocumentHeaderApiData",
                        "LOCATION": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.LocationHeaderApiData"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotMessageMoContent": {
                "required": [
                    "message",
                    "messageToken",
                    "timestamp",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoContent"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chatHostname": {
                                "type": "string"
                            },
                            "message": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMoMessage"
                            },
                            "sender": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotUser"
                            },
                            "silent": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "infobip-omni.openapi.com.infobip.omni.api.controller.response.OmniResponse": {
                "title": "OmniResponse",
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID which uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.",
                        "readOnly": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobip-omni.openapi.OmniResponseDetails"
                        },
                        "description": "Array of sent message objects, one object per every message.",
                        "readOnly": true
                    }
                }
            },
            "infobip-omni.openapi.CarouselFlexContainer": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-omni.openapi.FlexContainer"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contents": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-omni.openapi.BubbleFlexContainer"
                                }
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.ZaloContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateZaloContent"
                    }
                }
            },
            "infobippushko.openapi.reports.dlr.Report": {
                "type": "object",
                "properties": {
                    "bulkId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the request.",
                        "writeOnly": true
                    },
                    "price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Price"
                            }
                        ],
                        "description": "Sent message price.",
                        "writeOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Status"
                            }
                        ],
                        "description": "Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.",
                        "writeOnly": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/infobippushko.openapi.infobip.api.models.Error"
                            }
                        ],
                        "description": "Indicates whether the error occurred during the query execution.",
                        "writeOnly": true
                    },
                    "messageId": {
                        "type": "string",
                        "description": "The ID that uniquely identifies the message sent.",
                        "writeOnly": true
                    },
                    "doneAt": {
                        "type": "string",
                        "description": "Tells when the message was finished processing by Infobip (ie. delivered to destination, delivered to destination network, etc.).",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "The number of sent message segments.",
                        "format": "int32",
                        "writeOnly": true
                    },
                    "sentAt": {
                        "type": "string",
                        "description": "Tells when the message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "to": {
                        "type": "string",
                        "description": "The message destination address.",
                        "writeOnly": true
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.RcsMoContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "TEXT",
                            "FILE",
                            "LOCATION",
                            "SUGGESTION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextRcsMoContent",
                        "FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileRcsMoContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationRcsMoContent",
                        "SUGGESTION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SuggestionRcsMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.GoogleContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextGoogleContent",
                        "CARD": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardGoogleContent",
                        "CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CarouselGoogleContent",
                        "SURVEY": "#/components/schemas/infobip-ccaas-conversation-service.openapi.SurveyGoogleContent",
                        "EVENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.EventGoogleContent"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplatesApiResponse": {
                "title": "TemplatesResponse",
                "type": "object",
                "properties": {
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.com.infobip.whatsapp.template.management.api.TemplateApiResponse"
                        },
                        "description": "List of all templates for given sender."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.AppleOutboundMessage": {
                "required": [
                    "content",
                    "from",
                    "to"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.OutboundMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "from": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleAccount"
                            },
                            "to": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleUser"
                            },
                            "content": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AppleContent"
                            }
                        }
                    }
                ]
            },
            "infobippushko.openapi.viber.mo.reports.FileMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobippushko.openapi.viber.mo.reports.MoMessage"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "URL of received file.",
                                "writeOnly": true
                            },
                            "fileName": {
                                "type": "string",
                                "description": "Name of received file.",
                                "writeOnly": true
                            },
                            "trackingData": {
                                "type": "string",
                                "description": "Viber's tracking data from outgoing message that end user replies to. Might be random string of characters if not set explicitly in outgoing message.",
                                "writeOnly": true
                            },
                            "pairedMessageId": {
                                "type": "string",
                                "description": "Message ID of paired outgoing message if matched by Infobip platform.",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "infobip-ccaas-conversation-service.openapi.RcsContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentContent",
                        "RCS_FILE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FileRcsContent",
                        "RCS_CARD": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CardRcsContent",
                        "RCS_CAROUSEL": "#/components/schemas/infobip-ccaas-conversation-service.openapi.CarouselRcsContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.InstagramMessagingTemplatePayload": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "GENERIC"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "GENERIC": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GenericInstagramMessagingTemplatePayload"
                    }
                }
            },
            "infobipwhatsapptemplatemanagement.openapi.QuickReplyButtonApiData": {
                "required": [
                    "text"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobipwhatsapptemplatemanagement.openapi.ButtonApiData"
                    }
                ]
            },
            "infobiprcsapi.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobiprcsapi.openapi.ApiRequestError"
                    }
                }
            },
            "infobipmiyuloregatewayservice.openapi.SingleMessageInfo": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Message destination",
                        "example": "385977666618"
                    },
                    "messageCount": {
                        "type": "integer",
                        "description": "Number of messages required to deliver textPreview",
                        "format": "int32",
                        "example": 1
                    },
                    "messageId": {
                        "type": "string",
                        "description": "Uniquely identifies the message sent",
                        "example": "06df139a-7eb5-4a6e-902e-40e892210455"
                    },
                    "status": {
                        "$ref": "#/components/schemas/infobipmiyuloregatewayservice.openapi.SingleMessageStatus"
                    }
                }
            },
            "mobile-identity-service.openapi.SimSwapCheckRequestDto": {
                "required": [
                    "consentGranted",
                    "period",
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "consentGranted": {
                        "type": "boolean",
                        "description": "Indicates whether you have consent from mobile phone number's owner to perform this request. All requests that do not have this property set to \"true\" will be rejected",
                        "default": false,
                        "example": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Mobile phone number (MSISDN) to verify. The number must be in international format",
                        "example": "441134961234"
                    },
                    "period": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Sim swap check will be verified with MNO in \"period\" amount of hours from when this request was received. The value should be greater than 0.",
                        "format": "int32",
                        "example": 15
                    }
                },
                "description": "Sim Swap request object"
            },
            "infobip-email-api-amg.openapi.ApiException": {
                "type": "object",
                "properties": {
                    "requestError": {
                        "$ref": "#/components/schemas/infobip-email-api-amg.openapi.ApiRequestError"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.GenericFacebookTemplatePayload": {
                "required": [
                    "elements"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.FacebookTemplatePayload"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "elements": {
                                "maxItems": 10,
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.GenericTemplateElement"
                                }
                            }
                        }
                    }
                ]
            },
            "mobile-identity-service.openapi.NsResolveResponseDto": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/mobile-identity-service.openapi.ErrorDto"
                    },
                    "status": {
                        "enum": [
                            "OK",
                            "REDIRECT",
                            "ERROR"
                        ],
                        "type": "string",
                        "description": "Number share resolve request status"
                    },
                    "token": {
                        "type": "string",
                        "description": "Unique request ID",
                        "format": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    "deviceRedirectUrl": {
                        "type": "string",
                        "description": "An URL to perform mobile device redirect to if specified so by 'status'",
                        "example": "https://mno.com/smv-check-endpoint"
                    }
                },
                "description": "Number share resolve response object"
            },
            "infobip-ccaas-conversation-service.openapi.MediaTemplateHeaderContent": {
                "type": "object",
                "properties": {
                    "format": {
                        "enum": [
                            "TEXT",
                            "DOCUMENT",
                            "IMAGE",
                            "VIDEO",
                            "LOCATION"
                        ],
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "format",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextMediaTemplateHeaderContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentMediaTemplateHeaderContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageMediaTemplateHeaderContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoMediaTemplateHeaderContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationMediaTemplateHeaderContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.WhatsAppContent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "TEXT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TextWhatsAppContent",
                        "IMAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ImageWithCaptionContent",
                        "LOCATION": "#/components/schemas/infobip-ccaas-conversation-service.openapi.LocationContent",
                        "VIDEO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.VideoWithCaptionContent",
                        "AUDIO": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AudioContent",
                        "DOCUMENT": "#/components/schemas/infobip-ccaas-conversation-service.openapi.DocumentWhatsAppContent",
                        "WHATSAPP_CONTACTS": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ContactsWhatsAppContent",
                        "TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.TemplateWhatsAppContent",
                        "MEDIA_TEMPLATE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.MediaTemplateWhatsAppContent",
                        "STICKER": "#/components/schemas/infobip-ccaas-conversation-service.openapi.StickerWhatsAppContent",
                        "INTERACTIVE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.InteractiveWhatsAppContent"
                    }
                }
            },
            "infobip-webrtc-amg.openapi.org.infobip.webrtc.amg.connector.model.application.AndroidPushNotificationConfig": {
                "required": [
                    "fcmServerKey"
                ],
                "type": "object",
                "properties": {
                    "fcmServerKey": {
                        "type": "string",
                        "description": "FCM Server Key used to enable Android push notifications."
                    }
                },
                "description": "Configuration used to enable Android push notifications."
            },
            "infobipapimanagement.openapi.people-dev.org.infobip.people.iam_model.IamAdditionalFieldDataType": {
                "title": "IamAdditionalFieldDataType",
                "enum": [
                    "STRING",
                    "DECIMAL",
                    "INTEGER",
                    "BOOLEAN",
                    "DATE",
                    "DATE_TIME",
                    "LIST_OF_OBJECTS"
                ],
                "type": "string"
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotButtonBackgroundFrame": {
                "type": "object",
                "properties": {
                    "borderWidth": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "borderColor": {
                        "pattern": "^[#]([A-Fa-f0-9]{6})$",
                        "type": "string"
                    },
                    "cornerRadius": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "infobipapimanagementmobile.openapi.push.org.infobip.push.common.PushStatusResponse": {
                "title": "PushStatusResponse",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Human readable description of the status."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Status group ID.",
                        "format": "int64"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Status group name."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Status ID.",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Status name."
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.ViberBotMoContent": {
                "type": "object",
                "properties": {
                    "messageToken": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "MESSAGE",
                            "DELIVERED",
                            "SUBSCRIBED",
                            "UNSUBSCRIBED",
                            "CONVERSATION_STARTED"
                        ],
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "MESSAGE": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotMessageMoContent",
                        "DELIVERED": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotDeliveredMoContent",
                        "SUBSCRIBED": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotSubscribedMoContent",
                        "UNSUBSCRIBED": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotUnsubscribedMoContent",
                        "CONVERSATION_STARTED": "#/components/schemas/infobip-ccaas-conversation-service.openapi.ViberBotConversationStartedMoContent"
                    }
                }
            },
            "infobip-ccaas-conversation-service.openapi.UriAction": {
                "required": [
                    "label",
                    "uri"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.Action"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uri": {
                                "maxLength": 1000,
                                "minLength": 0,
                                "type": "string"
                            },
                            "altUri": {
                                "$ref": "#/components/schemas/infobip-ccaas-conversation-service.openapi.AltUri"
                            }
                        }
                    }
                ]
            }
        },
        "securitySchemes": {
            "APIKeyHeader": {
                "type": "apiKey",
                "description": "This is the most secure authorization type and the one with the most flexibility.\n\nAPI keys can be generated by calling the dedicated API method. Furthermore, API keys can have a limited scope and cover only some API methods. Lastly, they can be revoked at any time. This range of possibilities makes API keys well suited for separating the API access rights across multiple applications or use cases. Finally, the loss of an API key is easily manageable.\n\nYou can manage your API keys from [GUI](https://portal.infobip.com/settings/accounts/api-keys), or programmatically with [dedicated API](#platform-&-connectivity/settings).\n\nAPI key Authorization header example:\n\n```shell\nAuthorization: App 003026bbc133714df1834b8638bb496e-8f4b3d9a-e931-478d-a994-28a725159ab9\n```\n",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Send WhatsApp Message",
            "description": ""
        },
        {
            "name": "Receive WhatsApp Message",
            "description": ""
        },
        {
            "name": "Manage WhatsApp",
            "description": ""
        }
    ]
}
